{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22","program":"/home/erik/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio","--edition=2018","/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"blocking\"","--cfg","feature=\"default\"","--cfg","feature=\"dns\"","--cfg","feature=\"fnv\"","--cfg","feature=\"fs\"","--cfg","feature=\"full\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"io-driver\"","--cfg","feature=\"io-std\"","--cfg","feature=\"io-util\"","--cfg","feature=\"iovec\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"libc\"","--cfg","feature=\"macros\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"mio-named-pipes\"","--cfg","feature=\"mio-uds\"","--cfg","feature=\"net\"","--cfg","feature=\"num_cpus\"","--cfg","feature=\"process\"","--cfg","feature=\"rt-core\"","--cfg","feature=\"rt-threaded\"","--cfg","feature=\"rt-util\"","--cfg","feature=\"signal\"","--cfg","feature=\"signal-hook-registry\"","--cfg","feature=\"slab\"","--cfg","feature=\"stream\"","--cfg","feature=\"sync\"","--cfg","feature=\"tcp\"","--cfg","feature=\"time\"","--cfg","feature=\"tokio-macros\"","--cfg","feature=\"udp\"","--cfg","feature=\"uds\"","--cfg","feature=\"winapi\"","-C","metadata=a69bb06191c66508","-C","extra-filename=-a69bb06191c66508","--out-dir","/home/erik/projects/benchwarmer/rust-warp/target/rls/debug/deps","-L","dependency=/home/erik/projects/benchwarmer/rust-warp/target/rls/debug/deps","--extern","bytes=/home/erik/projects/benchwarmer/rust-warp/target/rls/debug/deps/libbytes-060d9d2e342fea55.rmeta","--extern","fnv=/home/erik/projects/benchwarmer/rust-warp/target/rls/debug/deps/libfnv-eb40d7f241f41d96.rmeta","--extern","futures_core=/home/erik/projects/benchwarmer/rust-warp/target/rls/debug/deps/libfutures_core-0a96d7cf85a3c2c3.rmeta","--extern","iovec=/home/erik/projects/benchwarmer/rust-warp/target/rls/debug/deps/libiovec-3a1513266feaf280.rmeta","--extern","lazy_static=/home/erik/projects/benchwarmer/rust-warp/target/rls/debug/deps/liblazy_static-72923b2d9aa06af7.rmeta","--extern","libc=/home/erik/projects/benchwarmer/rust-warp/target/rls/debug/deps/liblibc-0d4e59a692e831a5.rmeta","--extern","memchr=/home/erik/projects/benchwarmer/rust-warp/target/rls/debug/deps/libmemchr-bf8a91ed480664b8.rmeta","--extern","mio=/home/erik/projects/benchwarmer/rust-warp/target/rls/debug/deps/libmio-b5ccd54c90bb9b6d.rmeta","--extern","mio_uds=/home/erik/projects/benchwarmer/rust-warp/target/rls/debug/deps/libmio_uds-f6a32f21128c26cb.rmeta","--extern","num_cpus=/home/erik/projects/benchwarmer/rust-warp/target/rls/debug/deps/libnum_cpus-377b7f3767757d66.rmeta","--extern","pin_project_lite=/home/erik/projects/benchwarmer/rust-warp/target/rls/debug/deps/libpin_project_lite-339cf16d2fe4c376.rmeta","--extern","signal_hook_registry=/home/erik/projects/benchwarmer/rust-warp/target/rls/debug/deps/libsignal_hook_registry-176923343ee9d9c6.rmeta","--extern","slab=/home/erik/projects/benchwarmer/rust-warp/target/rls/debug/deps/libslab-560a8b8f37310699.rmeta","--extern","tokio_macros=/home/erik/projects/benchwarmer/rust-warp/target/rls/debug/deps/libtokio_macros-1ee23a1485b3150d.so","--cap-lints","allow","--error-format=json","--sysroot","/home/erik/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/erik/projects/benchwarmer/rust-warp/target/rls/debug/deps/libtokio-a69bb06191c66508.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[15107106288642193347,7860893139879701375]},"crate_root":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src","external_crates":[{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7603043973503281951,6245179856538753269]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","num":2,"id":{"name":"core","disambiguator":[13741360846946026623,2672266499591153283]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4729845745352067521,14981637654352572000]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[9324331421111590993,11905740212167270908]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11392341838745785002,13287300438441731562]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8694337109875809164,2250367951223185901]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10935849247287619708,10935329660555626336]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5583458701817410803,1770096645244614441]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[4926505318506753650,8786990194761766393]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15262570485262297613,5690312430589388023]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16900335184017598038,9051488994794742296]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[528960645316233979,8037674519295179684]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4483237274112351560,17959943558012528736]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[384772052184402859,1578385820564656749]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[12301751291607961788,16569514459755551136]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4223616801544016660,17489963460572122123]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[3882963855561891520,1067502799155491607]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/try_join.rs","num":18,"id":{"name":"pin_project_lite","disambiguator":[5607807057461339522,6725694708519707567]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","num":19,"id":{"name":"bytes","disambiguator":[9563325628157816145,16945119949628178134]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","num":20,"id":{"name":"lazy_static","disambiguator":[14168987126381539521,8506224783846070473]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","num":21,"id":{"name":"futures_core","disambiguator":[17846188185908526815,16527903141768937787]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/platform.rs","num":22,"id":{"name":"mio","disambiguator":[2051277084995960436,9128092072753904221]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/platform.rs","num":23,"id":{"name":"net2","disambiguator":[8400393234454775239,17126035858816113492]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","num":24,"id":{"name":"libc","disambiguator":[6633540768226152883,12344341240980497631]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/platform.rs","num":25,"id":{"name":"cfg_if","disambiguator":[1190566754512566321,10025227971434305752]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","num":26,"id":{"name":"iovec","disambiguator":[14251424824728545626,15139761541143395833]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","num":27,"id":{"name":"slab","disambiguator":[10037718275070548263,9525692549315446920]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/platform.rs","num":28,"id":{"name":"log","disambiguator":[10114204379849795778,12803163658665565984]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","num":29,"id":{"name":"mio_uds","disambiguator":[690518566872989262,3656619760145528196]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","num":30,"id":{"name":"fnv","disambiguator":[3522494962685779484,17488360601927714710]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":31,"id":{"name":"tokio_macros","disambiguator":[3459562456453832216,5722381803172552430]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_until.rs","num":32,"id":{"name":"memchr","disambiguator":[12235781942138097695,15300030242497884672]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/mod.rs","num":33,"id":{"name":"num_cpus","disambiguator":[10137838086723700116,6863445633951192032]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","num":34,"id":{"name":"signal_hook_registry","disambiguator":[9625574534026938994,2447597841838441109]}},{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","num":35,"id":{"name":"arc_swap","disambiguator":[4316221392071144869,2240920073858626874]}}],"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":0,"byte_end":15827,"line_start":1,"line_end":436,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","byte_start":30868,"byte_end":30878,"line_start":2,"line_end":2,"column_start":29,"column_end":39},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","byte_start":30880,"byte_end":30887,"line_start":2,"line_end":2,"column_start":41,"column_end":48},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":814},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","byte_start":30915,"byte_end":30927,"line_start":3,"line_end":3,"column_start":26,"column_end":38},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":8493},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","byte_start":30953,"byte_end":30959,"line_start":6,"line_end":6,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":30390},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","byte_start":30979,"byte_end":30982,"line_start":7,"line_end":7,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":32838},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","byte_start":31003,"byte_end":31007,"line_start":8,"line_end":8,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":903},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8203381,"byte_end":8203393,"line_start":28,"line_end":28,"column_start":29,"column_end":41},"alias_span":null,"name":"canonicalize","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":913},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8203438,"byte_end":8203448,"line_start":31,"line_end":31,"column_start":27,"column_end":37},"alias_span":null,"name":"create_dir","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":923},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8203501,"byte_end":8203515,"line_start":34,"line_end":34,"column_start":31,"column_end":45},"alias_span":null,"name":"create_dir_all","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1301},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8203562,"byte_end":8203572,"line_start":37,"line_end":37,"column_start":28,"column_end":38},"alias_span":null,"name":"DirBuilder","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":967},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8203605,"byte_end":8203609,"line_start":40,"line_end":40,"column_start":21,"column_end":25},"alias_span":null,"name":"File","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1048},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8203652,"byte_end":8203661,"line_start":43,"line_end":43,"column_start":26,"column_end":35},"alias_span":null,"name":"hard_link","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1060},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8203702,"byte_end":8203710,"line_start":46,"line_end":46,"column_start":25,"column_end":33},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1329},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8203759,"byte_end":8203770,"line_start":49,"line_end":49,"column_start":29,"column_end":40},"alias_span":null,"name":"OpenOptions","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1097},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/mod.rs","byte_start":8253847,"byte_end":8253854,"line_start":4,"line_end":4,"column_start":24,"column_end":31},"alias_span":null,"name":"symlink","value":"","parent":{"krate":0,"index":1092}},{"kind":"Use","ref_id":{"krate":0,"index":1107},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/mod.rs","byte_start":8253911,"byte_end":8253925,"line_start":7,"line_end":7,"column_start":33,"column_end":47},"alias_span":null,"name":"OpenOptionsExt","value":"","parent":{"krate":0,"index":1092}},{"kind":"Use","ref_id":{"krate":0,"index":1116},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/mod.rs","byte_start":8253980,"byte_end":8253993,"line_start":10,"line_end":10,"column_start":32,"column_end":45},"alias_span":null,"name":"DirBuilderExt","value":"","parent":{"krate":0,"index":1092}},{"kind":"Use","ref_id":{"krate":0,"index":1126},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8203816,"byte_end":8203820,"line_start":54,"line_end":54,"column_start":21,"column_end":25},"alias_span":null,"name":"read","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1150},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8203862,"byte_end":8203870,"line_start":57,"line_end":57,"column_start":26,"column_end":34},"alias_span":null,"name":"read_dir","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1350},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8203872,"byte_end":8203880,"line_start":57,"line_end":57,"column_start":36,"column_end":44},"alias_span":null,"name":"DirEntry","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1336},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8203882,"byte_end":8203889,"line_start":57,"line_end":57,"column_start":46,"column_end":53},"alias_span":null,"name":"ReadDir","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1189},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8203933,"byte_end":8203942,"line_start":60,"line_end":60,"column_start":26,"column_end":35},"alias_span":null,"name":"read_link","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1200},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8203995,"byte_end":8204009,"line_start":63,"line_end":63,"column_start":31,"column_end":45},"alias_span":null,"name":"read_to_string","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1210},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8204054,"byte_end":8204064,"line_start":66,"line_end":66,"column_start":27,"column_end":37},"alias_span":null,"name":"remove_dir","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1220},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8204117,"byte_end":8204131,"line_start":69,"line_end":69,"column_start":31,"column_end":45},"alias_span":null,"name":"remove_dir_all","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1230},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8204178,"byte_end":8204189,"line_start":72,"line_end":72,"column_start":28,"column_end":39},"alias_span":null,"name":"remove_file","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1240},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8204226,"byte_end":8204232,"line_start":75,"line_end":75,"column_start":23,"column_end":29},"alias_span":null,"name":"rename","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1252},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8204287,"byte_end":8204302,"line_start":78,"line_end":78,"column_start":32,"column_end":47},"alias_span":null,"name":"set_permissions","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1263},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8204359,"byte_end":8204375,"line_start":81,"line_end":81,"column_start":33,"column_end":49},"alias_span":null,"name":"symlink_metadata","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1274},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8204410,"byte_end":8204415,"line_start":84,"line_end":84,"column_start":22,"column_end":27},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1284},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8204448,"byte_end":8204452,"line_start":87,"line_end":87,"column_start":21,"column_end":25},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":31111,"byte_end":31121,"line_start":6,"line_end":6,"column_start":22,"column_end":32},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":1355},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":31123,"byte_end":31132,"line_start":6,"line_end":6,"column_start":34,"column_end":43},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":31166,"byte_end":31173,"line_start":9,"line_end":9,"column_start":18,"column_end":25},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45085,"byte_end":45097,"line_start":187,"line_end":187,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45143,"byte_end":45152,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":246},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45197,"byte_end":45206,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":271},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45253,"byte_end":45263,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1731},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45359,"byte_end":45370,"line_start":203,"line_end":203,"column_start":27,"column_end":38},"alias_span":null,"name":"PollEvented","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1735},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45421,"byte_end":45433,"line_start":206,"line_end":206,"column_start":27,"column_end":39},"alias_span":null,"name":"Registration","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1787},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45489,"byte_end":45495,"line_start":211,"line_end":211,"column_start":22,"column_end":28},"alias_span":null,"name":"stderr","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1788},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45497,"byte_end":45503,"line_start":211,"line_end":211,"column_start":30,"column_end":36},"alias_span":null,"name":"Stderr","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1792},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45542,"byte_end":45547,"line_start":214,"line_end":214,"column_start":21,"column_end":26},"alias_span":null,"name":"stdin","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1793},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45549,"byte_end":45554,"line_start":214,"line_end":214,"column_start":28,"column_end":33},"alias_span":null,"name":"Stdin","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1797},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45595,"byte_end":45601,"line_start":217,"line_end":217,"column_start":22,"column_end":28},"alias_span":null,"name":"stdout","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1798},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45603,"byte_end":45609,"line_start":217,"line_end":217,"column_start":30,"column_end":36},"alias_span":null,"name":"Stdout","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1922},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45665,"byte_end":45670,"line_start":222,"line_end":222,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1916},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45672,"byte_end":45680,"line_start":222,"line_end":222,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1919},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45682,"byte_end":45691,"line_start":222,"line_end":222,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1924},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45744,"byte_end":45748,"line_start":225,"line_end":225,"column_start":25,"column_end":29},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2720},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45804,"byte_end":45808,"line_start":229,"line_end":229,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2742},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45810,"byte_end":45815,"line_start":229,"line_end":229,"column_start":15,"column_end":20},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2969},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45817,"byte_end":45823,"line_start":229,"line_end":229,"column_start":22,"column_end":28},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2984},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45825,"byte_end":45829,"line_start":229,"line_end":229,"column_start":30,"column_end":34},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2614},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45831,"byte_end":45846,"line_start":229,"line_end":229,"column_start":36,"column_end":51},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2622},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45848,"byte_end":45860,"line_start":229,"line_end":229,"column_start":53,"column_end":65},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2003},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45862,"byte_end":45874,"line_start":229,"line_end":229,"column_start":67,"column_end":79},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2674},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45876,"byte_end":45889,"line_start":229,"line_end":229,"column_start":81,"column_end":94},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":12234},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45899,"byte_end":45908,"line_start":230,"line_end":230,"column_start":9,"column_end":18},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":12207},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45910,"byte_end":45919,"line_start":230,"line_end":230,"column_start":20,"column_end":29},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":12157},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45921,"byte_end":45930,"line_start":230,"line_end":230,"column_start":31,"column_end":40},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2724},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45932,"byte_end":45936,"line_start":230,"line_end":230,"column_start":42,"column_end":46},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2740},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45938,"byte_end":45943,"line_start":230,"line_end":230,"column_start":48,"column_end":53},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":12069},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45945,"byte_end":45950,"line_start":230,"line_end":230,"column_start":55,"column_end":60},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2970},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45952,"byte_end":45958,"line_start":230,"line_end":230,"column_start":62,"column_end":68},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2982},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45960,"byte_end":45964,"line_start":230,"line_end":230,"column_start":70,"column_end":74},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":11235},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45966,"byte_end":45971,"line_start":230,"line_end":230,"column_start":76,"column_end":81},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":11146},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45973,"byte_end":45977,"line_start":230,"line_end":230,"column_start":83,"column_end":87},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":3000},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":46028,"byte_end":46041,"line_start":234,"line_end":234,"column_start":24,"column_end":37},"alias_span":null,"name":"stream_reader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":11188},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":46043,"byte_end":46055,"line_start":234,"line_end":234,"column_start":39,"column_end":51},"alias_span":null,"name":"StreamReader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":2591},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":46210,"byte_end":46215,"line_start":239,"line_end":239,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":6933},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":46217,"byte_end":46226,"line_start":239,"line_end":239,"column_start":30,"column_end":39},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":2589},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":46228,"byte_end":46234,"line_start":239,"line_end":239,"column_start":41,"column_end":47},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":319},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72675,"byte_end":72688,"line_start":26,"line_end":26,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3258},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72748,"byte_end":72759,"line_start":30,"line_end":30,"column_start":26,"column_end":37},"alias_span":null,"name":"lookup_host","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3529},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8504268,"byte_end":8504276,"line_start":7,"line_end":7,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":3263}},{"kind":"Use","ref_id":{"krate":0,"index":3535},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8504306,"byte_end":8504314,"line_start":10,"line_end":10,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":3263}},{"kind":"Use","ref_id":{"krate":0,"index":3542},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8504316,"byte_end":8504325,"line_start":10,"line_end":10,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":3263}},{"kind":"Use","ref_id":{"krate":0,"index":3549},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8504368,"byte_end":8504381,"line_start":13,"line_end":13,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":3263}},{"kind":"Use","ref_id":{"krate":0,"index":3553},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8504383,"byte_end":8504397,"line_start":13,"line_end":13,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":3263}},{"kind":"Use","ref_id":{"krate":0,"index":3558},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8504399,"byte_end":8504411,"line_start":13,"line_end":13,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3263}},{"kind":"Use","ref_id":{"krate":0,"index":3559},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8504399,"byte_end":8504411,"line_start":13,"line_end":13,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3420}},{"kind":"Use","ref_id":{"krate":0,"index":3527},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72819,"byte_end":72830,"line_start":35,"line_end":35,"column_start":28,"column_end":39},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3564},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72857,"byte_end":72866,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3700},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","byte_start":8564066,"byte_end":8564074,"line_start":7,"line_end":7,"column_start":17,"column_end":25},"alias_span":null,"name":"RecvHalf","value":"","parent":{"krate":0,"index":3566}},{"kind":"Use","ref_id":{"krate":0,"index":3705},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","byte_start":8564076,"byte_end":8564088,"line_start":7,"line_end":7,"column_start":27,"column_end":39},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3566}},{"kind":"Use","ref_id":{"krate":0,"index":3706},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","byte_start":8564076,"byte_end":8564088,"line_start":7,"line_end":7,"column_start":27,"column_end":39},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3690}},{"kind":"Use","ref_id":{"krate":0,"index":3695},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","byte_start":8564090,"byte_end":8564098,"line_start":7,"line_end":7,"column_start":41,"column_end":49},"alias_span":null,"name":"SendHalf","value":"","parent":{"krate":0,"index":3566}},{"kind":"Use","ref_id":{"krate":0,"index":3693},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72924,"byte_end":72933,"line_start":41,"line_end":41,"column_start":26,"column_end":35},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3956},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":8585154,"byte_end":8585162,"line_start":6,"line_end":6,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":3711}},{"kind":"Use","ref_id":{"krate":0,"index":3964},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":8585257,"byte_end":8585265,"line_start":12,"line_end":12,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":3711}},{"kind":"Use","ref_id":{"krate":0,"index":3971},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":8585267,"byte_end":8585276,"line_start":12,"line_end":12,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":3711}},{"kind":"Use","ref_id":{"krate":0,"index":3980},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":8585365,"byte_end":8585370,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"alias_span":null,"name":"UCred","value":"","parent":{"krate":0,"index":3711}},{"kind":"Use","ref_id":{"krate":0,"index":3954},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72995,"byte_end":73007,"line_start":46,"line_end":46,"column_start":29,"column_end":41},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3962},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":73037,"byte_end":73049,"line_start":47,"line_end":47,"column_start":29,"column_end":41},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3978},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":73077,"byte_end":73087,"line_start":48,"line_end":48,"column_start":27,"column_end":37},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":177},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105483,"byte_end":105485,"line_start":16,"line_end":16,"column_start":16,"column_end":18},"alias_span":null,"name":"io","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105494,"byte_end":105506,"line_start":16,"line_end":16,"column_start":27,"column_end":39},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105508,"byte_end":105517,"line_start":16,"line_end":16,"column_start":41,"column_end":50},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":271},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105519,"byte_end":105529,"line_start":16,"line_end":16,"column_start":52,"column_end":62},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":2614},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105594,"byte_end":105609,"line_start":20,"line_end":20,"column_start":25,"column_end":40},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":2622},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105616,"byte_end":105628,"line_start":20,"line_end":20,"column_start":47,"column_end":59},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":2003},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105635,"byte_end":105647,"line_start":20,"line_end":20,"column_start":66,"column_end":78},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":2674},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105654,"byte_end":105667,"line_start":20,"line_end":20,"column_start":85,"column_end":98},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":592},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113198,"byte_end":113205,"line_start":209,"line_end":209,"column_start":24,"column_end":31},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":562}},{"kind":"Use","ref_id":{"krate":0,"index":5265},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113290,"byte_end":113296,"line_start":215,"line_end":215,"column_start":24,"column_end":30},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":562}},{"kind":"Use","ref_id":{"krate":0,"index":670},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113298,"byte_end":113313,"line_start":215,"line_end":215,"column_start":32,"column_end":47},"alias_span":null,"name":"TryCurrentError","value":"","parent":{"krate":0,"index":562}},{"kind":"Use","ref_id":{"krate":0,"index":5755},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8825536,"byte_end":8825542,"line_start":47,"line_end":47,"column_start":17,"column_end":23},"alias_span":null,"name":"ctrl_c","value":"","parent":{"krate":0,"index":5750}},{"kind":"Use","ref_id":{"krate":0,"index":6009},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8862446,"byte_end":8862456,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"alias_span":null,"name":"FromStream","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":6101},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8862486,"byte_end":8862491,"line_start":21,"line_end":21,"column_start":17,"column_end":22},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":6541},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8862493,"byte_end":8862498,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":6202},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8862664,"byte_end":8862668,"line_start":36,"line_end":36,"column_start":16,"column_end":20},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":6548},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8862670,"byte_end":8862674,"line_start":36,"line_end":36,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":6292},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8862784,"byte_end":8862788,"line_start":48,"line_end":48,"column_start":16,"column_end":20},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":6562},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8862790,"byte_end":8862794,"line_start":48,"line_end":48,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":6315},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8862829,"byte_end":8862836,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":6568},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8862838,"byte_end":8862845,"line_start":51,"line_end":51,"column_start":28,"column_end":35},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":6575},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8862885,"byte_end":8862894,"line_start":54,"line_end":54,"column_start":21,"column_end":30},"alias_span":null,"name":"StreamMap","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":21,"index":68},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8863186,"byte_end":8863192,"line_start":77,"line_end":77,"column_start":23,"column_end":29},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":7952},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8981721,"byte_end":8981728,"line_start":433,"line_end":433,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":7964},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8981730,"byte_end":8981747,"line_start":433,"line_end":433,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":6922},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9030152,"byte_end":9030159,"line_start":70,"line_end":70,"column_start":25,"column_end":32},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":6821}},{"kind":"Use","ref_id":{"krate":0,"index":6916},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9030161,"byte_end":9030169,"line_start":70,"line_end":70,"column_start":34,"column_end":42},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":6821}},{"kind":"Use","ref_id":{"krate":0,"index":6907},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9030171,"byte_end":9030177,"line_start":70,"line_end":70,"column_start":44,"column_end":50},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":6821}},{"kind":"Use","ref_id":{"krate":0,"index":7194},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9030255,"byte_end":9030272,"line_start":77,"line_end":77,"column_start":27,"column_end":44},"alias_span":null,"name":"unbounded_channel","value":"","parent":{"krate":0,"index":6821}},{"kind":"Use","ref_id":{"krate":0,"index":7188},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9030274,"byte_end":9030291,"line_start":77,"line_end":77,"column_start":46,"column_end":63},"alias_span":null,"name":"UnboundedReceiver","value":"","parent":{"krate":0,"index":6821}},{"kind":"Use","ref_id":{"krate":0,"index":7179},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9030293,"byte_end":9030308,"line_start":77,"line_end":77,"column_start":65,"column_end":80},"alias_span":null,"name":"UnboundedSender","value":"","parent":{"krate":0,"index":6821}},{"kind":"Use","ref_id":{"krate":0,"index":8089},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8981972,"byte_end":8981977,"line_start":445,"line_end":445,"column_start":21,"column_end":26},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":7257},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8981979,"byte_end":8981989,"line_start":445,"line_end":445,"column_start":28,"column_end":38},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":8096},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8981991,"byte_end":8982003,"line_start":445,"line_end":445,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":7261},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8982005,"byte_end":8982020,"line_start":445,"line_end":445,"column_start":54,"column_end":69},"alias_span":null,"name":"OwnedMutexGuard","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":8101},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8982060,"byte_end":8982066,"line_start":448,"line_end":448,"column_start":21,"column_end":27},"alias_span":null,"name":"Notify","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":8234},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8982203,"byte_end":8982212,"line_start":455,"line_end":455,"column_start":25,"column_end":34},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":8238},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8982214,"byte_end":8982229,"line_start":455,"line_end":455,"column_start":36,"column_end":51},"alias_span":null,"name":"SemaphorePermit","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":8245},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8982231,"byte_end":8982251,"line_start":455,"line_end":455,"column_start":53,"column_end":73},"alias_span":null,"name":"OwnedSemaphorePermit","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":8255},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8982292,"byte_end":8982298,"line_start":458,"line_end":458,"column_start":22,"column_end":28},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":8262},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8982300,"byte_end":8982315,"line_start":458,"line_end":458,"column_start":30,"column_end":45},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":8271},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8982317,"byte_end":8982333,"line_start":458,"line_end":458,"column_start":47,"column_end":63},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":8345},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9254928,"byte_end":9254942,"line_start":219,"line_end":219,"column_start":23,"column_end":37},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":8337}},{"kind":"Use","ref_id":{"krate":0,"index":8342},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9254994,"byte_end":9255008,"line_start":222,"line_end":222,"column_start":27,"column_end":41},"alias_span":null,"name":"block_in_place","value":"","parent":{"krate":0,"index":8337}},{"kind":"Use","ref_id":{"krate":0,"index":4996},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9255069,"byte_end":9255078,"line_start":227,"line_end":227,"column_start":36,"column_end":45},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":8337}},{"kind":"Use","ref_id":{"krate":0,"index":4998},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9255080,"byte_end":9255090,"line_start":227,"line_end":227,"column_start":47,"column_end":57},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":8337}},{"kind":"Use","ref_id":{"krate":0,"index":8364},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9255128,"byte_end":9255133,"line_start":230,"line_end":230,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":8337}},{"kind":"Use","ref_id":{"krate":0,"index":8366},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9255178,"byte_end":9255187,"line_start":233,"line_end":233,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":8337}},{"kind":"Use","ref_id":{"krate":0,"index":8526},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9255242,"byte_end":9255253,"line_start":238,"line_end":238,"column_start":21,"column_end":32},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":8337}},{"kind":"Use","ref_id":{"krate":0,"index":8517},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9255255,"byte_end":9255263,"line_start":238,"line_end":238,"column_start":34,"column_end":42},"alias_span":null,"name":"LocalSet","value":"","parent":{"krate":0,"index":8337}},{"kind":"Use","ref_id":{"krate":0,"index":8469},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9255311,"byte_end":9255319,"line_start":241,"line_end":241,"column_start":25,"column_end":33},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":8337}},{"kind":"Use","ref_id":{"krate":0,"index":8364},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14562,"byte_end":14567,"line_start":389,"line_end":389,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9026},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9294428,"byte_end":9294438,"line_start":101,"line_end":101,"column_start":22,"column_end":32},"alias_span":null,"name":"DelayQueue","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":8632},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9294468,"byte_end":9294477,"line_start":104,"line_end":104,"column_start":17,"column_end":26},"alias_span":null,"name":"delay_for","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":8631},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9294479,"byte_end":9294490,"line_start":104,"line_end":104,"column_start":28,"column_end":39},"alias_span":null,"name":"delay_until","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":9068},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9294492,"byte_end":9294497,"line_start":104,"line_end":104,"column_start":41,"column_end":46},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":9125},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9294551,"byte_end":9294556,"line_start":109,"line_end":109,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":9137},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9294595,"byte_end":9294602,"line_start":112,"line_end":112,"column_start":24,"column_end":31},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":8885},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9294638,"byte_end":9294646,"line_start":115,"line_end":115,"column_start":20,"column_end":28},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":8886},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9294648,"byte_end":9294659,"line_start":115,"line_end":115,"column_start":30,"column_end":41},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":9160},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9294661,"byte_end":9294669,"line_start":115,"line_end":115,"column_start":43,"column_end":51},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":8913},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9294719,"byte_end":9294726,"line_start":119,"line_end":119,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":8915},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9294728,"byte_end":9294738,"line_start":119,"line_end":119,"column_start":28,"column_end":38},"alias_span":null,"name":"timeout_at","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":9165},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9294740,"byte_end":9294747,"line_start":119,"line_end":119,"column_start":40,"column_end":47},"alias_span":null,"name":"Elapsed","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":9611},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9294749,"byte_end":9294756,"line_start":119,"line_end":119,"column_start":49,"column_end":56},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":9187},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9294815,"byte_end":9294823,"line_start":123,"line_end":123,"column_start":24,"column_end":32},"alias_span":null,"name":"throttle","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":9563},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9294825,"byte_end":9294833,"line_start":123,"line_end":123,"column_start":34,"column_end":42},"alias_span":null,"name":"Throttle","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":2,"index":32702},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9294942,"byte_end":9294950,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":814},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/mod.rs","byte_start":179642,"byte_end":179654,"line_start":26,"line_end":26,"column_start":15,"column_end":27},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":765}},{"kind":"Use","ref_id":{"krate":31,"index":45},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14841,"byte_end":14872,"line_start":403,"line_end":403,"column_start":27,"column_end":58},"alias_span":null,"name":"select_priv_declare_output_enum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":31,"index":39},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":15208,"byte_end":15221,"line_start":412,"line_end":412,"column_start":35,"column_end":48},"alias_span":null,"name":"main","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":31,"index":42},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":15328,"byte_end":15341,"line_start":415,"line_end":415,"column_start":35,"column_end":48},"alias_span":null,"name":"test","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":0,"byte_end":15827,"line_start":1,"line_end":436,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":896},{"krate":0,"index":83},{"krate":0,"index":177},{"krate":0,"index":308},{"krate":0,"index":373},{"krate":0,"index":509},{"krate":0,"index":556},{"krate":0,"index":4103},{"krate":0,"index":562},{"krate":0,"index":746},{"krate":0,"index":5750},{"krate":0,"index":5931},{"krate":0,"index":6620},{"krate":0,"index":8337},{"krate":0,"index":8338},{"krate":0,"index":8541},{"krate":0,"index":765},{"krate":0,"index":9551},{"krate":0,"index":9552},{"krate":0,"index":9553}],"decl_id":null,"docs":" A runtime for writing reliable, asynchronous, and slim applications.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":56,"byte_end":168,"line_start":2,"line_end":6,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":169,"byte_end":275,"line_start":7,"line_end":12,"column_start":1,"column_end":3}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":276,"byte_end":319,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/ A runtime for writing reliable, asynchronous, and slim applications.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":518,"byte_end":590,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":591,"byte_end":594,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":595,"byte_end":675,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ applications with the Rust programming language. At a high level, it","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":676,"byte_end":748,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/ provides a few major components:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":749,"byte_end":785,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":786,"byte_end":789,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":790,"byte_end":857,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"/   [synchronization primitives and channels][sync] and [timeouts, delays, and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":858,"byte_end":938,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/   intervals][time].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":939,"byte_end":962,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"/ * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":963,"byte_end":1050,"line_start":30,"line_end":30,"column_start":1,"column_end":88}},{"value":"/   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1051,"byte_end":1124,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1125,"byte_end":1203,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1204,"byte_end":1284,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/   IOCP, etc...), and a high performance timer.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1285,"byte_end":1335,"line_start":34,"line_end":34,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1336,"byte_end":1339,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Guide level documentation is found on the [website].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1340,"byte_end":1396,"line_start":36,"line_end":36,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1397,"byte_end":1400,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [tasks]: #working-with-tasks","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1401,"byte_end":1433,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/ [sync]: crate::sync","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1434,"byte_end":1457,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/ [time]: crate::time","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1458,"byte_end":1481,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/ [io]: #asynchronous-io","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1482,"byte_end":1508,"line_start":41,"line_end":41,"column_start":1,"column_end":27}},{"value":"/ [net]: crate::net","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1509,"byte_end":1530,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1531,"byte_end":1550,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/ [process]: crate::process","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1551,"byte_end":1580,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ [signal]: crate::signal","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1581,"byte_end":1608,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1609,"byte_end":1628,"line_start":46,"line_end":46,"column_start":1,"column_end":20}},{"value":"/ [runtime]: crate::runtime","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1629,"byte_end":1658,"line_start":47,"line_end":47,"column_start":1,"column_end":30}},{"value":"/ [website]: https://tokio.rs/docs/overview/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1659,"byte_end":1705,"line_start":48,"line_end":48,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1706,"byte_end":1709,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # A Tour of Tokio","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1710,"byte_end":1731,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1732,"byte_end":1735,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1736,"byte_end":1815,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1816,"byte_end":1889,"line_start":53,"line_end":53,"column_start":1,"column_end":74}},{"value":"/ section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1890,"byte_end":1969,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"/ their uses.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1970,"byte_end":1985,"line_start":55,"line_end":55,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1986,"byte_end":1989,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The easiest way to get started is to enable all features. Do this by","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1990,"byte_end":2062,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/ enabling the `full` feature flag:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2063,"byte_end":2100,"line_start":58,"line_end":58,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2101,"byte_end":2104,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2105,"byte_end":2116,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2117,"byte_end":2169,"line_start":61,"line_end":61,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2170,"byte_end":2177,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2178,"byte_end":2181,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2182,"byte_end":2202,"line_start":64,"line_end":64,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2203,"byte_end":2206,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2207,"byte_end":2288,"line_start":66,"line_end":66,"column_start":1,"column_end":82}},{"value":"/ is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2289,"byte_end":2367,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ does not enable any features but allows one to enable a subset for their use","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2368,"byte_end":2448,"line_start":68,"line_end":68,"column_start":1,"column_end":81}},{"value":"/ case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2449,"byte_end":2526,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/ above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2527,"byte_end":2610,"line_start":70,"line_end":70,"column_start":1,"column_end":84}},{"value":"/ that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2611,"byte_end":2688,"line_start":71,"line_end":71,"column_start":1,"column_end":78}},{"value":"/ recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2689,"byte_end":2776,"line_start":72,"line_end":72,"column_start":1,"column_end":88}},{"value":"/ Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2777,"byte_end":2858,"line_start":73,"line_end":73,"column_start":1,"column_end":82}},{"value":"/ need.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2859,"byte_end":2868,"line_start":74,"line_end":74,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2869,"byte_end":2872,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ - `full`: Enables all Tokio public API features listed below.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2873,"byte_end":2938,"line_start":76,"line_end":76,"column_start":1,"column_end":66}},{"value":"/ - `rt-core`: Enables `tokio::spawn` and the basic (single-threaded) scheduler.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2939,"byte_end":3021,"line_start":77,"line_end":77,"column_start":1,"column_end":83}},{"value":"/ - `rt-threaded`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3022,"byte_end":3104,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"/ - `rt-util`: Enables non-scheduler utilities.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3105,"byte_end":3154,"line_start":79,"line_end":79,"column_start":1,"column_end":50}},{"value":"/ - `io-driver`: Enables the `mio` based IO driver.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3155,"byte_end":3208,"line_start":80,"line_end":80,"column_start":1,"column_end":54}},{"value":"/ - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3209,"byte_end":3260,"line_start":81,"line_end":81,"column_start":1,"column_end":52}},{"value":"/ - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3261,"byte_end":3321,"line_start":82,"line_end":82,"column_start":1,"column_end":61}},{"value":"/ - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and `UdpSocket`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3322,"byte_end":3412,"line_start":83,"line_end":83,"column_start":1,"column_end":91}},{"value":"/ - `tcp`: Enables all `tokio::net::tcp` types.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3413,"byte_end":3462,"line_start":84,"line_end":84,"column_start":1,"column_end":50}},{"value":"/ - `udp`: Enables all `tokio::net::udp` types.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3463,"byte_end":3512,"line_start":85,"line_end":85,"column_start":1,"column_end":50}},{"value":"/ - `uds`: Enables all `tokio::net::unix` types.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3513,"byte_end":3563,"line_start":86,"line_end":86,"column_start":1,"column_end":51}},{"value":"/ - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3564,"byte_end":3641,"line_start":87,"line_end":87,"column_start":1,"column_end":78}},{"value":"/ the built in timer.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3642,"byte_end":3665,"line_start":88,"line_end":88,"column_start":1,"column_end":24}},{"value":"/ - `process`: Enables `tokio::process` types.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3666,"byte_end":3714,"line_start":89,"line_end":89,"column_start":1,"column_end":49}},{"value":"/ - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3715,"byte_end":3784,"line_start":90,"line_end":90,"column_start":1,"column_end":70}},{"value":"/ - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3785,"byte_end":3831,"line_start":91,"line_end":91,"column_start":1,"column_end":47}},{"value":"/ - `stream`: Enables optional `Stream` implementations for types within Tokio.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3832,"byte_end":3913,"line_start":92,"line_end":92,"column_start":1,"column_end":82}},{"value":"/ - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3914,"byte_end":3964,"line_start":93,"line_end":93,"column_start":1,"column_end":51}},{"value":"/ - `fs`: Enables `tokio::fs` types.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3965,"byte_end":4003,"line_start":94,"line_end":94,"column_start":1,"column_end":39}},{"value":"/ - `dns`: Enables async `tokio::net::ToSocketAddrs`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4004,"byte_end":4059,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"/ - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4060,"byte_end":4138,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ - `blocking`: Enables `block_in_place` and `spawn_blocking`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4139,"byte_end":4203,"line_start":97,"line_end":97,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4204,"byte_end":4207,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4208,"byte_end":4290,"line_start":99,"line_end":99,"column_start":1,"column_end":83}},{"value":"/ always available._","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4291,"byte_end":4313,"line_start":100,"line_end":100,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4314,"byte_end":4317,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ### Internal features","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4318,"byte_end":4343,"line_start":102,"line_end":102,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4344,"byte_end":4347,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ These features do not expose any new API, but influence internal","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4348,"byte_end":4416,"line_start":104,"line_end":104,"column_start":1,"column_end":69}},{"value":"/ implementation aspects of Tokio, and can pull in additional","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4417,"byte_end":4480,"line_start":105,"line_end":105,"column_start":1,"column_end":64}},{"value":"/ dependencies. They are not included in `full`:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4481,"byte_end":4531,"line_start":106,"line_end":106,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4532,"byte_end":4535,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4536,"byte_end":4615,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"/ synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4616,"byte_end":4693,"line_start":109,"line_end":109,"column_start":1,"column_end":78}},{"value":"/ _parking_lot_ release in use.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4694,"byte_end":4727,"line_start":110,"line_end":110,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4728,"byte_end":4731,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4732,"byte_end":4829,"line_start":112,"line_end":112,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4830,"byte_end":4833,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ ### Authoring applications","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4834,"byte_end":4864,"line_start":114,"line_end":114,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4865,"byte_end":4868,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4869,"byte_end":4950,"line_start":116,"line_end":116,"column_start":1,"column_end":82}},{"value":"/ worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4951,"byte_end":5036,"line_start":117,"line_end":117,"column_start":1,"column_end":86}},{"value":"/ going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5037,"byte_end":5121,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"/ building your application.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5122,"byte_end":5152,"line_start":119,"line_end":119,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5153,"byte_end":5156,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5157,"byte_end":5173,"line_start":121,"line_end":121,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5174,"byte_end":5177,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ This example shows the quickest way to get started with Tokio.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5178,"byte_end":5244,"line_start":123,"line_end":123,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5245,"byte_end":5248,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5249,"byte_end":5260,"line_start":125,"line_end":125,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5261,"byte_end":5313,"line_start":126,"line_end":126,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5314,"byte_end":5321,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5322,"byte_end":5325,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ### Authoring libraries","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5326,"byte_end":5353,"line_start":129,"line_end":129,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5354,"byte_end":5357,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ As a library author your goal should be to provide the lighest weight crate","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5358,"byte_end":5437,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5438,"byte_end":5520,"line_start":132,"line_end":132,"column_start":1,"column_end":83}},{"value":"/ the features you need. This allows users to pick up your crate without having","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5521,"byte_end":5602,"line_start":133,"line_end":133,"column_start":1,"column_end":82}},{"value":"/ to enable unnecessary features.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5603,"byte_end":5638,"line_start":134,"line_end":134,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5639,"byte_end":5642,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5643,"byte_end":5659,"line_start":136,"line_end":136,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5660,"byte_end":5663,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This example shows how you may want to import features for a library that just","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5664,"byte_end":5746,"line_start":138,"line_end":138,"column_start":1,"column_end":83}},{"value":"/ needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5747,"byte_end":5797,"line_start":139,"line_end":139,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5798,"byte_end":5801,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5802,"byte_end":5813,"line_start":141,"line_end":141,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"rt-core\", \"tcp\"] }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5814,"byte_end":5876,"line_start":142,"line_end":142,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5877,"byte_end":5884,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5885,"byte_end":5888,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ## Working With Tasks","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5889,"byte_end":5914,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5915,"byte_end":5918,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5919,"byte_end":5995,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/ units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5996,"byte_end":6079,"line_start":148,"line_end":148,"column_start":1,"column_end":84}},{"value":"/ important tools for working with tasks:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6080,"byte_end":6123,"line_start":149,"line_end":149,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6124,"byte_end":6127,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6128,"byte_end":6207,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6208,"byte_end":6291,"line_start":152,"line_end":152,"column_start":1,"column_end":84}},{"value":"/ * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6292,"byte_end":6370,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/   task context.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6371,"byte_end":6390,"line_start":154,"line_end":154,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6391,"byte_end":6394,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::task`] module is present only when the \"rt-core\" feature flag","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6395,"byte_end":6473,"line_start":156,"line_end":156,"column_start":1,"column_end":79}},{"value":"/ is enabled.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6474,"byte_end":6489,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6490,"byte_end":6493,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [tasks]: task/index.html#what-are-tasks","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6494,"byte_end":6537,"line_start":159,"line_end":159,"column_start":1,"column_end":44}},{"value":"/ [`tokio::task`]: crate::task","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6538,"byte_end":6570,"line_start":160,"line_end":160,"column_start":1,"column_end":33}},{"value":"/ [`spawn`]: crate::task::spawn()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6571,"byte_end":6606,"line_start":161,"line_end":161,"column_start":1,"column_end":36}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6607,"byte_end":6650,"line_start":162,"line_end":162,"column_start":1,"column_end":44}},{"value":"/ [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6651,"byte_end":6704,"line_start":163,"line_end":163,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6705,"byte_end":6708,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6709,"byte_end":6787,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ needing to communicate or share data. These include:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6788,"byte_end":6844,"line_start":166,"line_end":166,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6845,"byte_end":6848,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6849,"byte_end":6922,"line_start":168,"line_end":168,"column_start":1,"column_end":74}},{"value":"/   between tasks,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6923,"byte_end":6943,"line_start":169,"line_end":169,"column_start":1,"column_end":21}},{"value":"/ * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6944,"byte_end":7019,"line_start":170,"line_end":170,"column_start":1,"column_end":76}},{"value":"/   value,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7020,"byte_end":7032,"line_start":171,"line_end":171,"column_start":1,"column_end":13}},{"value":"/ * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7033,"byte_end":7113,"line_start":172,"line_end":172,"column_start":1,"column_end":81}},{"value":"/   beginning a computation.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7114,"byte_end":7144,"line_start":173,"line_end":173,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7145,"byte_end":7148,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7149,"byte_end":7225,"line_start":175,"line_end":175,"column_start":1,"column_end":77}},{"value":"/ enabled.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7226,"byte_end":7238,"line_start":176,"line_end":176,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7239,"byte_end":7242,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ [`tokio::sync`]: crate::sync","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7243,"byte_end":7275,"line_start":178,"line_end":178,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: crate::sync::Mutex","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7276,"byte_end":7309,"line_start":179,"line_end":179,"column_start":1,"column_end":34}},{"value":"/ [`Barrier`]: crate::sync::Barrier","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7310,"byte_end":7347,"line_start":180,"line_end":180,"column_start":1,"column_end":38}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7348,"byte_end":7385,"line_start":181,"line_end":181,"column_start":1,"column_end":38}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7386,"byte_end":7417,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ [`watch`]: crate::sync::watch","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7418,"byte_end":7451,"line_start":183,"line_end":183,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7452,"byte_end":7455,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7456,"byte_end":7527,"line_start":185,"line_end":185,"column_start":1,"column_end":72}},{"value":"/ scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7528,"byte_end":7608,"line_start":186,"line_end":186,"column_start":1,"column_end":81}},{"value":"/ tasks, [delaying][delay] work to run in the future, or [repeating an operation at an","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7609,"byte_end":7697,"line_start":187,"line_end":187,"column_start":1,"column_end":89}},{"value":"/ interval][interval].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7698,"byte_end":7722,"line_start":188,"line_end":188,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7723,"byte_end":7726,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7727,"byte_end":7802,"line_start":190,"line_end":190,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7803,"byte_end":7806,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7807,"byte_end":7839,"line_start":192,"line_end":192,"column_start":1,"column_end":33}},{"value":"/ [delay]: crate::time::delay_for()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7840,"byte_end":7877,"line_start":193,"line_end":193,"column_start":1,"column_end":38}},{"value":"/ [interval]: crate::time::interval()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7878,"byte_end":7917,"line_start":194,"line_end":194,"column_start":1,"column_end":40}},{"value":"/ [timeout]: crate::time::timeout()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7918,"byte_end":7955,"line_start":195,"line_end":195,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7956,"byte_end":7959,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7960,"byte_end":8038,"line_start":197,"line_end":197,"column_start":1,"column_end":79}},{"value":"/ applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8039,"byte_end":8123,"line_start":198,"line_end":198,"column_start":1,"column_end":85}},{"value":"/ Tokio runtime. In use-cases where manual control over the runtime is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8124,"byte_end":8196,"line_start":199,"line_end":199,"column_start":1,"column_end":73}},{"value":"/ required, the [`tokio::runtime`] module provides APIs for configuring and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8197,"byte_end":8274,"line_start":200,"line_end":200,"column_start":1,"column_end":78}},{"value":"/ managing runtimes.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8275,"byte_end":8297,"line_start":201,"line_end":201,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8298,"byte_end":8301,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ Using the runtime requires the \"rt-core\" or \"rt-threaded\" feature flags, to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8302,"byte_end":8381,"line_start":203,"line_end":203,"column_start":1,"column_end":80}},{"value":"/ enable the basic [single-threaded scheduler][rt-core] and the [thread-pool","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8382,"byte_end":8460,"line_start":204,"line_end":204,"column_start":1,"column_end":79}},{"value":"/ scheduler][rt-threaded], respectively. See the [`runtime` module","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8461,"byte_end":8529,"line_start":205,"line_end":205,"column_start":1,"column_end":69}},{"value":"/ documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8530,"byte_end":8608,"line_start":206,"line_end":206,"column_start":1,"column_end":79}},{"value":"/ flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8609,"byte_end":8679,"line_start":207,"line_end":207,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8680,"byte_end":8683,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ [main]: attr.main.html","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8684,"byte_end":8710,"line_start":209,"line_end":209,"column_start":1,"column_end":27}},{"value":"/ [`tokio::runtime`]: crate::runtime","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8711,"byte_end":8749,"line_start":210,"line_end":210,"column_start":1,"column_end":39}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8750,"byte_end":8790,"line_start":211,"line_end":211,"column_start":1,"column_end":41}},{"value":"/ [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8791,"byte_end":8831,"line_start":212,"line_end":212,"column_start":1,"column_end":41}},{"value":"/ [rt-core]: runtime/index.html#basic-scheduler","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8832,"byte_end":8881,"line_start":213,"line_end":213,"column_start":1,"column_end":50}},{"value":"/ [rt-threaded]: runtime/index.html#threaded-scheduler","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8882,"byte_end":8938,"line_start":214,"line_end":214,"column_start":1,"column_end":57}},{"value":"/ [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8939,"byte_end":8994,"line_start":215,"line_end":215,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8995,"byte_end":8998,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ ## CPU-bound tasks and blocking code","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8999,"byte_end":9039,"line_start":217,"line_end":217,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9040,"byte_end":9043,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9044,"byte_end":9123,"line_start":219,"line_end":219,"column_start":1,"column_end":80}},{"value":"/ swapping the currently running task on each thread. However, this kind of","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9124,"byte_end":9201,"line_start":220,"line_end":220,"column_start":1,"column_end":78}},{"value":"/ swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9202,"byte_end":9282,"line_start":221,"line_end":221,"column_start":1,"column_end":81}},{"value":"/ without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9283,"byte_end":9357,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9358,"byte_end":9437,"line_start":223,"line_end":223,"column_start":1,"column_end":80}},{"value":"/ threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9438,"byte_end":9515,"line_start":224,"line_end":224,"column_start":1,"column_end":78}},{"value":"/ will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9516,"byte_end":9589,"line_start":225,"line_end":225,"column_start":1,"column_end":74}},{"value":"/ spawned on demand, and can be used to run blocking code that would otherwise","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9590,"byte_end":9670,"line_start":226,"line_end":226,"column_start":1,"column_end":81}},{"value":"/ block other tasks from running. Since it is not possible for Tokio to swap","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9671,"byte_end":9749,"line_start":227,"line_end":227,"column_start":1,"column_end":79}},{"value":"/ out blocking tasks, like it can do with asynchronous code, the upper limit","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9750,"byte_end":9828,"line_start":228,"line_end":228,"column_start":1,"column_end":79}},{"value":"/ on the number of blocking threads is very large. These limits can be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9829,"byte_end":9901,"line_start":229,"line_end":229,"column_start":1,"column_end":73}},{"value":"/ configured on the [`Builder`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9902,"byte_end":9936,"line_start":230,"line_end":230,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9937,"byte_end":9940,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9941,"byte_end":10018,"line_start":232,"line_end":232,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10019,"byte_end":10022,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10023,"byte_end":10063,"line_start":234,"line_end":234,"column_start":1,"column_end":41}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10064,"byte_end":10117,"line_start":235,"line_end":235,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10118,"byte_end":10121,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10122,"byte_end":10129,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10130,"byte_end":10148,"line_start":238,"line_end":238,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10149,"byte_end":10170,"line_start":239,"line_end":239,"column_start":1,"column_end":22}},{"value":"/     // This is running on a core thread.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10171,"byte_end":10215,"line_start":240,"line_end":240,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10216,"byte_end":10219,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10220,"byte_end":10280,"line_start":242,"line_end":242,"column_start":1,"column_end":61}},{"value":"/         // This is running on a blocking thread.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10281,"byte_end":10333,"line_start":243,"line_end":243,"column_start":1,"column_end":53}},{"value":"/         // Blocking here is ok.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10334,"byte_end":10369,"line_start":244,"line_end":244,"column_start":1,"column_end":36}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10370,"byte_end":10381,"line_start":245,"line_end":245,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10382,"byte_end":10385,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/     // We can wait for the blocking task like this:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10386,"byte_end":10441,"line_start":247,"line_end":247,"column_start":1,"column_end":56}},{"value":"/     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10442,"byte_end":10517,"line_start":248,"line_end":248,"column_start":1,"column_end":76}},{"value":"/     // panic.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10518,"byte_end":10535,"line_start":249,"line_end":249,"column_start":1,"column_end":18}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10536,"byte_end":10573,"line_start":250,"line_end":250,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10574,"byte_end":10579,"line_start":251,"line_end":251,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10580,"byte_end":10587,"line_start":252,"line_end":252,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10588,"byte_end":10591,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10592,"byte_end":10670,"line_start":254,"line_end":254,"column_start":1,"column_end":79}},{"value":"/ to run it, you should run it on another thread pool such as [rayon]. You","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10671,"byte_end":10747,"line_start":255,"line_end":255,"column_start":1,"column_end":77}},{"value":"/ can use an [`oneshot`] channel to send the result back to Tokio when the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10748,"byte_end":10824,"line_start":256,"line_end":256,"column_start":1,"column_end":77}},{"value":"/ rayon task finishes.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10825,"byte_end":10849,"line_start":257,"line_end":257,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10850,"byte_end":10853,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ [rayon]: https://docs.rs/rayon","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10854,"byte_end":10888,"line_start":259,"line_end":259,"column_start":1,"column_end":35}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10889,"byte_end":10926,"line_start":260,"line_end":260,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10927,"byte_end":10930,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ ## Asynchronous IO","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10931,"byte_end":10953,"line_start":262,"line_end":262,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10954,"byte_end":10957,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10958,"byte_end":11037,"line_start":264,"line_end":264,"column_start":1,"column_end":80}},{"value":"/ to perform input and output asynchronously.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11038,"byte_end":11085,"line_start":265,"line_end":265,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11086,"byte_end":11089,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11090,"byte_end":11169,"line_start":267,"line_end":267,"column_start":1,"column_end":80}},{"value":"/ the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11170,"byte_end":11250,"line_start":268,"line_end":268,"column_start":1,"column_end":81}},{"value":"/ when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11251,"byte_end":11331,"line_start":269,"line_end":269,"column_start":1,"column_end":81}},{"value":"/ functions for working with these traits, forming as an asynchronous","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11332,"byte_end":11403,"line_start":270,"line_end":270,"column_start":1,"column_end":72}},{"value":"/ counterpart to [`std::io`]. When the \"io-driver\" feature flag is enabled, it","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11404,"byte_end":11484,"line_start":271,"line_end":271,"column_start":1,"column_end":81}},{"value":"/ also provides utilities for library authors implementing I/O resources.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11485,"byte_end":11560,"line_start":272,"line_end":272,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11561,"byte_end":11564,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11565,"byte_end":11645,"line_start":274,"line_end":274,"column_start":1,"column_end":81}},{"value":"/ with the operating system asynchronously. These include:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11646,"byte_end":11706,"line_start":275,"line_end":275,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11707,"byte_end":11710,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11711,"byte_end":11790,"line_start":277,"line_end":277,"column_start":1,"column_end":80}},{"value":"/   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11791,"byte_end":11860,"line_start":278,"line_end":278,"column_start":1,"column_end":70}},{"value":"/ * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11861,"byte_end":11938,"line_start":279,"line_end":279,"column_start":1,"column_end":78}},{"value":"/   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11939,"byte_end":11995,"line_start":280,"line_end":280,"column_start":1,"column_end":57}},{"value":"/ * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11996,"byte_end":12076,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"/   (enabled by the \"signal\" feature flag),","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12077,"byte_end":12122,"line_start":282,"line_end":282,"column_start":1,"column_end":46}},{"value":"/ * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12123,"byte_end":12202,"line_start":283,"line_end":283,"column_start":1,"column_end":80}},{"value":"/   the \"process\" feature flag).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12203,"byte_end":12237,"line_start":284,"line_end":284,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12238,"byte_end":12241,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ [`tokio::io`]: crate::io","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12242,"byte_end":12270,"line_start":286,"line_end":286,"column_start":1,"column_end":29}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12271,"byte_end":12310,"line_start":287,"line_end":287,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12311,"byte_end":12352,"line_start":288,"line_end":288,"column_start":1,"column_end":42}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12353,"byte_end":12398,"line_start":289,"line_end":289,"column_start":1,"column_end":46}},{"value":"/ [`std::io`]: std::io","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12399,"byte_end":12423,"line_start":290,"line_end":290,"column_start":1,"column_end":25}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12424,"byte_end":12454,"line_start":291,"line_end":291,"column_start":1,"column_end":31}},{"value":"/ [TCP]: crate::net::tcp","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12455,"byte_end":12481,"line_start":292,"line_end":292,"column_start":1,"column_end":27}},{"value":"/ [UDP]: crate::net::udp","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12482,"byte_end":12508,"line_start":293,"line_end":293,"column_start":1,"column_end":27}},{"value":"/ [UDS]: crate::net::unix","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12509,"byte_end":12536,"line_start":294,"line_end":294,"column_start":1,"column_end":28}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12537,"byte_end":12565,"line_start":295,"line_end":295,"column_start":1,"column_end":29}},{"value":"/ [`std::fs`]: std::fs","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12566,"byte_end":12590,"line_start":296,"line_end":296,"column_start":1,"column_end":25}},{"value":"/ [`tokio::signal`]: crate::signal","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12591,"byte_end":12627,"line_start":297,"line_end":297,"column_start":1,"column_end":37}},{"value":"/ [`tokio::process`]: crate::process","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12628,"byte_end":12666,"line_start":298,"line_end":298,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12667,"byte_end":12670,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12671,"byte_end":12685,"line_start":300,"line_end":300,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12686,"byte_end":12689,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ A simple TCP echo server:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12690,"byte_end":12719,"line_start":302,"line_end":302,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12720,"byte_end":12723,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12724,"byte_end":12737,"line_start":304,"line_end":304,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12738,"byte_end":12770,"line_start":305,"line_end":305,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12771,"byte_end":12797,"line_start":306,"line_end":306,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12798,"byte_end":12801,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12802,"byte_end":12820,"line_start":308,"line_end":308,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12821,"byte_end":12884,"line_start":309,"line_end":309,"column_start":1,"column_end":64}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12885,"byte_end":12955,"line_start":310,"line_end":310,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12956,"byte_end":12959,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12960,"byte_end":12974,"line_start":312,"line_end":312,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12975,"byte_end":13034,"line_start":313,"line_end":313,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13035,"byte_end":13038,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13039,"byte_end":13076,"line_start":315,"line_end":315,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13077,"byte_end":13117,"line_start":316,"line_end":316,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13118,"byte_end":13121,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13122,"byte_end":13202,"line_start":318,"line_end":318,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13203,"byte_end":13225,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13226,"byte_end":13289,"line_start":320,"line_end":320,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13290,"byte_end":13330,"line_start":321,"line_end":321,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13331,"byte_end":13381,"line_start":322,"line_end":322,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13382,"byte_end":13417,"line_start":323,"line_end":323,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13418,"byte_end":13453,"line_start":324,"line_end":324,"column_start":1,"column_end":36}},{"value":"/                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13454,"byte_end":13537,"line_start":325,"line_end":325,"column_start":1,"column_end":84}},{"value":"/                         return;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13538,"byte_end":13573,"line_start":326,"line_end":326,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13574,"byte_end":13599,"line_start":327,"line_end":327,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13600,"byte_end":13622,"line_start":328,"line_end":328,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13623,"byte_end":13626,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13627,"byte_end":13669,"line_start":330,"line_end":330,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13670,"byte_end":13742,"line_start":331,"line_end":331,"column_start":1,"column_end":73}},{"value":"/                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13743,"byte_end":13821,"line_start":332,"line_end":332,"column_start":1,"column_end":79}},{"value":"/                     return;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13822,"byte_end":13853,"line_start":333,"line_end":333,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13854,"byte_end":13875,"line_start":334,"line_end":334,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13876,"byte_end":13893,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13894,"byte_end":13909,"line_start":336,"line_end":336,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13910,"byte_end":13919,"line_start":337,"line_end":337,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13920,"byte_end":13925,"line_start":338,"line_end":338,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13926,"byte_end":13933,"line_start":339,"line_end":339,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":884},{"krate":0,"index":888},{"krate":0,"index":890},{"krate":0,"index":79}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14122,"byte_end":14134,"line_start":345,"line_end":345,"column_start":1,"column_end":13}}]},{"kind":"Mod","id":{"krate":0,"index":79},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":896},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::fs","value":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","parent":null,"children":[{"krate":0,"index":897},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1121},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1297}],"decl_id":null,"docs":" Asynchronous file and standard stream adaptation.","sig":null,"attributes":[{"value":"cfg(feature = \"fs\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":18938,"byte_end":18960,"line_start":115,"line_end":115,"column_start":13,"column_end":35}},{"value":"cfg(not(loom))","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8202070,"byte_end":8202088,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ Asynchronous file and standard stream adaptation.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8202090,"byte_end":8202143,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8202144,"byte_end":8202147,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains utility methods and adapter types for input/output to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8202148,"byte_end":8202226,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ files or standard streams (`Stdin`, `Stdout`, `Stderr`), and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8202227,"byte_end":8202291,"line_start":6,"line_end":6,"column_start":1,"column_end":65}},{"value":"/ filesystem manipulation, for use within (and only within) a Tokio runtime.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8202292,"byte_end":8202370,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8202371,"byte_end":8202374,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Tasks run by *worker* threads should not block, as this could delay","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8202375,"byte_end":8202446,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/ servicing reactor events. Portable filesystem operations are blocking,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8202447,"byte_end":8202521,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ however. This module offers adapters which use a `blocking` annotation","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8202522,"byte_end":8202596,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ to inform the runtime that a blocking operation is required. When","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8202597,"byte_end":8202666,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ necessary, this allows the runtime to convert the current thread from a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8202667,"byte_end":8202742,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ *worker* to a *backup* thread, where blocking is acceptable.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8202743,"byte_end":8202807,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8202808,"byte_end":8202811,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8202812,"byte_end":8202824,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8202825,"byte_end":8202828,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Where possible, users should prefer the provided asynchronous-specific","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8202829,"byte_end":8202903,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ traits such as [`AsyncRead`], or methods returning a `Future` or `Poll`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8202904,"byte_end":8202979,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ type. Adaptions also extend to traits like `std::io::Read` where methods","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8202980,"byte_end":8203056,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ return `std::io::Result`. Be warned that these adapted methods may return","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8203057,"byte_end":8203134,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ `std::io::ErrorKind::WouldBlock` if a *worker* thread can not be converted","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8203135,"byte_end":8203213,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ to a *backup* thread immediately.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8203214,"byte_end":8203251,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8203252,"byte_end":8203255,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: https://docs.rs/tokio-io/0.1/tokio_io/trait.AsyncRead.html","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8203256,"byte_end":8203333,"line_start":25,"line_end":25,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":903},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8206613,"byte_end":8206625,"line_start":48,"line_end":48,"column_start":14,"column_end":26},"name":"canonicalize","qualname":"::fs::canonicalize::canonicalize","value":"pub async fn canonicalize<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical, absolute form of a path with all intermediate\n components normalized and symbolic links resolved.","sig":null,"attributes":[{"value":"/ Returns the canonical, absolute form of a path with all intermediate","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8205107,"byte_end":8205179,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ components normalized and symbolic links resolved.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8205180,"byte_end":8205234,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8205235,"byte_end":8205238,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::canonicalize`][std]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8205239,"byte_end":8205301,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8205302,"byte_end":8205305,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::canonicalize","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8205306,"byte_end":8205338,"line_start":11,"line_end":11,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8205339,"byte_end":8205342,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8205343,"byte_end":8205375,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8205376,"byte_end":8205379,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `realpath` function on Unix","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8205380,"byte_end":8205454,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ and the `CreateFile` and `GetFinalPathNameByHandle` functions on Windows.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8205455,"byte_end":8205532,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8205533,"byte_end":8205589,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8205590,"byte_end":8205593,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ On Windows, this converts the path to use [extended length path][path]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8205594,"byte_end":8205668,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ syntax, which allows your program to use longer path names, but means you","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8205669,"byte_end":8205746,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ can only join backslash-delimited paths to it, and it may be incompatible","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8205747,"byte_end":8205824,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ with other applications (if passed to the application on the command-line,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8205825,"byte_end":8205903,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ or written to a file another application may read).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8205904,"byte_end":8205959,"line_start":23,"line_end":23,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8205960,"byte_end":8205963,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8205964,"byte_end":8206049,"line_start":25,"line_end":25,"column_start":1,"column_end":86}},{"value":"/ [path]: https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247(v=vs.85).aspx#maxpath","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8206050,"byte_end":8206149,"line_start":26,"line_end":26,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8206150,"byte_end":8206153,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8206154,"byte_end":8206166,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8206167,"byte_end":8206170,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8206171,"byte_end":8206249,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8206250,"byte_end":8206282,"line_start":31,"line_end":31,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8206283,"byte_end":8206286,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ * `path` does not exist.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8206287,"byte_end":8206315,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ * A non-final component in path is not a directory.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8206316,"byte_end":8206371,"line_start":34,"line_end":34,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8206372,"byte_end":8206375,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8206376,"byte_end":8206390,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8206391,"byte_end":8206394,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8206395,"byte_end":8206408,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8206409,"byte_end":8206427,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/ use std::io;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8206428,"byte_end":8206444,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8206445,"byte_end":8206448,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8206449,"byte_end":8206467,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8206468,"byte_end":8206507,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/     let path = fs::canonicalize(\"../a/../foo.txt\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8206508,"byte_end":8206570,"line_start":44,"line_end":44,"column_start":1,"column_end":63}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8206571,"byte_end":8206585,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8206586,"byte_end":8206591,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8206592,"byte_end":8206599,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":913},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8208182,"byte_end":8208192,"line_start":49,"line_end":49,"column_start":14,"column_end":24},"name":"create_dir","qualname":"::fs::create_dir::create_dir","value":"pub async fn create_dir<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty directory at the provided path","sig":null,"attributes":[{"value":"/ Creates a new, empty directory at the provided path","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8206836,"byte_end":8206891,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8206892,"byte_end":8206895,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::create_dir`][std]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8206896,"byte_end":8206956,"line_start":8,"line_end":8,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8206957,"byte_end":8206960,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::create_dir","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8206961,"byte_end":8206991,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8206992,"byte_end":8206995,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8206996,"byte_end":8207028,"line_start":12,"line_end":12,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8207029,"byte_end":8207032,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `mkdir` function on Unix","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8207033,"byte_end":8207104,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ and the `CreateDirectory` function on Windows.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8207105,"byte_end":8207155,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8207156,"byte_end":8207212,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8207213,"byte_end":8207216,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8207217,"byte_end":8207302,"line_start":18,"line_end":18,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8207303,"byte_end":8207306,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ **NOTE**: If a parent of the given path doesn't exist, this function will","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8207307,"byte_end":8207384,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ return an error. To create a directory and all its missing parents at the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8207385,"byte_end":8207462,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ same time, use the [`create_dir_all`] function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8207463,"byte_end":8207514,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8207515,"byte_end":8207518,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8207519,"byte_end":8207531,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8207532,"byte_end":8207535,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8207536,"byte_end":8207614,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8207615,"byte_end":8207647,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8207648,"byte_end":8207651,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ * User lacks permissions to create directory at `path`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8207652,"byte_end":8207711,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/ * A parent of the given path doesn't exist. (To create a directory and all","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8207712,"byte_end":8207790,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   its missing parents at the same time, use the [`create_dir_all`]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8207791,"byte_end":8207861,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/   function.)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8207862,"byte_end":8207878,"line_start":32,"line_end":32,"column_start":1,"column_end":17}},{"value":"/ * `path` already exists.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8207879,"byte_end":8207907,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8207908,"byte_end":8207911,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`create_dir_all`]: super::create_dir_all()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8207912,"byte_end":8207959,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8207960,"byte_end":8207963,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8207964,"byte_end":8207978,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8207979,"byte_end":8207982,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8207983,"byte_end":8207996,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8207997,"byte_end":8208015,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/ use std::io;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8208016,"byte_end":8208032,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8208033,"byte_end":8208036,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8208037,"byte_end":8208055,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8208056,"byte_end":8208095,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/     fs::create_dir(\"/some/dir\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8208096,"byte_end":8208139,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8208140,"byte_end":8208154,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8208155,"byte_end":8208160,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8208161,"byte_end":8208168,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":923},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8209945,"byte_end":8209959,"line_start":50,"line_end":50,"column_start":14,"column_end":28},"name":"create_dir_all","qualname":"::fs::create_dir_all::create_dir_all","value":"pub async fn create_dir_all<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Recursively creates a directory and all of its parent components if they\n are missing.","sig":null,"attributes":[{"value":"/ Recursively creates a directory and all of its parent components if they","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8208396,"byte_end":8208472,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ are missing.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8208473,"byte_end":8208489,"line_start":7,"line_end":7,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8208490,"byte_end":8208493,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::create_dir_all`][std]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8208494,"byte_end":8208558,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8208559,"byte_end":8208562,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::create_dir_all","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8208563,"byte_end":8208597,"line_start":11,"line_end":11,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8208598,"byte_end":8208601,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8208602,"byte_end":8208634,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8208635,"byte_end":8208638,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `mkdir` function on Unix","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8208639,"byte_end":8208710,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ and the `CreateDirectory` function on Windows.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8208711,"byte_end":8208761,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8208762,"byte_end":8208818,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8208819,"byte_end":8208822,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8208823,"byte_end":8208908,"line_start":19,"line_end":19,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8208909,"byte_end":8208912,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8208913,"byte_end":8208925,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8208926,"byte_end":8208929,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8208930,"byte_end":8209008,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8209009,"byte_end":8209041,"line_start":24,"line_end":24,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8209042,"byte_end":8209045,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * If any directory in the path specified by `path` does not already exist","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8209046,"byte_end":8209123,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ and it could not be created otherwise. The specific error conditions for","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8209124,"byte_end":8209200,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ when a directory is being created (after it is determined to not exist) are","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8209201,"byte_end":8209280,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ outlined by [`fs::create_dir`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8209281,"byte_end":8209316,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8209317,"byte_end":8209320,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Notable exception is made for situations where any of the directories","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8209321,"byte_end":8209394,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ specified in the `path` could not be created as it was being created concurrently.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8209395,"byte_end":8209481,"line_start":32,"line_end":32,"column_start":1,"column_end":87}},{"value":"/ Such cases are considered to be successful. That is, calling `create_dir_all`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8209482,"byte_end":8209563,"line_start":33,"line_end":33,"column_start":1,"column_end":82}},{"value":"/ concurrently from multiple threads or processes is guaranteed not to fail","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8209564,"byte_end":8209641,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ due to a race condition with itself.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8209642,"byte_end":8209682,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8209683,"byte_end":8209686,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`fs::create_dir`]: std::fs::create_dir","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8209687,"byte_end":8209730,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8209731,"byte_end":8209734,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8209735,"byte_end":8209749,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8209750,"byte_end":8209753,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8209754,"byte_end":8209767,"line_start":41,"line_end":41,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8209768,"byte_end":8209786,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8209787,"byte_end":8209790,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8209791,"byte_end":8209809,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8209810,"byte_end":8209854,"line_start":45,"line_end":45,"column_start":1,"column_end":45}},{"value":"/     fs::create_dir_all(\"/some/dir\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8209855,"byte_end":8209902,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8209903,"byte_end":8209917,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8209918,"byte_end":8209923,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8209924,"byte_end":8209931,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1301},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8210575,"byte_end":8210585,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"DirBuilder","qualname":"::fs::dir_builder::DirBuilder","value":"DirBuilder {  }","parent":null,"children":[{"krate":0,"index":1302},{"krate":0,"index":1303}],"decl_id":null,"docs":" A builder for creating directories in various manners.","sig":null,"attributes":[{"value":"/ A builder for creating directories in various manners.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8210167,"byte_end":8210225,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8210226,"byte_end":8210229,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Additional Unix-specific options are available via importing the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8210230,"byte_end":8210298,"line_start":8,"line_end":8,"column_start":1,"column_end":69}},{"value":"/ [`DirBuilderExt`] trait.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8210299,"byte_end":8210327,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8210328,"byte_end":8210331,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::DirBuilder`] for usage on","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8210332,"byte_end":8210405,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ the Tokio runtime.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8210406,"byte_end":8210428,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8210429,"byte_end":8210432,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [std::fs::DirBuilder]: std::fs::DirBuilder","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8210433,"byte_end":8210479,"line_start":14,"line_end":14,"column_start":1,"column_end":47}},{"value":"/ [`DirBuilderExt`]: crate::fs::os::unix::DirBuilderExt","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8210480,"byte_end":8210537,"line_start":15,"line_end":15,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211224,"byte_end":8211227,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<DirBuilder>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new set of options with default mode/security settings for all\n platforms and also non-recursive.","sig":null,"attributes":[{"value":"/ Creates a new set of options with default mode/security settings for all","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8210819,"byte_end":8210895,"line_start":27,"line_end":27,"column_start":5,"column_end":81}},{"value":"/ platforms and also non-recursive.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8210900,"byte_end":8210937,"line_start":28,"line_end":28,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8210942,"byte_end":8210945,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::DirBuilder::new`][std]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8210950,"byte_end":8211015,"line_start":30,"line_end":30,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211020,"byte_end":8211023,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::DirBuilder::new","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211028,"byte_end":8211063,"line_start":32,"line_end":32,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211068,"byte_end":8211071,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211076,"byte_end":8211090,"line_start":34,"line_end":34,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211095,"byte_end":8211098,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211103,"byte_end":8211116,"line_start":36,"line_end":36,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211121,"byte_end":8211151,"line_start":37,"line_end":37,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211156,"byte_end":8211159,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let builder = DirBuilder::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211164,"byte_end":8211200,"line_start":39,"line_end":39,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211205,"byte_end":8211212,"line_start":40,"line_end":40,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211849,"byte_end":8211858,"line_start":62,"line_end":62,"column_start":12,"column_end":21},"name":"recursive","qualname":"<DirBuilder>::recursive","value":"pub fn recursive(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether to create directories recursively (including all parent directories).\n Parents that do not exist are created with the same security and permissions settings.","sig":null,"attributes":[{"value":"/ Indicates whether to create directories recursively (including all parent directories).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211278,"byte_end":8211369,"line_start":45,"line_end":45,"column_start":5,"column_end":96}},{"value":"/ Parents that do not exist are created with the same security and permissions settings.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211374,"byte_end":8211464,"line_start":46,"line_end":46,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211469,"byte_end":8211472,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This option defaults to `false`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211477,"byte_end":8211513,"line_start":48,"line_end":48,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211518,"byte_end":8211521,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::DirBuilder::recursive`][std]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211526,"byte_end":8211597,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211602,"byte_end":8211605,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::DirBuilder::recursive","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211610,"byte_end":8211651,"line_start":52,"line_end":52,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211656,"byte_end":8211659,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211664,"byte_end":8211678,"line_start":54,"line_end":54,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211683,"byte_end":8211686,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211691,"byte_end":8211704,"line_start":56,"line_end":56,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211709,"byte_end":8211739,"line_start":57,"line_end":57,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211744,"byte_end":8211747,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ let mut builder = DirBuilder::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211752,"byte_end":8211792,"line_start":59,"line_end":59,"column_start":5,"column_end":45}},{"value":"/ builder.recursive(true);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211797,"byte_end":8211825,"line_start":60,"line_end":60,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211830,"byte_end":8211837,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8213063,"byte_end":8213069,"line_start":103,"line_end":103,"column_start":18,"column_end":24},"name":"create","qualname":"<DirBuilder>::create","value":"pub async fn create<P: AsRef<Path>, '_>(&'_ Self, P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates the specified directory with the configured options.","sig":null,"attributes":[{"value":"/ Creates the specified directory with the configured options.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8211962,"byte_end":8212026,"line_start":67,"line_end":67,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212031,"byte_end":8212034,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ It is considered an error if the directory already exists unless","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212039,"byte_end":8212107,"line_start":69,"line_end":69,"column_start":5,"column_end":73}},{"value":"/ recursive mode is enabled.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212112,"byte_end":8212142,"line_start":70,"line_end":70,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212147,"byte_end":8212150,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::DirBuilder::create`][std]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212155,"byte_end":8212223,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212228,"byte_end":8212231,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::DirBuilder::create","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212236,"byte_end":8212274,"line_start":74,"line_end":74,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212279,"byte_end":8212282,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212287,"byte_end":8212299,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212304,"byte_end":8212307,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An error will be returned under the following circumstances:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212312,"byte_end":8212376,"line_start":78,"line_end":78,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212381,"byte_end":8212384,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ * Path already points to an existing file.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212389,"byte_end":8212435,"line_start":80,"line_end":80,"column_start":5,"column_end":51}},{"value":"/ * Path already points to an existing directory and the mode is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212440,"byte_end":8212506,"line_start":81,"line_end":81,"column_start":5,"column_end":71}},{"value":"/   non-recursive.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212511,"byte_end":8212531,"line_start":82,"line_end":82,"column_start":5,"column_end":25}},{"value":"/ * The calling process doesn't have permissions to create the directory","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212536,"byte_end":8212610,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/   or its missing parents.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212615,"byte_end":8212644,"line_start":84,"line_end":84,"column_start":5,"column_end":34}},{"value":"/ * Other I/O error occurred.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212649,"byte_end":8212680,"line_start":85,"line_end":85,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212685,"byte_end":8212688,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212693,"byte_end":8212707,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212712,"byte_end":8212715,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212720,"byte_end":8212733,"line_start":89,"line_end":89,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212738,"byte_end":8212768,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212773,"byte_end":8212789,"line_start":91,"line_end":91,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212794,"byte_end":8212797,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212802,"byte_end":8212820,"line_start":93,"line_end":93,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212825,"byte_end":8212864,"line_start":94,"line_end":94,"column_start":5,"column_end":44}},{"value":"/     DirBuilder::new()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212869,"byte_end":8212894,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/         .recursive(true)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212899,"byte_end":8212927,"line_start":96,"line_end":96,"column_start":5,"column_end":33}},{"value":"/         .create(\"/tmp/foo/bar/baz\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212932,"byte_end":8212971,"line_start":97,"line_end":97,"column_start":5,"column_end":44}},{"value":"/         .await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8212976,"byte_end":8212996,"line_start":98,"line_end":98,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8213001,"byte_end":8213004,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8213009,"byte_end":8213023,"line_start":100,"line_end":100,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8213028,"byte_end":8213033,"line_start":101,"line_end":101,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8213038,"byte_end":8213045,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":967},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8216075,"byte_end":8216079,"line_start":81,"line_end":81,"column_start":12,"column_end":16},"name":"File","qualname":"::fs::file::File","value":"File {  }","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970}],"decl_id":null,"docs":" A reference to an open file on the filesystem.","sig":null,"attributes":[{"value":"/ A reference to an open file on the filesystem.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8213942,"byte_end":8213992,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8213993,"byte_end":8213996,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::File`][std] for usage from the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8213997,"byte_end":8214075,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ Tokio runtime.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8214076,"byte_end":8214094,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8214095,"byte_end":8214098,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ An instance of a `File` can be read and/or written depending on what options","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8214099,"byte_end":8214179,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ it was opened with. Files also implement [`AsyncSeek`] to alter the logical","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8214180,"byte_end":8214259,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ cursor that the file contains internally.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8214260,"byte_end":8214305,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8214306,"byte_end":8214309,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ A file will not be closed immediately when it goes out of scope if there","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8214310,"byte_end":8214386,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ are any IO operations that have not yet completed. To ensure that a file is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8214387,"byte_end":8214466,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ closed immediately when it is dropped, you should call [`flush`] before","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8214467,"byte_end":8214542,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ dropping it. Note that this does not ensure that the file has been fully","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8214543,"byte_end":8214619,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ written to disk; the operating system might keep the changes around in an","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8214620,"byte_end":8214697,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ in-memory buffer. See the [`sync_all`] method for telling the OS to write","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8214698,"byte_end":8214775,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ the data to disk.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8214776,"byte_end":8214797,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8214798,"byte_end":8214801,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Reading and writing to a `File` is usually done using the convenience","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8214802,"byte_end":8214875,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/ methods found on the [`AsyncReadExt`] and [`AsyncWriteExt`] traits. Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8214876,"byte_end":8214956,"line_start":39,"line_end":39,"column_start":1,"column_end":81}},{"value":"/ import these traits through [the prelude].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8214957,"byte_end":8215003,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215004,"byte_end":8215007,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [std]: struct@std::fs::File","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215008,"byte_end":8215039,"line_start":42,"line_end":42,"column_start":1,"column_end":32}},{"value":"/ [`AsyncSeek`]: trait@crate::io::AsyncSeek","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215040,"byte_end":8215085,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ [`flush`]: fn@crate::io::AsyncWriteExt::flush","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215086,"byte_end":8215135,"line_start":44,"line_end":44,"column_start":1,"column_end":50}},{"value":"/ [`sync_all`]: fn@crate::fs::File::sync_all","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215136,"byte_end":8215182,"line_start":45,"line_end":45,"column_start":1,"column_end":47}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215183,"byte_end":8215234,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215235,"byte_end":8215288,"line_start":47,"line_end":47,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215289,"byte_end":8215322,"line_start":48,"line_end":48,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215323,"byte_end":8215326,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215327,"byte_end":8215341,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215342,"byte_end":8215345,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Create a new file and asynchronously write bytes to it:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215346,"byte_end":8215405,"line_start":52,"line_end":52,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215406,"byte_end":8215409,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215410,"byte_end":8215423,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215424,"byte_end":8215448,"line_start":55,"line_end":55,"column_start":1,"column_end":25}},{"value":"/ use tokio::prelude::*; // for write_all()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215449,"byte_end":8215494,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215495,"byte_end":8215498,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215499,"byte_end":8215544,"line_start":58,"line_end":58,"column_start":1,"column_end":46}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215545,"byte_end":8215595,"line_start":59,"line_end":59,"column_start":1,"column_end":51}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215596,"byte_end":8215640,"line_start":60,"line_end":60,"column_start":1,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215641,"byte_end":8215653,"line_start":61,"line_end":61,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215654,"byte_end":8215661,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215662,"byte_end":8215669,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215670,"byte_end":8215673,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Read the contents of a file into a buffer","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215674,"byte_end":8215719,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215720,"byte_end":8215723,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215724,"byte_end":8215737,"line_start":67,"line_end":67,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215738,"byte_end":8215762,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/ use tokio::prelude::*; // for read_to_end()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215763,"byte_end":8215810,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215811,"byte_end":8215814,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215815,"byte_end":8215860,"line_start":71,"line_end":71,"column_start":1,"column_end":46}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215861,"byte_end":8215909,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215910,"byte_end":8215913,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ let mut contents = vec![];","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215914,"byte_end":8215944,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215945,"byte_end":8215988,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215989,"byte_end":8215992,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ println!(\"len = {}\", contents.len());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8215993,"byte_end":8216034,"line_start":77,"line_end":77,"column_start":1,"column_end":42}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8216035,"byte_end":8216047,"line_start":78,"line_end":78,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8216048,"byte_end":8216055,"line_start":79,"line_end":79,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8216056,"byte_end":8216063,"line_start":80,"line_end":80,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8217625,"byte_end":8217629,"line_start":138,"line_end":138,"column_start":18,"column_end":22},"name":"open","qualname":"<File>::open","value":"pub async fn open<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Attempts to open a file in read-only mode.","sig":null,"attributes":[{"value":"/ Attempts to open a file in read-only mode.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8216594,"byte_end":8216640,"line_start":105,"line_end":105,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8216645,"byte_end":8216648,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ See [`OpenOptions`] for more details.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8216653,"byte_end":8216694,"line_start":107,"line_end":107,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8216699,"byte_end":8216702,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions`]: super::OpenOptions","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8216707,"byte_end":8216746,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8216751,"byte_end":8216754,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8216759,"byte_end":8216771,"line_start":111,"line_end":111,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8216776,"byte_end":8216779,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if called from outside of the Tokio","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8216784,"byte_end":8216858,"line_start":113,"line_end":113,"column_start":5,"column_end":79}},{"value":"/ runtime or if path does not already exist. Other errors may also be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8216863,"byte_end":8216934,"line_start":114,"line_end":114,"column_start":5,"column_end":76}},{"value":"/ returned according to OpenOptions::open.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8216939,"byte_end":8216983,"line_start":115,"line_end":115,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8216988,"byte_end":8216991,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8216996,"byte_end":8217010,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8217015,"byte_end":8217018,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8217023,"byte_end":8217036,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8217041,"byte_end":8217065,"line_start":120,"line_end":120,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8217070,"byte_end":8217096,"line_start":121,"line_end":121,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8217101,"byte_end":8217104,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8217109,"byte_end":8217154,"line_start":123,"line_end":123,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8217159,"byte_end":8217207,"line_start":124,"line_end":124,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8217212,"byte_end":8217215,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![];","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8217220,"byte_end":8217250,"line_start":126,"line_end":126,"column_start":5,"column_end":35}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8217255,"byte_end":8217298,"line_start":127,"line_end":127,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8217303,"byte_end":8217306,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ println!(\"len = {}\", contents.len());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8217311,"byte_end":8217352,"line_start":129,"line_end":129,"column_start":5,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8217357,"byte_end":8217369,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8217374,"byte_end":8217381,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8217386,"byte_end":8217393,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8217398,"byte_end":8217401,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ The [`read_to_end`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8217406,"byte_end":8217478,"line_start":134,"line_end":134,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8217483,"byte_end":8217486,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ [`read_to_end`]: fn@crate::io::AsyncReadExt::read_to_end","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8217491,"byte_end":8217551,"line_start":136,"line_end":136,"column_start":5,"column_end":65}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8217556,"byte_end":8217607,"line_start":137,"line_end":137,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8218847,"byte_end":8218853,"line_start":178,"line_end":178,"column_start":18,"column_end":24},"name":"create","qualname":"<File>::create","value":"pub async fn create<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in write-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in write-only mode.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8217826,"byte_end":8217862,"line_start":145,"line_end":145,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8217867,"byte_end":8217870,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This function will create a file if it does not exist, and will truncate","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8217875,"byte_end":8217951,"line_start":147,"line_end":147,"column_start":5,"column_end":81}},{"value":"/ it if it does.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8217956,"byte_end":8217974,"line_start":148,"line_end":148,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8217979,"byte_end":8217982,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ See [`OpenOptions`] for more details.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8217987,"byte_end":8218028,"line_start":150,"line_end":150,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8218033,"byte_end":8218036,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions`]: super::OpenOptions","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8218041,"byte_end":8218080,"line_start":152,"line_end":152,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8218085,"byte_end":8218088,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8218093,"byte_end":8218105,"line_start":154,"line_end":154,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8218110,"byte_end":8218113,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Results in an error if called from outside of the Tokio runtime or if","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8218118,"byte_end":8218191,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ the underlying [`create`] call results in an error.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8218196,"byte_end":8218251,"line_start":157,"line_end":157,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8218256,"byte_end":8218259,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ [`create`]: std::fs::File::create","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8218264,"byte_end":8218301,"line_start":159,"line_end":159,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8218306,"byte_end":8218309,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8218314,"byte_end":8218328,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8218333,"byte_end":8218336,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8218341,"byte_end":8218354,"line_start":163,"line_end":163,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8218359,"byte_end":8218383,"line_start":164,"line_end":164,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8218388,"byte_end":8218414,"line_start":165,"line_end":165,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8218419,"byte_end":8218422,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8218427,"byte_end":8218472,"line_start":167,"line_end":167,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8218477,"byte_end":8218527,"line_start":168,"line_end":168,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8218532,"byte_end":8218576,"line_start":169,"line_end":169,"column_start":5,"column_end":49}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8218581,"byte_end":8218593,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8218598,"byte_end":8218605,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8218610,"byte_end":8218617,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8218622,"byte_end":8218625,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8218630,"byte_end":8218701,"line_start":174,"line_end":174,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8218706,"byte_end":8218709,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8218714,"byte_end":8218771,"line_start":176,"line_end":176,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8218776,"byte_end":8218829,"line_start":177,"line_end":177,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8219490,"byte_end":8219498,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"from_std","qualname":"<File>::from_std","value":"pub fn from_std(sys::File) -> File","parent":null,"children":[],"decl_id":null,"docs":" Converts a [`std::fs::File`][std] to a [`tokio::fs::File`][file].","sig":null,"attributes":[{"value":"/ Converts a [`std::fs::File`][std] to a [`tokio::fs::File`][file].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8219066,"byte_end":8219135,"line_start":184,"line_end":184,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8219140,"byte_end":8219143,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8219148,"byte_end":8219172,"line_start":186,"line_end":186,"column_start":5,"column_end":29}},{"value":"/ [file]: File","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8219177,"byte_end":8219193,"line_start":187,"line_end":187,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8219198,"byte_end":8219201,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8219206,"byte_end":8219220,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8219225,"byte_end":8219228,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8219233,"byte_end":8219246,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/ // This line could block. It is not recommended to do this on the Tokio","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8219251,"byte_end":8219326,"line_start":192,"line_end":192,"column_start":5,"column_end":80}},{"value":"/ // runtime.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8219331,"byte_end":8219346,"line_start":193,"line_end":193,"column_start":5,"column_end":20}},{"value":"/ let std_file = std::fs::File::open(\"foo.txt\").unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8219351,"byte_end":8219410,"line_start":194,"line_end":194,"column_start":5,"column_end":64}},{"value":"/ let file = tokio::fs::File::from_std(std_file);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8219415,"byte_end":8219466,"line_start":195,"line_end":195,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8219471,"byte_end":8219478,"line_start":196,"line_end":196,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8220410,"byte_end":8220414,"line_start":229,"line_end":229,"column_start":18,"column_end":22},"name":"seek","qualname":"<File>::seek","value":"pub async fn seek<'_>(&'_ mut Self, SeekFrom) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Seeks to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Seeks to an offset, in bytes, in a stream.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8219688,"byte_end":8219734,"line_start":205,"line_end":205,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8219739,"byte_end":8219742,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8219747,"byte_end":8219761,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8219766,"byte_end":8219769,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8219774,"byte_end":8219787,"line_start":209,"line_end":209,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8219792,"byte_end":8219816,"line_start":210,"line_end":210,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8219821,"byte_end":8219847,"line_start":211,"line_end":211,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8219852,"byte_end":8219855,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ use std::io::SeekFrom;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8219860,"byte_end":8219886,"line_start":213,"line_end":213,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8219891,"byte_end":8219894,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8219899,"byte_end":8219944,"line_start":215,"line_end":215,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8219949,"byte_end":8219997,"line_start":216,"line_end":216,"column_start":5,"column_end":53}},{"value":"/ file.seek(SeekFrom::Start(6)).await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8220002,"byte_end":8220043,"line_start":217,"line_end":217,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8220048,"byte_end":8220051,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![0u8; 10];","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8220056,"byte_end":8220093,"line_start":219,"line_end":219,"column_start":5,"column_end":42}},{"value":"/ file.read_exact(&mut contents).await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8220098,"byte_end":8220140,"line_start":220,"line_end":220,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8220145,"byte_end":8220157,"line_start":221,"line_end":221,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8220162,"byte_end":8220169,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8220174,"byte_end":8220181,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8220186,"byte_end":8220189,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The [`read_exact`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8220194,"byte_end":8220265,"line_start":225,"line_end":225,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8220270,"byte_end":8220273,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ [`read_exact`]: fn@crate::io::AsyncReadExt::read_exact","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8220278,"byte_end":8220336,"line_start":227,"line_end":227,"column_start":5,"column_end":63}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8220341,"byte_end":8220392,"line_start":228,"line_end":228,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8222155,"byte_end":8222163,"line_start":290,"line_end":290,"column_start":18,"column_end":26},"name":"sync_all","qualname":"<File>::sync_all","value":"pub async fn sync_all<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Attempts to sync all OS-internal metadata to disk.","sig":null,"attributes":[{"value":"/ Attempts to sync all OS-internal metadata to disk.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8221399,"byte_end":8221453,"line_start":267,"line_end":267,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8221458,"byte_end":8221461,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ This function will attempt to ensure that all in-core data reaches the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8221466,"byte_end":8221540,"line_start":269,"line_end":269,"column_start":5,"column_end":79}},{"value":"/ filesystem before returning.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8221545,"byte_end":8221577,"line_start":270,"line_end":270,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8221582,"byte_end":8221585,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8221590,"byte_end":8221604,"line_start":272,"line_end":272,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8221609,"byte_end":8221612,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8221617,"byte_end":8221630,"line_start":274,"line_end":274,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8221635,"byte_end":8221659,"line_start":275,"line_end":275,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8221664,"byte_end":8221690,"line_start":276,"line_end":276,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8221695,"byte_end":8221698,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8221703,"byte_end":8221748,"line_start":278,"line_end":278,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8221753,"byte_end":8221803,"line_start":279,"line_end":279,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8221808,"byte_end":8221852,"line_start":280,"line_end":280,"column_start":5,"column_end":49}},{"value":"/ file.sync_all().await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8221857,"byte_end":8221884,"line_start":281,"line_end":281,"column_start":5,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8221889,"byte_end":8221901,"line_start":282,"line_end":282,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8221906,"byte_end":8221913,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8221918,"byte_end":8221925,"line_start":284,"line_end":284,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8221930,"byte_end":8221933,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8221938,"byte_end":8222009,"line_start":286,"line_end":286,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8222014,"byte_end":8222017,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8222022,"byte_end":8222079,"line_start":288,"line_end":288,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8222084,"byte_end":8222137,"line_start":289,"line_end":289,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8223304,"byte_end":8223313,"line_start":324,"line_end":324,"column_start":18,"column_end":27},"name":"sync_data","qualname":"<File>::sync_data","value":"pub async fn sync_data<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function is similar to `sync_all`, except that it may not\n synchronize file metadata to the filesystem.","sig":null,"attributes":[{"value":"/ This function is similar to `sync_all`, except that it may not","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8222330,"byte_end":8222396,"line_start":297,"line_end":297,"column_start":5,"column_end":71}},{"value":"/ synchronize file metadata to the filesystem.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8222401,"byte_end":8222449,"line_start":298,"line_end":298,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8222454,"byte_end":8222457,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This is intended for use cases that must synchronize content, but don't","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8222462,"byte_end":8222537,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/ need the metadata on disk. The goal of this method is to reduce disk","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8222542,"byte_end":8222614,"line_start":301,"line_end":301,"column_start":5,"column_end":77}},{"value":"/ operations.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8222619,"byte_end":8222634,"line_start":302,"line_end":302,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8222639,"byte_end":8222642,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Note that some platforms may simply implement this in terms of `sync_all`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8222647,"byte_end":8222725,"line_start":304,"line_end":304,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8222730,"byte_end":8222733,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8222738,"byte_end":8222752,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8222757,"byte_end":8222760,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8222765,"byte_end":8222778,"line_start":308,"line_end":308,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8222783,"byte_end":8222807,"line_start":309,"line_end":309,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8222812,"byte_end":8222838,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8222843,"byte_end":8222846,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8222851,"byte_end":8222896,"line_start":312,"line_end":312,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8222901,"byte_end":8222951,"line_start":313,"line_end":313,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8222956,"byte_end":8223000,"line_start":314,"line_end":314,"column_start":5,"column_end":49}},{"value":"/ file.sync_data().await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8223005,"byte_end":8223033,"line_start":315,"line_end":315,"column_start":5,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8223038,"byte_end":8223050,"line_start":316,"line_end":316,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8223055,"byte_end":8223062,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8223067,"byte_end":8223074,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8223079,"byte_end":8223082,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8223087,"byte_end":8223158,"line_start":320,"line_end":320,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8223163,"byte_end":8223166,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8223171,"byte_end":8223228,"line_start":322,"line_end":322,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8223233,"byte_end":8223286,"line_start":323,"line_end":323,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8224538,"byte_end":8224545,"line_start":361,"line_end":361,"column_start":18,"column_end":25},"name":"set_len","qualname":"<File>::set_len","value":"pub async fn set_len<'_>(&'_ mut Self, u64) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Truncates or extends the underlying file, updating the size of this file to become size.","sig":null,"attributes":[{"value":"/ Truncates or extends the underlying file, updating the size of this file to become size.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8223481,"byte_end":8223573,"line_start":331,"line_end":331,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8223578,"byte_end":8223581,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ If the size is less than the current file's size, then the file will be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8223586,"byte_end":8223661,"line_start":333,"line_end":333,"column_start":5,"column_end":80}},{"value":"/ shrunk. If it is greater than the current file's size, then the file","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8223666,"byte_end":8223738,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ will be extended to size and have all of the intermediate data filled in","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8223743,"byte_end":8223819,"line_start":335,"line_end":335,"column_start":5,"column_end":81}},{"value":"/ with 0s.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8223824,"byte_end":8223836,"line_start":336,"line_end":336,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8223841,"byte_end":8223844,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8223849,"byte_end":8223861,"line_start":338,"line_end":338,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8223866,"byte_end":8223869,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the file is not opened for","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8223874,"byte_end":8223942,"line_start":340,"line_end":340,"column_start":5,"column_end":73}},{"value":"/ writing.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8223947,"byte_end":8223959,"line_start":341,"line_end":341,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8223964,"byte_end":8223967,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8223972,"byte_end":8223986,"line_start":343,"line_end":343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8223991,"byte_end":8223994,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8223999,"byte_end":8224012,"line_start":345,"line_end":345,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8224017,"byte_end":8224041,"line_start":346,"line_end":346,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8224046,"byte_end":8224072,"line_start":347,"line_end":347,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8224077,"byte_end":8224080,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8224085,"byte_end":8224130,"line_start":349,"line_end":349,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8224135,"byte_end":8224185,"line_start":350,"line_end":350,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8224190,"byte_end":8224234,"line_start":351,"line_end":351,"column_start":5,"column_end":49}},{"value":"/ file.set_len(10).await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8224239,"byte_end":8224267,"line_start":352,"line_end":352,"column_start":5,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8224272,"byte_end":8224284,"line_start":353,"line_end":353,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8224289,"byte_end":8224296,"line_start":354,"line_end":354,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8224301,"byte_end":8224308,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8224313,"byte_end":8224316,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8224321,"byte_end":8224392,"line_start":357,"line_end":357,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8224397,"byte_end":8224400,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8224405,"byte_end":8224462,"line_start":359,"line_end":359,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8224467,"byte_end":8224520,"line_start":360,"line_end":360,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8226031,"byte_end":8226039,"line_start":417,"line_end":417,"column_start":18,"column_end":26},"name":"metadata","qualname":"<File>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Queries metadata about the underlying file.","sig":null,"attributes":[{"value":"/ Queries metadata about the underlying file.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8225645,"byte_end":8225692,"line_start":402,"line_end":402,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8225697,"byte_end":8225700,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8225705,"byte_end":8225719,"line_start":404,"line_end":404,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8225724,"byte_end":8225727,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8225732,"byte_end":8225745,"line_start":406,"line_end":406,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8225750,"byte_end":8225774,"line_start":407,"line_end":407,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8225779,"byte_end":8225782,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8225787,"byte_end":8225832,"line_start":409,"line_end":409,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8225837,"byte_end":8225881,"line_start":410,"line_end":410,"column_start":5,"column_end":49}},{"value":"/ let metadata = file.metadata().await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8225886,"byte_end":8225928,"line_start":411,"line_end":411,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8225933,"byte_end":8225936,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", metadata);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8225941,"byte_end":8225972,"line_start":413,"line_end":413,"column_start":5,"column_end":36}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8225977,"byte_end":8225989,"line_start":414,"line_end":414,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8225994,"byte_end":8226001,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8226006,"byte_end":8226013,"line_start":416,"line_end":416,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8226663,"byte_end":8226672,"line_start":437,"line_end":437,"column_start":18,"column_end":27},"name":"try_clone","qualname":"<File>::try_clone","value":"pub async fn try_clone<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Create a new `File` instance that shares the same underlying file handle\n as the existing `File` instance. Reads, writes, and seeks will affect both\n File instances simultaneously.","sig":null,"attributes":[{"value":"/ Create a new `File` instance that shares the same underlying file handle","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8226167,"byte_end":8226243,"line_start":422,"line_end":422,"column_start":5,"column_end":81}},{"value":"/ as the existing `File` instance. Reads, writes, and seeks will affect both","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8226248,"byte_end":8226326,"line_start":423,"line_end":423,"column_start":5,"column_end":83}},{"value":"/ File instances simultaneously.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8226331,"byte_end":8226365,"line_start":424,"line_end":424,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8226370,"byte_end":8226373,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8226378,"byte_end":8226392,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8226397,"byte_end":8226400,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8226405,"byte_end":8226418,"line_start":428,"line_end":428,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8226423,"byte_end":8226447,"line_start":429,"line_end":429,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8226452,"byte_end":8226455,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8226460,"byte_end":8226505,"line_start":431,"line_end":431,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8226510,"byte_end":8226554,"line_start":432,"line_end":432,"column_start":5,"column_end":49}},{"value":"/ let file_clone = file.try_clone().await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8226559,"byte_end":8226604,"line_start":433,"line_end":433,"column_start":5,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8226609,"byte_end":8226621,"line_start":434,"line_end":434,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8226626,"byte_end":8226633,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8226638,"byte_end":8226645,"line_start":436,"line_end":436,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227402,"byte_end":8227410,"line_start":461,"line_end":461,"column_start":18,"column_end":26},"name":"into_std","qualname":"<File>::into_std","value":"pub async fn into_std(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Destructures `File` into a [`std::fs::File`][std]. This function is\n async to allow any in-flight operations to complete.","sig":null,"attributes":[{"value":"/ Destructures `File` into a [`std::fs::File`][std]. This function is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8226851,"byte_end":8226922,"line_start":443,"line_end":443,"column_start":5,"column_end":76}},{"value":"/ async to allow any in-flight operations to complete.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8226927,"byte_end":8226983,"line_start":444,"line_end":444,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8226988,"byte_end":8226991,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ Use `File::try_into_std` to attempt conversion immediately.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8226996,"byte_end":8227059,"line_start":446,"line_end":446,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227064,"byte_end":8227067,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227072,"byte_end":8227096,"line_start":448,"line_end":448,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227101,"byte_end":8227104,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227109,"byte_end":8227123,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227128,"byte_end":8227131,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227136,"byte_end":8227149,"line_start":452,"line_end":452,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227154,"byte_end":8227178,"line_start":453,"line_end":453,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227183,"byte_end":8227186,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227191,"byte_end":8227236,"line_start":455,"line_end":455,"column_start":5,"column_end":50}},{"value":"/ let tokio_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227241,"byte_end":8227291,"line_start":456,"line_end":456,"column_start":5,"column_end":55}},{"value":"/ let std_file = tokio_file.into_std().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227296,"byte_end":8227343,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227348,"byte_end":8227360,"line_start":458,"line_end":458,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227365,"byte_end":8227372,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227377,"byte_end":8227384,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8228108,"byte_end":8228120,"line_start":486,"line_end":486,"column_start":12,"column_end":24},"name":"try_into_std","qualname":"<File>::try_into_std","value":"pub fn try_into_std(Self) -> Result<sys::File, Self>","parent":null,"children":[],"decl_id":null,"docs":" Tries to immediately destructure `File` into a [`std::fs::File`][std].","sig":null,"attributes":[{"value":"/ Tries to immediately destructure `File` into a [`std::fs::File`][std].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227554,"byte_end":8227628,"line_start":466,"line_end":466,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227633,"byte_end":8227636,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227641,"byte_end":8227665,"line_start":468,"line_end":468,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227670,"byte_end":8227673,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227678,"byte_end":8227690,"line_start":470,"line_end":470,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227695,"byte_end":8227698,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ This function will return an error containing the file if some","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227703,"byte_end":8227769,"line_start":472,"line_end":472,"column_start":5,"column_end":71}},{"value":"/ operation is in-flight.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227774,"byte_end":8227801,"line_start":473,"line_end":473,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227806,"byte_end":8227809,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227814,"byte_end":8227828,"line_start":475,"line_end":475,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227833,"byte_end":8227836,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227841,"byte_end":8227854,"line_start":477,"line_end":477,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227859,"byte_end":8227883,"line_start":478,"line_end":478,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227888,"byte_end":8227891,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227896,"byte_end":8227941,"line_start":480,"line_end":480,"column_start":5,"column_end":50}},{"value":"/ let tokio_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8227946,"byte_end":8227996,"line_start":481,"line_end":481,"column_start":5,"column_end":55}},{"value":"/ let std_file = tokio_file.try_into_std().unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8228001,"byte_end":8228055,"line_start":482,"line_end":482,"column_start":5,"column_end":59}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8228060,"byte_end":8228072,"line_start":483,"line_end":483,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8228077,"byte_end":8228084,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8228089,"byte_end":8228096,"line_start":485,"line_end":485,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8229398,"byte_end":8229413,"line_start":525,"line_end":525,"column_start":18,"column_end":33},"name":"set_permissions","qualname":"<File>::set_permissions","value":"pub async fn set_permissions<'_>(&'_ Self, Permissions) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions on the underlying file.","sig":null,"attributes":[{"value":"/ Changes the permissions on the underlying file.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8228373,"byte_end":8228424,"line_start":496,"line_end":496,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8228429,"byte_end":8228432,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8228437,"byte_end":8228469,"line_start":498,"line_end":498,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8228474,"byte_end":8228477,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ This function currently corresponds to the `fchmod` function on Unix and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8228482,"byte_end":8228558,"line_start":500,"line_end":500,"column_start":5,"column_end":81}},{"value":"/ the `SetFileInformationByHandle` function on Windows. Note that, this","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8228563,"byte_end":8228636,"line_start":501,"line_end":501,"column_start":5,"column_end":78}},{"value":"/ [may change in the future][changes].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8228641,"byte_end":8228681,"line_start":502,"line_end":502,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8228686,"byte_end":8228689,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8228694,"byte_end":8228779,"line_start":504,"line_end":504,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8228784,"byte_end":8228787,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8228792,"byte_end":8228804,"line_start":506,"line_end":506,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8228809,"byte_end":8228812,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the user lacks permission change","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8228817,"byte_end":8228891,"line_start":508,"line_end":508,"column_start":5,"column_end":79}},{"value":"/ attributes on the underlying file. It may also return an error in other","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8228896,"byte_end":8228971,"line_start":509,"line_end":509,"column_start":5,"column_end":80}},{"value":"/ os-specific unspecified cases.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8228976,"byte_end":8229010,"line_start":510,"line_end":510,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8229015,"byte_end":8229018,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8229023,"byte_end":8229037,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8229042,"byte_end":8229045,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8229050,"byte_end":8229063,"line_start":514,"line_end":514,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8229068,"byte_end":8229092,"line_start":515,"line_end":515,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8229097,"byte_end":8229100,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8229105,"byte_end":8229150,"line_start":517,"line_end":517,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8229155,"byte_end":8229199,"line_start":518,"line_end":518,"column_start":5,"column_end":49}},{"value":"/ let mut perms = file.metadata().await?.permissions();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8229204,"byte_end":8229261,"line_start":519,"line_end":519,"column_start":5,"column_end":62}},{"value":"/ perms.set_readonly(true);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8229266,"byte_end":8229295,"line_start":520,"line_end":520,"column_start":5,"column_end":34}},{"value":"/ file.set_permissions(perms).await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8229300,"byte_end":8229339,"line_start":521,"line_end":521,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8229344,"byte_end":8229356,"line_start":522,"line_end":522,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8229361,"byte_end":8229368,"line_start":523,"line_end":523,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8229373,"byte_end":8229380,"line_start":524,"line_end":524,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1048},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8239419,"byte_end":8239428,"line_start":41,"line_end":41,"column_start":14,"column_end":23},"name":"hard_link","qualname":"::fs::hard_link::hard_link","value":"pub async fn hard_link<impl AsRef<Path>: AsRef<Path>,\n                       impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                      impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new hard link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new hard link on the filesystem.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8238372,"byte_end":8238418,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8238419,"byte_end":8238422,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::hard_link`][std]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8238423,"byte_end":8238482,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8238483,"byte_end":8238486,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::hard_link","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8238487,"byte_end":8238516,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8238517,"byte_end":8238520,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a link pointing to the `src` path. Note that systems","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8238521,"byte_end":8238600,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ often require these two paths to both be located on the same filesystem.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8238601,"byte_end":8238677,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8238678,"byte_end":8238681,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8238682,"byte_end":8238714,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8238715,"byte_end":8238718,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `link` function on Unix","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8238719,"byte_end":8238789,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ and the `CreateHardLink` function on Windows.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8238790,"byte_end":8238839,"line_start":18,"line_end":18,"column_start":1,"column_end":50}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8238840,"byte_end":8238896,"line_start":19,"line_end":19,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8238897,"byte_end":8238900,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8238901,"byte_end":8238986,"line_start":21,"line_end":21,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8238987,"byte_end":8238990,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8238991,"byte_end":8239003,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8239004,"byte_end":8239007,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8239008,"byte_end":8239086,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8239087,"byte_end":8239119,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8239120,"byte_end":8239123,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ * The `src` path is not a file or doesn't exist.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8239124,"byte_end":8239176,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8239177,"byte_end":8239180,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8239181,"byte_end":8239195,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8239196,"byte_end":8239199,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8239200,"byte_end":8239213,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8239214,"byte_end":8239232,"line_start":33,"line_end":33,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8239233,"byte_end":8239236,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8239237,"byte_end":8239255,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8239256,"byte_end":8239300,"line_start":36,"line_end":36,"column_start":1,"column_end":45}},{"value":"/     fs::hard_link(\"a.txt\", \"b.txt\").await?; // Hard link a.txt to b.txt","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8239301,"byte_end":8239376,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8239377,"byte_end":8239391,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8239392,"byte_end":8239397,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8239398,"byte_end":8239405,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1060},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8240823,"byte_end":8240831,"line_start":44,"line_end":44,"column_start":14,"column_end":22},"name":"metadata","qualname":"::fs::metadata::metadata","value":"pub async fn metadata<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Given a path, queries the file system to get information about a file,\n directory, etc.","sig":null,"attributes":[{"value":"/ Given a path, queries the file system to get information about a file,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8239718,"byte_end":8239792,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ directory, etc.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8239793,"byte_end":8239812,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8239813,"byte_end":8239816,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::metadata`][std]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8239817,"byte_end":8239875,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8239876,"byte_end":8239879,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8239880,"byte_end":8239957,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ destination file.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8239958,"byte_end":8239979,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8239980,"byte_end":8239983,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8239984,"byte_end":8240016,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8240017,"byte_end":8240020,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `stat` function on Unix and the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8240021,"byte_end":8240099,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ `GetFileAttributesEx` function on Windows.  Note that, this [may change in","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8240100,"byte_end":8240178,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ the future][changes].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8240179,"byte_end":8240204,"line_start":19,"line_end":19,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8240205,"byte_end":8240208,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::metadata","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8240209,"byte_end":8240237,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8240238,"byte_end":8240323,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8240324,"byte_end":8240327,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8240328,"byte_end":8240340,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8240341,"byte_end":8240344,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8240345,"byte_end":8240423,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8240424,"byte_end":8240456,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8240457,"byte_end":8240460,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ * The user lacks permissions to perform `metadata` call on `path`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8240461,"byte_end":8240531,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ * `path` does not exist.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8240532,"byte_end":8240560,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8240561,"byte_end":8240564,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8240565,"byte_end":8240579,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8240580,"byte_end":8240583,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8240584,"byte_end":8240602,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8240603,"byte_end":8240621,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8240622,"byte_end":8240625,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8240626,"byte_end":8240644,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8240645,"byte_end":8240689,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/     let attr = fs::metadata(\"/some/file/path.txt\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8240690,"byte_end":8240752,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/     // inspect attr ...","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8240753,"byte_end":8240780,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8240781,"byte_end":8240795,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8240796,"byte_end":8240801,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8240802,"byte_end":8240809,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1329},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242927,"byte_end":8242938,"line_start":72,"line_end":72,"column_start":12,"column_end":23},"name":"OpenOptions","qualname":"::fs::open_options::OpenOptions","value":"","parent":null,"children":[],"decl_id":null,"docs":" Options and flags which can be used to configure how a file is opened.","sig":null,"attributes":[{"value":"/ Options and flags which can be used to configure how a file is opened.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8241042,"byte_end":8241116,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8241117,"byte_end":8241120,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This builder exposes the ability to configure how a [`File`] is opened and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8241121,"byte_end":8241199,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ what operations are permitted on the open file. The [`File::open`] and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8241200,"byte_end":8241274,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ [`File::create`] methods are aliases for commonly used options using this","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8241275,"byte_end":8241352,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ builder.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8241353,"byte_end":8241365,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8241366,"byte_end":8241369,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Generally speaking, when using `OpenOptions`, you'll first call [`new`],","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8241370,"byte_end":8241446,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ then chain calls to methods to set each option, then call [`open`], passing","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8241447,"byte_end":8241526,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ the path of the file you're trying to open. This will give you a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8241527,"byte_end":8241595,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ [`io::Result`][result] with a [`File`] inside that you can further operate","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8241596,"byte_end":8241674,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ on.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8241675,"byte_end":8241682,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8241683,"byte_end":8241686,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::OpenOptions`] for usage from","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8241687,"byte_end":8241763,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ the Tokio runtime.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8241764,"byte_end":8241786,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8241787,"byte_end":8241790,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ `From<std::fs::OpenOptions>` is implemented for more advanced configuration","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8241791,"byte_end":8241870,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ than the methods provided here.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8241871,"byte_end":8241906,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8241907,"byte_end":8241910,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`new`]: OpenOptions::new","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8241911,"byte_end":8241940,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ [`open`]: OpenOptions::open","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8241941,"byte_end":8241972,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"/ [result]: std::io::Result","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8241973,"byte_end":8242002,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ [`File`]: File","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242003,"byte_end":8242021,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ [`File::open`]: File::open","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242022,"byte_end":8242052,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/ [`File::create`]: File::create","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242053,"byte_end":8242087,"line_start":30,"line_end":30,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::OpenOptions`]: std::fs::OpenOptions","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242088,"byte_end":8242138,"line_start":31,"line_end":31,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242139,"byte_end":8242142,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242143,"byte_end":8242157,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242158,"byte_end":8242161,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Opening a file to read:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242162,"byte_end":8242189,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242190,"byte_end":8242193,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242194,"byte_end":8242207,"line_start":37,"line_end":37,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242208,"byte_end":8242239,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/ use std::io;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242240,"byte_end":8242256,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242257,"byte_end":8242260,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242261,"byte_end":8242279,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242280,"byte_end":8242319,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242320,"byte_end":8242357,"line_start":43,"line_end":43,"column_start":1,"column_end":38}},{"value":"/         .read(true)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242358,"byte_end":8242381,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242382,"byte_end":8242410,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/         .await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242411,"byte_end":8242431,"line_start":46,"line_end":46,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242432,"byte_end":8242435,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242436,"byte_end":8242450,"line_start":48,"line_end":48,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242451,"byte_end":8242456,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242457,"byte_end":8242464,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242465,"byte_end":8242468,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Opening a file for both reading and writing, as well as creating it if it","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242469,"byte_end":8242546,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ doesn't exist:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242547,"byte_end":8242565,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242566,"byte_end":8242569,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242570,"byte_end":8242583,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242584,"byte_end":8242615,"line_start":56,"line_end":56,"column_start":1,"column_end":32}},{"value":"/ use std::io;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242616,"byte_end":8242632,"line_start":57,"line_end":57,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242633,"byte_end":8242636,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242637,"byte_end":8242655,"line_start":59,"line_end":59,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242656,"byte_end":8242695,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242696,"byte_end":8242733,"line_start":61,"line_end":61,"column_start":1,"column_end":38}},{"value":"/         .read(true)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242734,"byte_end":8242757,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/         .write(true)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242758,"byte_end":8242782,"line_start":63,"line_end":63,"column_start":1,"column_end":25}},{"value":"/         .create(true)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242783,"byte_end":8242808,"line_start":64,"line_end":64,"column_start":1,"column_end":26}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242809,"byte_end":8242837,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"/         .await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242838,"byte_end":8242858,"line_start":66,"line_end":66,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242859,"byte_end":8242862,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242863,"byte_end":8242877,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242878,"byte_end":8242883,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242884,"byte_end":8242891,"line_start":70,"line_end":70,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243459,"byte_end":8243462,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenOptions>::new","value":"pub fn new() -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank new set of options ready for configuration.","sig":null,"attributes":[{"value":"/ Creates a blank new set of options ready for configuration.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242986,"byte_end":8243049,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243054,"byte_end":8243057,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ All options are initially set to `false`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243062,"byte_end":8243107,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243112,"byte_end":8243115,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::new`][std]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243120,"byte_end":8243186,"line_start":79,"line_end":79,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243191,"byte_end":8243194,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::new","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243199,"byte_end":8243235,"line_start":81,"line_end":81,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243240,"byte_end":8243243,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243248,"byte_end":8243262,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243267,"byte_end":8243270,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243275,"byte_end":8243288,"line_start":85,"line_end":85,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243293,"byte_end":8243324,"line_start":86,"line_end":86,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243329,"byte_end":8243332,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let mut options = OpenOptions::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243337,"byte_end":8243378,"line_start":88,"line_end":88,"column_start":5,"column_end":46}},{"value":"/ let future = options.read(true).open(\"foo.txt\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243383,"byte_end":8243435,"line_start":89,"line_end":89,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243440,"byte_end":8243447,"line_start":90,"line_end":90,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244191,"byte_end":8244195,"line_start":120,"line_end":120,"column_start":12,"column_end":16},"name":"read","qualname":"<OpenOptions>::read","value":"pub fn read(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for read access.","sig":null,"attributes":[{"value":"/ Sets the option for read access.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243542,"byte_end":8243578,"line_start":95,"line_end":95,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243583,"byte_end":8243586,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This option, when true, will indicate that the file should be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243591,"byte_end":8243656,"line_start":97,"line_end":97,"column_start":5,"column_end":70}},{"value":"/ `read`-able if opened.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243661,"byte_end":8243687,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243692,"byte_end":8243695,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::read`][std]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243700,"byte_end":8243767,"line_start":100,"line_end":100,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243772,"byte_end":8243775,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::read","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243780,"byte_end":8243817,"line_start":102,"line_end":102,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243822,"byte_end":8243825,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243830,"byte_end":8243844,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243849,"byte_end":8243852,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243857,"byte_end":8243870,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243875,"byte_end":8243906,"line_start":107,"line_end":107,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243911,"byte_end":8243927,"line_start":108,"line_end":108,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243932,"byte_end":8243935,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243940,"byte_end":8243958,"line_start":110,"line_end":110,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8243963,"byte_end":8244002,"line_start":111,"line_end":111,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244007,"byte_end":8244044,"line_start":112,"line_end":112,"column_start":5,"column_end":42}},{"value":"/         .read(true)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244049,"byte_end":8244072,"line_start":113,"line_end":113,"column_start":5,"column_end":28}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244077,"byte_end":8244105,"line_start":114,"line_end":114,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244110,"byte_end":8244130,"line_start":115,"line_end":115,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244135,"byte_end":8244138,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244143,"byte_end":8244157,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244162,"byte_end":8244167,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244172,"byte_end":8244179,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244946,"byte_end":8244951,"line_start":150,"line_end":150,"column_start":12,"column_end":17},"name":"write","qualname":"<OpenOptions>::write","value":"pub fn write(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for write access.","sig":null,"attributes":[{"value":"/ Sets the option for write access.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244292,"byte_end":8244329,"line_start":125,"line_end":125,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244334,"byte_end":8244337,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This option, when true, will indicate that the file should be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244342,"byte_end":8244407,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/ `write`-able if opened.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244412,"byte_end":8244439,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244444,"byte_end":8244447,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::write`][std]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244452,"byte_end":8244520,"line_start":130,"line_end":130,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244525,"byte_end":8244528,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::write","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244533,"byte_end":8244571,"line_start":132,"line_end":132,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244576,"byte_end":8244579,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244584,"byte_end":8244598,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244603,"byte_end":8244606,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244611,"byte_end":8244624,"line_start":136,"line_end":136,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244629,"byte_end":8244660,"line_start":137,"line_end":137,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244665,"byte_end":8244681,"line_start":138,"line_end":138,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244686,"byte_end":8244689,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244694,"byte_end":8244712,"line_start":140,"line_end":140,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244717,"byte_end":8244756,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244761,"byte_end":8244798,"line_start":142,"line_end":142,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244803,"byte_end":8244827,"line_start":143,"line_end":143,"column_start":5,"column_end":29}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244832,"byte_end":8244860,"line_start":144,"line_end":144,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244865,"byte_end":8244885,"line_start":145,"line_end":145,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244890,"byte_end":8244893,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244898,"byte_end":8244912,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244917,"byte_end":8244922,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8244927,"byte_end":8244934,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247181,"byte_end":8247187,"line_start":209,"line_end":209,"column_start":12,"column_end":18},"name":"append","qualname":"<OpenOptions>::append","value":"pub fn append(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for the append mode.","sig":null,"attributes":[{"value":"/ Sets the option for the append mode.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8245051,"byte_end":8245091,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8245096,"byte_end":8245099,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This option, when true, means that writes will append to a file instead","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8245104,"byte_end":8245179,"line_start":157,"line_end":157,"column_start":5,"column_end":80}},{"value":"/ of overwriting previous contents.  Note that setting","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8245184,"byte_end":8245240,"line_start":158,"line_end":158,"column_start":5,"column_end":61}},{"value":"/ `.write(true).append(true)` has the same effect as setting only","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8245245,"byte_end":8245312,"line_start":159,"line_end":159,"column_start":5,"column_end":72}},{"value":"/ `.append(true)`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8245317,"byte_end":8245337,"line_start":160,"line_end":160,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8245342,"byte_end":8245345,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ For most filesystems, the operating system guarantees that all writes are","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8245350,"byte_end":8245427,"line_start":162,"line_end":162,"column_start":5,"column_end":82}},{"value":"/ atomic: no writes get mangled because another process writes at the same","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8245432,"byte_end":8245508,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ time.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8245513,"byte_end":8245522,"line_start":164,"line_end":164,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8245527,"byte_end":8245530,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ One maybe obvious note when using append-mode: make sure that all data","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8245535,"byte_end":8245609,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/ that belongs together is written to the file in one operation. This","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8245614,"byte_end":8245685,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ can be done by concatenating strings before passing them to [`write()`],","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8245690,"byte_end":8245766,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ or using a buffered writer (with a buffer of adequate size),","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8245771,"byte_end":8245835,"line_start":169,"line_end":169,"column_start":5,"column_end":69}},{"value":"/ and calling [`flush()`] when the message is complete.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8245840,"byte_end":8245897,"line_start":170,"line_end":170,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8245902,"byte_end":8245905,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ If a file is opened with both read and append access, beware that after","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8245910,"byte_end":8245985,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ opening, and after every write, the position for reading may be set at the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8245990,"byte_end":8246068,"line_start":173,"line_end":173,"column_start":5,"column_end":83}},{"value":"/ end of the file. So, before writing, save the current position (using","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8246073,"byte_end":8246146,"line_start":174,"line_end":174,"column_start":5,"column_end":78}},{"value":"/ [`seek`]`(`[`SeekFrom`]`::`[`Current`]`(0))`), and restore it before the next read.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8246151,"byte_end":8246238,"line_start":175,"line_end":175,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8246243,"byte_end":8246246,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::append`][std]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8246251,"byte_end":8246320,"line_start":177,"line_end":177,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8246325,"byte_end":8246328,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::append","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8246333,"byte_end":8246372,"line_start":179,"line_end":179,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8246377,"byte_end":8246380,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8246385,"byte_end":8246396,"line_start":181,"line_end":181,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8246401,"byte_end":8246404,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ This function doesn't create the file if it doesn't exist. Use the [`create`]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8246409,"byte_end":8246490,"line_start":183,"line_end":183,"column_start":5,"column_end":86}},{"value":"/ method to do so.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8246495,"byte_end":8246515,"line_start":184,"line_end":184,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8246520,"byte_end":8246523,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`write()`]: crate::io::AsyncWriteExt::write","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8246528,"byte_end":8246576,"line_start":186,"line_end":186,"column_start":5,"column_end":53}},{"value":"/ [`flush()`]: crate::io::AsyncWriteExt::flush","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8246581,"byte_end":8246629,"line_start":187,"line_end":187,"column_start":5,"column_end":53}},{"value":"/ [`seek`]: crate::io::AsyncSeekExt::seek","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8246634,"byte_end":8246677,"line_start":188,"line_end":188,"column_start":5,"column_end":48}},{"value":"/ [`SeekFrom`]: std::io::SeekFrom","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8246682,"byte_end":8246717,"line_start":189,"line_end":189,"column_start":5,"column_end":40}},{"value":"/ [`Current`]: std::io::SeekFrom::Current","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8246722,"byte_end":8246765,"line_start":190,"line_end":190,"column_start":5,"column_end":48}},{"value":"/ [`create`]: OpenOptions::create","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8246770,"byte_end":8246805,"line_start":191,"line_end":191,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8246810,"byte_end":8246813,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8246818,"byte_end":8246832,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8246837,"byte_end":8246840,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8246845,"byte_end":8246858,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8246863,"byte_end":8246894,"line_start":196,"line_end":196,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8246899,"byte_end":8246915,"line_start":197,"line_end":197,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8246920,"byte_end":8246923,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8246928,"byte_end":8246946,"line_start":199,"line_end":199,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8246951,"byte_end":8246990,"line_start":200,"line_end":200,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8246995,"byte_end":8247032,"line_start":201,"line_end":201,"column_start":5,"column_end":42}},{"value":"/         .append(true)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247037,"byte_end":8247062,"line_start":202,"line_end":202,"column_start":5,"column_end":30}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247067,"byte_end":8247095,"line_start":203,"line_end":203,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247100,"byte_end":8247120,"line_start":204,"line_end":204,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247125,"byte_end":8247128,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247133,"byte_end":8247147,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247152,"byte_end":8247157,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247162,"byte_end":8247169,"line_start":208,"line_end":208,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248104,"byte_end":8248112,"line_start":242,"line_end":242,"column_start":12,"column_end":20},"name":"truncate","qualname":"<OpenOptions>::truncate","value":"pub fn truncate(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for truncating a previous file.","sig":null,"attributes":[{"value":"/ Sets the option for truncating a previous file.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247290,"byte_end":8247341,"line_start":214,"line_end":214,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247346,"byte_end":8247349,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If a file is successfully opened with this option set it will truncate","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247354,"byte_end":8247428,"line_start":216,"line_end":216,"column_start":5,"column_end":79}},{"value":"/ the file to 0 length if it already exists.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247433,"byte_end":8247479,"line_start":217,"line_end":217,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247484,"byte_end":8247487,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The file must be opened with write access for truncate to work.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247492,"byte_end":8247559,"line_start":219,"line_end":219,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247564,"byte_end":8247567,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::truncate`][std]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247572,"byte_end":8247643,"line_start":221,"line_end":221,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247648,"byte_end":8247651,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::truncate","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247656,"byte_end":8247697,"line_start":223,"line_end":223,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247702,"byte_end":8247705,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247710,"byte_end":8247724,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247729,"byte_end":8247732,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247737,"byte_end":8247750,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247755,"byte_end":8247786,"line_start":228,"line_end":228,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247791,"byte_end":8247807,"line_start":229,"line_end":229,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247812,"byte_end":8247815,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247820,"byte_end":8247838,"line_start":231,"line_end":231,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247843,"byte_end":8247882,"line_start":232,"line_end":232,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247887,"byte_end":8247924,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247929,"byte_end":8247953,"line_start":234,"line_end":234,"column_start":5,"column_end":29}},{"value":"/         .truncate(true)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247958,"byte_end":8247985,"line_start":235,"line_end":235,"column_start":5,"column_end":32}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8247990,"byte_end":8248018,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248023,"byte_end":8248043,"line_start":237,"line_end":237,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248048,"byte_end":8248051,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248056,"byte_end":8248070,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248075,"byte_end":8248080,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248085,"byte_end":8248092,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8249109,"byte_end":8249115,"line_start":278,"line_end":278,"column_start":12,"column_end":18},"name":"create","qualname":"<OpenOptions>::create","value":"pub fn create(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for creating a new file.","sig":null,"attributes":[{"value":"/ Sets the option for creating a new file.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248221,"byte_end":8248265,"line_start":247,"line_end":247,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248270,"byte_end":8248273,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This option indicates whether a new file will be created if the file","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248278,"byte_end":8248350,"line_start":249,"line_end":249,"column_start":5,"column_end":77}},{"value":"/ does not yet already exist.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248355,"byte_end":8248386,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248391,"byte_end":8248394,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ In order for the file to be created, [`write`] or [`append`] access must","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248399,"byte_end":8248475,"line_start":252,"line_end":252,"column_start":5,"column_end":81}},{"value":"/ be used.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248480,"byte_end":8248492,"line_start":253,"line_end":253,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248497,"byte_end":8248500,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::create`][std]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248505,"byte_end":8248574,"line_start":255,"line_end":255,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248579,"byte_end":8248582,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::create","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248587,"byte_end":8248626,"line_start":257,"line_end":257,"column_start":5,"column_end":44}},{"value":"/ [`write`]: OpenOptions::write","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248631,"byte_end":8248664,"line_start":258,"line_end":258,"column_start":5,"column_end":38}},{"value":"/ [`append`]: OpenOptions::append","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248669,"byte_end":8248704,"line_start":259,"line_end":259,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248709,"byte_end":8248712,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248717,"byte_end":8248731,"line_start":261,"line_end":261,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248736,"byte_end":8248739,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248744,"byte_end":8248757,"line_start":263,"line_end":263,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248762,"byte_end":8248793,"line_start":264,"line_end":264,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248798,"byte_end":8248814,"line_start":265,"line_end":265,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248819,"byte_end":8248822,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248827,"byte_end":8248845,"line_start":267,"line_end":267,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248850,"byte_end":8248889,"line_start":268,"line_end":268,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248894,"byte_end":8248931,"line_start":269,"line_end":269,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248936,"byte_end":8248960,"line_start":270,"line_end":270,"column_start":5,"column_end":29}},{"value":"/         .create(true)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248965,"byte_end":8248990,"line_start":271,"line_end":271,"column_start":5,"column_end":30}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8248995,"byte_end":8249023,"line_start":272,"line_end":272,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8249028,"byte_end":8249048,"line_start":273,"line_end":273,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8249053,"byte_end":8249056,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8249061,"byte_end":8249075,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8249080,"byte_end":8249085,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8249090,"byte_end":8249097,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250514,"byte_end":8250524,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"create_new","qualname":"<OpenOptions>::create_new","value":"pub fn create_new(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option to always create a new file.","sig":null,"attributes":[{"value":"/ Sets the option to always create a new file.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8249218,"byte_end":8249266,"line_start":283,"line_end":283,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8249271,"byte_end":8249274,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This option indicates whether a new file will be created.  No file is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8249279,"byte_end":8249352,"line_start":285,"line_end":285,"column_start":5,"column_end":78}},{"value":"/ allowed to exist at the target location, also no (dangling) symlink.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8249357,"byte_end":8249429,"line_start":286,"line_end":286,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8249434,"byte_end":8249437,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This option is useful because it is atomic. Otherwise between checking","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8249442,"byte_end":8249516,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/ whether a file exists and creating a new one, the file may have been","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8249521,"byte_end":8249593,"line_start":289,"line_end":289,"column_start":5,"column_end":77}},{"value":"/ created by another process (a TOCTOU race condition / attack).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8249598,"byte_end":8249664,"line_start":290,"line_end":290,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8249669,"byte_end":8249672,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ If `.create_new(true)` is set, [`.create()`] and [`.truncate()`] are","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8249677,"byte_end":8249749,"line_start":292,"line_end":292,"column_start":5,"column_end":77}},{"value":"/ ignored.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8249754,"byte_end":8249766,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8249771,"byte_end":8249774,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ The file must be opened with write or append access in order to create a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8249779,"byte_end":8249855,"line_start":295,"line_end":295,"column_start":5,"column_end":81}},{"value":"/ new file.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8249860,"byte_end":8249873,"line_start":296,"line_end":296,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8249878,"byte_end":8249881,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::create_new`][std]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8249886,"byte_end":8249959,"line_start":298,"line_end":298,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8249964,"byte_end":8249967,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::create_new","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8249972,"byte_end":8250015,"line_start":300,"line_end":300,"column_start":5,"column_end":48}},{"value":"/ [`.create()`]: OpenOptions::create","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250020,"byte_end":8250058,"line_start":301,"line_end":301,"column_start":5,"column_end":43}},{"value":"/ [`.truncate()`]: OpenOptions::truncate","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250063,"byte_end":8250105,"line_start":302,"line_end":302,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250110,"byte_end":8250113,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250118,"byte_end":8250132,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250137,"byte_end":8250140,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250145,"byte_end":8250158,"line_start":306,"line_end":306,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250163,"byte_end":8250194,"line_start":307,"line_end":307,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250199,"byte_end":8250215,"line_start":308,"line_end":308,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250220,"byte_end":8250223,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250228,"byte_end":8250246,"line_start":310,"line_end":310,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250251,"byte_end":8250290,"line_start":311,"line_end":311,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250295,"byte_end":8250332,"line_start":312,"line_end":312,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250337,"byte_end":8250361,"line_start":313,"line_end":313,"column_start":5,"column_end":29}},{"value":"/         .create_new(true)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250366,"byte_end":8250395,"line_start":314,"line_end":314,"column_start":5,"column_end":34}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250400,"byte_end":8250428,"line_start":315,"line_end":315,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250433,"byte_end":8250453,"line_start":316,"line_end":316,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250458,"byte_end":8250461,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250466,"byte_end":8250480,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250485,"byte_end":8250490,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250495,"byte_end":8250502,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8252976,"byte_end":8252980,"line_start":378,"line_end":378,"column_start":18,"column_end":22},"name":"open","qualname":"<OpenOptions>::open","value":"pub async fn open<'_,\n                  impl AsRef<Path>: AsRef<Path>>(&'_ Self, impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file at `path` with the options specified by `self`.","sig":null,"attributes":[{"value":"/ Opens a file at `path` with the options specified by `self`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250639,"byte_end":8250703,"line_start":326,"line_end":326,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250708,"byte_end":8250711,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::open`][std]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250716,"byte_end":8250783,"line_start":328,"line_end":328,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250788,"byte_end":8250791,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::open","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250796,"byte_end":8250833,"line_start":330,"line_end":330,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250838,"byte_end":8250841,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250846,"byte_end":8250858,"line_start":332,"line_end":332,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250863,"byte_end":8250866,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ This function will return an error under a number of different","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250871,"byte_end":8250937,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/ circumstances. Some of these error conditions are listed here, together","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8250942,"byte_end":8251017,"line_start":335,"line_end":335,"column_start":5,"column_end":80}},{"value":"/ with their [`ErrorKind`]. The mapping to [`ErrorKind`]s is not part of","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8251022,"byte_end":8251096,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/ the compatibility contract of the function, especially the `Other` kind","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8251101,"byte_end":8251176,"line_start":337,"line_end":337,"column_start":5,"column_end":80}},{"value":"/ might change to more specific kinds in the future.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8251181,"byte_end":8251235,"line_start":338,"line_end":338,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8251240,"byte_end":8251243,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ * [`NotFound`]: The specified file does not exist and neither `create`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8251248,"byte_end":8251322,"line_start":340,"line_end":340,"column_start":5,"column_end":79}},{"value":"/   or `create_new` is set.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8251327,"byte_end":8251356,"line_start":341,"line_end":341,"column_start":5,"column_end":34}},{"value":"/ * [`NotFound`]: One of the directory components of the file path does","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8251361,"byte_end":8251434,"line_start":342,"line_end":342,"column_start":5,"column_end":78}},{"value":"/   not exist.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8251439,"byte_end":8251455,"line_start":343,"line_end":343,"column_start":5,"column_end":21}},{"value":"/ * [`PermissionDenied`]: The user lacks permission to get the specified","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8251460,"byte_end":8251534,"line_start":344,"line_end":344,"column_start":5,"column_end":79}},{"value":"/   access rights for the file.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8251539,"byte_end":8251572,"line_start":345,"line_end":345,"column_start":5,"column_end":38}},{"value":"/ * [`PermissionDenied`]: The user lacks permission to open one of the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8251577,"byte_end":8251649,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/   directory components of the specified path.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8251654,"byte_end":8251703,"line_start":347,"line_end":347,"column_start":5,"column_end":54}},{"value":"/ * [`AlreadyExists`]: `create_new` was specified and the file already","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8251708,"byte_end":8251780,"line_start":348,"line_end":348,"column_start":5,"column_end":77}},{"value":"/   exists.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8251785,"byte_end":8251798,"line_start":349,"line_end":349,"column_start":5,"column_end":18}},{"value":"/ * [`InvalidInput`]: Invalid combinations of open options (truncate","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8251803,"byte_end":8251873,"line_start":350,"line_end":350,"column_start":5,"column_end":75}},{"value":"/   without write access, no access mode set, etc.).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8251878,"byte_end":8251932,"line_start":351,"line_end":351,"column_start":5,"column_end":59}},{"value":"/ * [`Other`]: One of the directory components of the specified file path","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8251937,"byte_end":8252012,"line_start":352,"line_end":352,"column_start":5,"column_end":80}},{"value":"/   was not, in fact, a directory.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8252017,"byte_end":8252053,"line_start":353,"line_end":353,"column_start":5,"column_end":41}},{"value":"/ * [`Other`]: Filesystem-level errors: full disk, write permission","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8252058,"byte_end":8252127,"line_start":354,"line_end":354,"column_start":5,"column_end":74}},{"value":"/   requested on a read-only file system, exceeded disk quota, too many","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8252132,"byte_end":8252205,"line_start":355,"line_end":355,"column_start":5,"column_end":78}},{"value":"/   open files, too long filename, too many symbolic links in the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8252210,"byte_end":8252277,"line_start":356,"line_end":356,"column_start":5,"column_end":72}},{"value":"/   specified path (Unix-like systems only), etc.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8252282,"byte_end":8252333,"line_start":357,"line_end":357,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8252338,"byte_end":8252341,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8252346,"byte_end":8252360,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8252365,"byte_end":8252368,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8252373,"byte_end":8252386,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8252391,"byte_end":8252422,"line_start":362,"line_end":362,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8252427,"byte_end":8252443,"line_start":363,"line_end":363,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8252448,"byte_end":8252451,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8252456,"byte_end":8252474,"line_start":365,"line_end":365,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8252479,"byte_end":8252518,"line_start":366,"line_end":366,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new().open(\"foo.txt\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8252523,"byte_end":8252584,"line_start":367,"line_end":367,"column_start":5,"column_end":66}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8252589,"byte_end":8252603,"line_start":368,"line_end":368,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8252608,"byte_end":8252613,"line_start":369,"line_end":369,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8252618,"byte_end":8252625,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8252630,"byte_end":8252633,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind`]: std::io::ErrorKind","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8252638,"byte_end":8252675,"line_start":372,"line_end":372,"column_start":5,"column_end":42}},{"value":"/ [`AlreadyExists`]: std::io::ErrorKind::AlreadyExists","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8252680,"byte_end":8252736,"line_start":373,"line_end":373,"column_start":5,"column_end":61}},{"value":"/ [`InvalidInput`]: std::io::ErrorKind::InvalidInput","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8252741,"byte_end":8252795,"line_start":374,"line_end":374,"column_start":5,"column_end":59}},{"value":"/ [`NotFound`]: std::io::ErrorKind::NotFound","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8252800,"byte_end":8252846,"line_start":375,"line_end":375,"column_start":5,"column_end":51}},{"value":"/ [`Other`]: std::io::ErrorKind::Other","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8252851,"byte_end":8252891,"line_start":376,"line_end":376,"column_start":5,"column_end":45}},{"value":"/ [`PermissionDenied`]: std::io::ErrorKind::PermissionDenied","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8252896,"byte_end":8252958,"line_start":377,"line_end":377,"column_start":5,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":1091},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"os","qualname":"::fs::os","value":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/mod.rs","parent":null,"children":[{"krate":0,"index":1092}],"decl_id":null,"docs":" OS-specific functionality.\n","sig":null,"attributes":[{"value":"/ OS-specific functionality.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/mod.rs","byte_start":8253647,"byte_end":8253677,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":1092},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::fs::os::unix","value":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/mod.rs","parent":null,"children":[{"krate":0,"index":1093},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1120}],"decl_id":null,"docs":" Unix-specific extensions to primitives in the `tokio_fs` module.\n","sig":null,"attributes":[{"value":"cfg(unix)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/mod.rs","byte_start":8253679,"byte_end":8253691,"line_start":3,"line_end":3,"column_start":1,"column_end":13}},{"value":"/ Unix-specific extensions to primitives in the `tokio_fs` module.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/mod.rs","byte_start":8253741,"byte_end":8253809,"line_start":1,"line_end":1,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":1097},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/symlink.rs","byte_start":8254310,"byte_end":8254317,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"symlink","qualname":"::fs::os::unix::symlink::symlink","value":"pub async fn symlink<impl AsRef<Path>: AsRef<Path>,\n                     impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                    impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new symbolic link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new symbolic link on the filesystem.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/symlink.rs","byte_start":8254057,"byte_end":8254107,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/symlink.rs","byte_start":8254108,"byte_end":8254111,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a symbolic link pointing to the `src` path.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/symlink.rs","byte_start":8254112,"byte_end":8254182,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/symlink.rs","byte_start":8254183,"byte_end":8254186,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::os::unix::fs::symlink`][std]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/symlink.rs","byte_start":8254187,"byte_end":8254254,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/symlink.rs","byte_start":8254255,"byte_end":8254258,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [std]: std::os::unix::fs::symlink","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/symlink.rs","byte_start":8254259,"byte_end":8254296,"line_start":12,"line_end":12,"column_start":1,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":1107},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8254908,"byte_end":8254922,"line_start":11,"line_end":11,"column_start":11,"column_end":25},"name":"OpenOptionsExt","qualname":"::fs::os::unix::open_options_ext::OpenOptionsExt","value":"OpenOptionsExt","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1109}],"decl_id":null,"docs":" Unix-specific extensions to [`fs::OpenOptions`].","sig":null,"attributes":[{"value":"/ Unix-specific extensions to [`fs::OpenOptions`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8254634,"byte_end":8254686,"line_start":4,"line_end":4,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8254687,"byte_end":8254690,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This mirrors the definition of [`std::os::unix::fs::OpenOptionsExt`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8254691,"byte_end":8254764,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8254765,"byte_end":8254768,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8254769,"byte_end":8254772,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`fs::OpenOptions`]: crate::fs::OpenOptions","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8254773,"byte_end":8254820,"line_start":9,"line_end":9,"column_start":1,"column_end":48}},{"value":"/ [`std::os::unix::fs::OpenOptionsExt`]: std::os::unix::fs::OpenOptionsExt","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8254821,"byte_end":8254897,"line_start":10,"line_end":10,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8255816,"byte_end":8255820,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"mode","qualname":"::fs::os::unix::open_options_ext::OpenOptionsExt::mode","value":"pub fn mode(&mut Self, u32) -> &mut Self","parent":{"krate":0,"index":1107},"children":[],"decl_id":null,"docs":" Sets the mode bits that a new file will be created with.","sig":null,"attributes":[{"value":"/ Sets the mode bits that a new file will be created with.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8254929,"byte_end":8254989,"line_start":12,"line_end":12,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8254994,"byte_end":8254997,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ If a new file is created as part of an `OpenOptions::open` call then this","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8255002,"byte_end":8255079,"line_start":14,"line_end":14,"column_start":5,"column_end":82}},{"value":"/ specified `mode` will be used as the permission bits for the new file.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8255084,"byte_end":8255158,"line_start":15,"line_end":15,"column_start":5,"column_end":79}},{"value":"/ If no `mode` is set, the default of `0o666` will be used.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8255163,"byte_end":8255224,"line_start":16,"line_end":16,"column_start":5,"column_end":66}},{"value":"/ The operating system masks out bits with the system's `umask`, to produce","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8255229,"byte_end":8255306,"line_start":17,"line_end":17,"column_start":5,"column_end":82}},{"value":"/ the final permissions.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8255311,"byte_end":8255337,"line_start":18,"line_end":18,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8255342,"byte_end":8255345,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8255350,"byte_end":8255364,"line_start":20,"line_end":20,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8255369,"byte_end":8255372,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8255377,"byte_end":8255390,"line_start":22,"line_end":22,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8255395,"byte_end":8255426,"line_start":23,"line_end":23,"column_start":5,"column_end":36}},{"value":"/ use tokio::fs::os::unix::OpenOptionsExt;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8255431,"byte_end":8255475,"line_start":24,"line_end":24,"column_start":5,"column_end":49}},{"value":"/ use std::io;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8255480,"byte_end":8255496,"line_start":25,"line_end":25,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8255501,"byte_end":8255504,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8255509,"byte_end":8255527,"line_start":27,"line_end":27,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8255532,"byte_end":8255571,"line_start":28,"line_end":28,"column_start":5,"column_end":44}},{"value":"/     let mut options = OpenOptions::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8255576,"byte_end":8255621,"line_start":29,"line_end":29,"column_start":5,"column_end":50}},{"value":"/     options.mode(0o644); // Give read/write for owner and read for others.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8255626,"byte_end":8255704,"line_start":30,"line_end":30,"column_start":5,"column_end":83}},{"value":"/     let file = options.open(\"foo.txt\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8255709,"byte_end":8255759,"line_start":31,"line_end":31,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8255764,"byte_end":8255767,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8255772,"byte_end":8255786,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8255791,"byte_end":8255796,"line_start":34,"line_end":34,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8255801,"byte_end":8255808,"line_start":35,"line_end":35,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8256785,"byte_end":8256797,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"custom_flags","qualname":"::fs::os::unix::open_options_ext::OpenOptionsExt::custom_flags","value":"pub fn custom_flags(&mut Self, i32) -> &mut Self","parent":{"krate":0,"index":1107},"children":[],"decl_id":null,"docs":" Pass custom flags to the `flags` argument of `open`.","sig":null,"attributes":[{"value":"/ Pass custom flags to the `flags` argument of `open`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8255862,"byte_end":8255918,"line_start":38,"line_end":38,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8255923,"byte_end":8255926,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ The bits that define the access mode are masked out with `O_ACCMODE`, to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8255931,"byte_end":8256007,"line_start":40,"line_end":40,"column_start":5,"column_end":81}},{"value":"/ ensure they do not interfere with the access mode set by Rusts options.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8256012,"byte_end":8256087,"line_start":41,"line_end":41,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8256092,"byte_end":8256095,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Custom flags can only set flags, not remove flags set by Rusts options.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8256100,"byte_end":8256175,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ This options overwrites any previously set custom flags.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8256180,"byte_end":8256240,"line_start":44,"line_end":44,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8256245,"byte_end":8256248,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8256253,"byte_end":8256267,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8256272,"byte_end":8256275,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8256280,"byte_end":8256293,"line_start":48,"line_end":48,"column_start":5,"column_end":18}},{"value":"/ use libc;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8256298,"byte_end":8256311,"line_start":49,"line_end":49,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8256316,"byte_end":8256347,"line_start":50,"line_end":50,"column_start":5,"column_end":36}},{"value":"/ use tokio::fs::os::unix::OpenOptionsExt;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8256352,"byte_end":8256396,"line_start":51,"line_end":51,"column_start":5,"column_end":49}},{"value":"/ use std::io;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8256401,"byte_end":8256417,"line_start":52,"line_end":52,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8256422,"byte_end":8256425,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8256430,"byte_end":8256448,"line_start":54,"line_end":54,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8256453,"byte_end":8256492,"line_start":55,"line_end":55,"column_start":5,"column_end":44}},{"value":"/     let mut options = OpenOptions::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8256497,"byte_end":8256542,"line_start":56,"line_end":56,"column_start":5,"column_end":50}},{"value":"/     options.write(true);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8256547,"byte_end":8256575,"line_start":57,"line_end":57,"column_start":5,"column_end":33}},{"value":"/     if cfg!(unix) {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8256580,"byte_end":8256603,"line_start":58,"line_end":58,"column_start":5,"column_end":28}},{"value":"/         options.custom_flags(libc::O_NOFOLLOW);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8256608,"byte_end":8256659,"line_start":59,"line_end":59,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8256664,"byte_end":8256673,"line_start":60,"line_end":60,"column_start":5,"column_end":14}},{"value":"/     let file = options.open(\"foo.txt\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8256678,"byte_end":8256728,"line_start":61,"line_end":61,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8256733,"byte_end":8256736,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8256741,"byte_end":8256755,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8256760,"byte_end":8256765,"line_start":64,"line_end":64,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8256770,"byte_end":8256777,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":1116},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8257273,"byte_end":8257286,"line_start":6,"line_end":6,"column_start":11,"column_end":24},"name":"DirBuilderExt","qualname":"::fs::os::unix::dir_builder_ext::DirBuilderExt","value":"DirBuilderExt","parent":null,"children":[{"krate":0,"index":1117}],"decl_id":null,"docs":" Unix-specific extensions to [`DirBuilder`].","sig":null,"attributes":[{"value":"/ Unix-specific extensions to [`DirBuilder`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8257169,"byte_end":8257216,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8257217,"byte_end":8257220,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`DirBuilder`]: crate::fs::DirBuilder","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8257221,"byte_end":8257262,"line_start":5,"line_end":5,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8257635,"byte_end":8257639,"line_start":21,"line_end":21,"column_start":8,"column_end":12},"name":"mode","qualname":"::fs::os::unix::dir_builder_ext::DirBuilderExt::mode","value":"pub fn mode(&mut Self, u32) -> &mut Self","parent":{"krate":0,"index":1116},"children":[],"decl_id":null,"docs":" Sets the mode to create new directories with.","sig":null,"attributes":[{"value":"/ Sets the mode to create new directories with.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8257293,"byte_end":8257342,"line_start":7,"line_end":7,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8257347,"byte_end":8257350,"line_start":8,"line_end":8,"column_start":5,"column_end":8}},{"value":"/ This option defaults to 0o777.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8257355,"byte_end":8257389,"line_start":9,"line_end":9,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8257394,"byte_end":8257397,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8257402,"byte_end":8257416,"line_start":11,"line_end":11,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8257421,"byte_end":8257424,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8257429,"byte_end":8257432,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8257437,"byte_end":8257450,"line_start":14,"line_end":14,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8257455,"byte_end":8257485,"line_start":15,"line_end":15,"column_start":5,"column_end":35}},{"value":"/ use tokio::fs::os::unix::DirBuilderExt;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8257490,"byte_end":8257533,"line_start":16,"line_end":16,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8257538,"byte_end":8257541,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ let mut builder = DirBuilder::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8257546,"byte_end":8257586,"line_start":18,"line_end":18,"column_start":5,"column_end":45}},{"value":"/ builder.mode(0o775);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8257591,"byte_end":8257615,"line_start":19,"line_end":19,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8257620,"byte_end":8257627,"line_start":20,"line_end":20,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1126},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8259196,"byte_end":8259200,"line_start":44,"line_end":44,"column_start":14,"column_end":18},"name":"read","qualname":"::fs::read::read","value":"pub async fn read<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file into a bytes vector.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file into a bytes vector.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8257872,"byte_end":8257932,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8257933,"byte_end":8257936,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read`][std]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8257937,"byte_end":8257991,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8257992,"byte_end":8257995,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::read","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8257996,"byte_end":8258020,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8258021,"byte_end":8258024,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for using [`File::open`] and [`read_to_end`]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8258025,"byte_end":8258104,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ with fewer imports and without an intermediate variable. It pre-allocates a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8258105,"byte_end":8258184,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ buffer based on the file size when available, so it is generally faster than","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8258185,"byte_end":8258265,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ reading into a vector created with `Vec::new()`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8258266,"byte_end":8258318,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8258319,"byte_end":8258322,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`File::open`]: super::File::open","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8258323,"byte_end":8258360,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/ [`read_to_end`]: crate::io::AsyncReadExt::read_to_end","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8258361,"byte_end":8258418,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8258419,"byte_end":8258422,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8258423,"byte_end":8258435,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8258436,"byte_end":8258439,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This function will return an error if `path` does not already exist.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8258440,"byte_end":8258512,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ Other errors may also be returned according to [`OpenOptions::open`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8258513,"byte_end":8258586,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8258587,"byte_end":8258590,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`OpenOptions::open`]: super::OpenOptions::open","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8258591,"byte_end":8258642,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8258643,"byte_end":8258646,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ It will also return an error if it encounters while reading an error","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8258647,"byte_end":8258719,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ of a kind other than [`ErrorKind::Interrupted`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8258720,"byte_end":8258772,"line_start":27,"line_end":27,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8258773,"byte_end":8258776,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`ErrorKind::Interrupted`]: std::io::ErrorKind::Interrupted","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8258777,"byte_end":8258840,"line_start":29,"line_end":29,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8258841,"byte_end":8258844,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8258845,"byte_end":8258859,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8258860,"byte_end":8258863,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8258864,"byte_end":8258877,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8258878,"byte_end":8258896,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8258897,"byte_end":8258926,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8258927,"byte_end":8258930,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8258931,"byte_end":8258949,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error + 'static>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8258950,"byte_end":8259023,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/     let contents = fs::read(\"address.txt\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8259024,"byte_end":8259078,"line_start":39,"line_end":39,"column_start":1,"column_end":55}},{"value":"/     let foo: SocketAddr = String::from_utf8_lossy(&contents).parse()?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8259079,"byte_end":8259153,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8259154,"byte_end":8259168,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8259169,"byte_end":8259174,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8259175,"byte_end":8259182,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1150},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8259786,"byte_end":8259794,"line_start":18,"line_end":18,"column_start":14,"column_end":22},"name":"read_dir","qualname":"::fs::read_dir::read_dir","value":"pub async fn read_dir<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the entries within a directory.","sig":null,"attributes":[{"value":"/ Returns a stream over the entries within a directory.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8259638,"byte_end":8259695,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8259696,"byte_end":8259699,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read_dir`](std::fs::read_dir)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8259700,"byte_end":8259772,"line_start":17,"line_end":17,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":1336},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8260606,"byte_end":8260613,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"ReadDir","qualname":"::fs::read_dir::ReadDir","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream of the entries in a directory.","sig":null,"attributes":[{"value":"/ Stream of the entries in a directory.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8259988,"byte_end":8260029,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8260030,"byte_end":8260033,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This stream is returned from the [`read_dir`] function of this module and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8260034,"byte_end":8260111,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will yield instances of [`DirEntry`]. Through a [`DirEntry`]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8260112,"byte_end":8260176,"line_start":28,"line_end":28,"column_start":1,"column_end":65}},{"value":"/ information like the entry's path and possibly other metadata can be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8260177,"byte_end":8260249,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ learned.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8260250,"byte_end":8260262,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8260263,"byte_end":8260266,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8260267,"byte_end":8260279,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8260280,"byte_end":8260283,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This [`Stream`] will return an [`Err`] if there's some sort of intermittent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8260284,"byte_end":8260363,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ IO error during iteration.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8260364,"byte_end":8260394,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8260395,"byte_end":8260398,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: read_dir","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8260399,"byte_end":8260425,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ [`DirEntry`]: DirEntry","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8260426,"byte_end":8260452,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ [`Stream`]: crate::stream::Stream","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8260453,"byte_end":8260490,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ [`Err`]: std::result::Result::Err","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8260491,"byte_end":8260528,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8260546,"byte_end":8260594,"line_start":42,"line_end":42,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8260867,"byte_end":8260877,"line_start":53,"line_end":53,"column_start":18,"column_end":28},"name":"next_entry","qualname":"<ReadDir>::next_entry","value":"pub async fn next_entry<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next entry in the directory stream.\n","sig":null,"attributes":[{"value":"/ Returns the next entry in the directory stream.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8260798,"byte_end":8260849,"line_start":52,"line_end":52,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8261049,"byte_end":8261064,"line_start":59,"line_end":59,"column_start":12,"column_end":27},"name":"poll_next_entry","qualname":"<ReadDir>::poll_next_entry","value":"pub fn poll_next_entry(&mut Self, &mut Context)\n-> Poll<io::Result<Option<DirEntry>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1350},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8262820,"byte_end":8262828,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"DirEntry","qualname":"::fs::read_dir::DirEntry","value":"","parent":null,"children":[],"decl_id":null,"docs":" Entries returned by the [`ReadDir`] stream.","sig":null,"attributes":[{"value":"/ Entries returned by the [`ReadDir`] stream.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8262369,"byte_end":8262416,"line_start":100,"line_end":100,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8262417,"byte_end":8262420,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ [`ReadDir`]: struct@ReadDir","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8262421,"byte_end":8262452,"line_start":102,"line_end":102,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8262453,"byte_end":8262456,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::DirEntry`] for usage from the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8262457,"byte_end":8262534,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/ Tokio runtime.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8262535,"byte_end":8262553,"line_start":105,"line_end":105,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8262554,"byte_end":8262557,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ An instance of `DirEntry` represents an entry inside of a directory on the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8262558,"byte_end":8262636,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ filesystem. Each entry can be inspected via methods to learn about the full","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8262637,"byte_end":8262716,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"/ path or possibly other metadata through per-platform extension traits.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8262717,"byte_end":8262791,"line_start":109,"line_end":109,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263660,"byte_end":8263664,"line_start":143,"line_end":143,"column_start":12,"column_end":16},"name":"path","qualname":"<DirEntry>::path","value":"pub fn path(&Self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns the full path to the file that this entry represents.","sig":null,"attributes":[{"value":"/ Returns the full path to the file that this entry represents.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8262875,"byte_end":8262940,"line_start":114,"line_end":114,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8262945,"byte_end":8262948,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The full path is created by joining the original path to `read_dir`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8262953,"byte_end":8263024,"line_start":116,"line_end":116,"column_start":5,"column_end":76}},{"value":"/ with the filename of this entry.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263029,"byte_end":8263065,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263070,"byte_end":8263073,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263078,"byte_end":8263092,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263097,"byte_end":8263100,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263105,"byte_end":8263118,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263123,"byte_end":8263141,"line_start":122,"line_end":122,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263146,"byte_end":8263149,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263154,"byte_end":8263199,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263204,"byte_end":8263251,"line_start":125,"line_end":125,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263256,"byte_end":8263259,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263264,"byte_end":8263321,"line_start":127,"line_end":127,"column_start":5,"column_end":62}},{"value":"/     println!(\"{:?}\", entry.path());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263326,"byte_end":8263365,"line_start":128,"line_end":128,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263370,"byte_end":8263375,"line_start":129,"line_end":129,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263380,"byte_end":8263392,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263397,"byte_end":8263404,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263409,"byte_end":8263416,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263421,"byte_end":8263424,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This prints output like:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263429,"byte_end":8263457,"line_start":134,"line_end":134,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263462,"byte_end":8263465,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263470,"byte_end":8263481,"line_start":136,"line_end":136,"column_start":5,"column_end":16}},{"value":"/ \"./whatever.txt\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263486,"byte_end":8263506,"line_start":137,"line_end":137,"column_start":5,"column_end":25}},{"value":"/ \"./foo.html\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263511,"byte_end":8263527,"line_start":138,"line_end":138,"column_start":5,"column_end":21}},{"value":"/ \"./hello_world.rs\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263532,"byte_end":8263554,"line_start":139,"line_end":139,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263559,"byte_end":8263566,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263571,"byte_end":8263574,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ The exact text, of course, depends on what files you have in `.`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263579,"byte_end":8263648,"line_start":142,"line_end":142,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264184,"byte_end":8264193,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"file_name","qualname":"<DirEntry>::file_name","value":"pub fn file_name(&Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Returns the bare file name of this directory entry without any other\n leading path component.","sig":null,"attributes":[{"value":"/ Returns the bare file name of this directory entry without any other","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263718,"byte_end":8263790,"line_start":147,"line_end":147,"column_start":5,"column_end":77}},{"value":"/ leading path component.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263795,"byte_end":8263822,"line_start":148,"line_end":148,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263827,"byte_end":8263830,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263835,"byte_end":8263849,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263854,"byte_end":8263857,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263862,"byte_end":8263869,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263874,"byte_end":8263892,"line_start":153,"line_end":153,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263897,"byte_end":8263900,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263905,"byte_end":8263950,"line_start":155,"line_end":155,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8263955,"byte_end":8264002,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264007,"byte_end":8264010,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264015,"byte_end":8264072,"line_start":158,"line_end":158,"column_start":5,"column_end":62}},{"value":"/     println!(\"{:?}\", entry.file_name());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264077,"byte_end":8264121,"line_start":159,"line_end":159,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264126,"byte_end":8264131,"line_start":160,"line_end":160,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264136,"byte_end":8264148,"line_start":161,"line_end":161,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264153,"byte_end":8264160,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264165,"byte_end":8264172,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8265290,"byte_end":8265298,"line_start":198,"line_end":198,"column_start":18,"column_end":26},"name":"metadata","qualname":"<DirEntry>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the metadata for the file that this entry points at.","sig":null,"attributes":[{"value":"/ Returns the metadata for the file that this entry points at.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264253,"byte_end":8264317,"line_start":168,"line_end":168,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264322,"byte_end":8264325,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symlinks if this entry points at a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264330,"byte_end":8264400,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ symlink.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264405,"byte_end":8264417,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264422,"byte_end":8264425,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264430,"byte_end":8264462,"line_start":173,"line_end":173,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264467,"byte_end":8264470,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ On Windows this function is cheap to call (no extra system calls","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264475,"byte_end":8264543,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/ needed), but on Unix platforms this function is the equivalent of","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264548,"byte_end":8264617,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/ calling `symlink_metadata` on the path.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264622,"byte_end":8264665,"line_start":177,"line_end":177,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264670,"byte_end":8264673,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264678,"byte_end":8264692,"line_start":179,"line_end":179,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264697,"byte_end":8264700,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264705,"byte_end":8264712,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264717,"byte_end":8264735,"line_start":182,"line_end":182,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264740,"byte_end":8264743,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264748,"byte_end":8264793,"line_start":184,"line_end":184,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264798,"byte_end":8264845,"line_start":185,"line_end":185,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264850,"byte_end":8264853,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264858,"byte_end":8264915,"line_start":187,"line_end":187,"column_start":5,"column_end":62}},{"value":"/     if let Ok(metadata) = entry.metadata().await {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264920,"byte_end":8264974,"line_start":188,"line_end":188,"column_start":5,"column_end":59}},{"value":"/         // Now let's show our entry's permissions!","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8264979,"byte_end":8265033,"line_start":189,"line_end":189,"column_start":5,"column_end":59}},{"value":"/         println!(\"{:?}: {:?}\", entry.path(), metadata.permissions());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8265038,"byte_end":8265111,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/     } else {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8265116,"byte_end":8265132,"line_start":191,"line_end":191,"column_start":5,"column_end":21}},{"value":"/         println!(\"Couldn't get file type for {:?}\", entry.path());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8265137,"byte_end":8265207,"line_start":192,"line_end":192,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8265212,"byte_end":8265221,"line_start":193,"line_end":193,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8265226,"byte_end":8265231,"line_start":194,"line_end":194,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8265236,"byte_end":8265248,"line_start":195,"line_end":195,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8265253,"byte_end":8265260,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8265265,"byte_end":8265272,"line_start":197,"line_end":197,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8266482,"byte_end":8266491,"line_start":233,"line_end":233,"column_start":18,"column_end":27},"name":"file_type","qualname":"<DirEntry>::file_type","value":"pub async fn file_type<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the file type for the file that this entry points at.","sig":null,"attributes":[{"value":"/ Returns the file type for the file that this entry points at.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8265424,"byte_end":8265489,"line_start":203,"line_end":203,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8265494,"byte_end":8265497,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symlinks if this entry points at a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8265502,"byte_end":8265572,"line_start":205,"line_end":205,"column_start":5,"column_end":75}},{"value":"/ symlink.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8265577,"byte_end":8265589,"line_start":206,"line_end":206,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8265594,"byte_end":8265597,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8265602,"byte_end":8265634,"line_start":208,"line_end":208,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8265639,"byte_end":8265642,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ On Windows and most Unix platforms this function is free (no extra","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8265647,"byte_end":8265717,"line_start":210,"line_end":210,"column_start":5,"column_end":75}},{"value":"/ system calls needed), but some Unix platforms may require the equivalent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8265722,"byte_end":8265798,"line_start":211,"line_end":211,"column_start":5,"column_end":81}},{"value":"/ call to `symlink_metadata` to learn about the target file type.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8265803,"byte_end":8265870,"line_start":212,"line_end":212,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8265875,"byte_end":8265878,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8265883,"byte_end":8265897,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8265902,"byte_end":8265905,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8265910,"byte_end":8265917,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8265922,"byte_end":8265940,"line_start":217,"line_end":217,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8265945,"byte_end":8265948,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8265953,"byte_end":8265998,"line_start":219,"line_end":219,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8266003,"byte_end":8266050,"line_start":220,"line_end":220,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8266055,"byte_end":8266058,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8266063,"byte_end":8266120,"line_start":222,"line_end":222,"column_start":5,"column_end":62}},{"value":"/     if let Ok(file_type) = entry.file_type().await {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8266125,"byte_end":8266181,"line_start":223,"line_end":223,"column_start":5,"column_end":61}},{"value":"/         // Now let's show our entry's file type!","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8266186,"byte_end":8266238,"line_start":224,"line_end":224,"column_start":5,"column_end":57}},{"value":"/         println!(\"{:?}: {:?}\", entry.path(), file_type);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8266243,"byte_end":8266303,"line_start":225,"line_end":225,"column_start":5,"column_end":65}},{"value":"/     } else {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8266308,"byte_end":8266324,"line_start":226,"line_end":226,"column_start":5,"column_end":21}},{"value":"/         println!(\"Couldn't get file type for {:?}\", entry.path());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8266329,"byte_end":8266399,"line_start":227,"line_end":227,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8266404,"byte_end":8266413,"line_start":228,"line_end":228,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8266418,"byte_end":8266423,"line_start":229,"line_end":229,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8266428,"byte_end":8266440,"line_start":230,"line_end":230,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8266445,"byte_end":8266452,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8266457,"byte_end":8266464,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1189},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_link.rs","byte_start":8266972,"byte_end":8266981,"line_start":11,"line_end":11,"column_start":14,"column_end":23},"name":"read_link","qualname":"::fs::read_link::read_link","value":"pub async fn read_link<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link, returning the file that the link points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link, returning the file that the link points to.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_link.rs","byte_start":8266790,"byte_end":8266860,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_link.rs","byte_start":8266861,"byte_end":8266864,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read_link`][std]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_link.rs","byte_start":8266865,"byte_end":8266924,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_link.rs","byte_start":8266925,"byte_end":8266928,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::read_link","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_link.rs","byte_start":8266929,"byte_end":8266958,"line_start":10,"line_end":10,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":1200},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8267640,"byte_end":8267654,"line_start":21,"line_end":21,"column_start":14,"column_end":28},"name":"read_to_string","qualname":"::fs::read_to_string::read_to_string","value":"pub async fn read_to_string<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will open a file for reading and read the entire\n contents into a string and return said string.","sig":null,"attributes":[{"value":"/ Creates a future which will open a file for reading and read the entire","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8267182,"byte_end":8267257,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ contents into a string and return said string.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8267258,"byte_end":8267308,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8267309,"byte_end":8267312,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of `std::fs::read_to_string`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8267313,"byte_end":8267375,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8267376,"byte_end":8267379,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8267380,"byte_end":8267394,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8267395,"byte_end":8267398,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8267399,"byte_end":8267412,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8267413,"byte_end":8267431,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8267432,"byte_end":8267435,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8267436,"byte_end":8267481,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ let contents = fs::read_to_string(\"foo.txt\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8267482,"byte_end":8267538,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/ println!(\"foo.txt contains {} bytes\", contents.len());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8267539,"byte_end":8267597,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8267598,"byte_end":8267610,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8267611,"byte_end":8267618,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8267619,"byte_end":8267626,"line_start":20,"line_end":20,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1210},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir.rs","byte_start":8268002,"byte_end":8268012,"line_start":9,"line_end":9,"column_start":14,"column_end":24},"name":"remove_dir","qualname":"::fs::remove_dir::remove_dir","value":"pub async fn remove_dir<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes an existing, empty directory.","sig":null,"attributes":[{"value":"/ Removes an existing, empty directory.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir.rs","byte_start":8267866,"byte_end":8267907,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir.rs","byte_start":8267908,"byte_end":8267911,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_dir`](std::fs::remove_dir)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir.rs","byte_start":8267912,"byte_end":8267988,"line_start":8,"line_end":8,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":1220},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir_all.rs","byte_start":8268426,"byte_end":8268440,"line_start":11,"line_end":11,"column_start":14,"column_end":28},"name":"remove_dir_all","qualname":"::fs::remove_dir_all::remove_dir_all","value":"pub async fn remove_dir_all<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes a directory at this path, after removing all its contents. Use carefully!","sig":null,"attributes":[{"value":"/ Removes a directory at this path, after removing all its contents. Use carefully!","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir_all.rs","byte_start":8268216,"byte_end":8268301,"line_start":6,"line_end":6,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir_all.rs","byte_start":8268302,"byte_end":8268305,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_dir_all`][std]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir_all.rs","byte_start":8268306,"byte_end":8268370,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir_all.rs","byte_start":8268371,"byte_end":8268374,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::remove_dir_all","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir_all.rs","byte_start":8268375,"byte_end":8268412,"line_start":10,"line_end":10,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":1230},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8268977,"byte_end":8268988,"line_start":15,"line_end":15,"column_start":14,"column_end":25},"name":"remove_file","qualname":"::fs::remove_file::remove_file","value":"pub async fn remove_file<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes a file from the filesystem.","sig":null,"attributes":[{"value":"/ Removes a file from the filesystem.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8268648,"byte_end":8268687,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8268688,"byte_end":8268691,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Note that there is no guarantee that the file is immediately deleted (e.g.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8268692,"byte_end":8268770,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ depending on platform, other open file descriptors may prevent immediate","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8268771,"byte_end":8268847,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ removal).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8268848,"byte_end":8268861,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8268862,"byte_end":8268865,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_file`][std]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8268866,"byte_end":8268927,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8268928,"byte_end":8268931,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::remove_file","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8268932,"byte_end":8268963,"line_start":14,"line_end":14,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":1240},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/rename.rs","byte_start":8269456,"byte_end":8269462,"line_start":12,"line_end":12,"column_start":14,"column_end":20},"name":"rename","qualname":"::fs::rename::rename","value":"pub async fn rename<impl AsRef<Path>: AsRef<Path>,\n                    impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                   impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Renames a file or directory to a new name, replacing the original file if\n `to` already exists.","sig":null,"attributes":[{"value":"/ Renames a file or directory to a new name, replacing the original file if","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/rename.rs","byte_start":8269193,"byte_end":8269270,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ `to` already exists.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/rename.rs","byte_start":8269271,"byte_end":8269295,"line_start":7,"line_end":7,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/rename.rs","byte_start":8269296,"byte_end":8269299,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This will not work if the new name is on a different mount point.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/rename.rs","byte_start":8269300,"byte_end":8269369,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/rename.rs","byte_start":8269370,"byte_end":8269373,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::rename`](std::fs::rename)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/rename.rs","byte_start":8269374,"byte_end":8269442,"line_start":11,"line_end":11,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":1252},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/set_permissions.rs","byte_start":8269938,"byte_end":8269953,"line_start":12,"line_end":12,"column_start":14,"column_end":29},"name":"set_permissions","qualname":"::fs::set_permissions::set_permissions","value":"pub async fn set_permissions<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                            Permissions)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions found on a file or a directory.","sig":null,"attributes":[{"value":"/ Changes the permissions found on a file or a directory.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/set_permissions.rs","byte_start":8269752,"byte_end":8269811,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/set_permissions.rs","byte_start":8269812,"byte_end":8269815,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::set_permissions`][std]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/set_permissions.rs","byte_start":8269816,"byte_end":8269881,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/set_permissions.rs","byte_start":8269882,"byte_end":8269885,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::set_permissions","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/set_permissions.rs","byte_start":8269886,"byte_end":8269924,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1263},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/symlink_metadata.rs","byte_start":8270382,"byte_end":8270398,"line_start":12,"line_end":12,"column_start":14,"column_end":30},"name":"symlink_metadata","qualname":"::fs::symlink_metadata::symlink_metadata","value":"pub async fn symlink_metadata<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Queries the file system metadata for a path.","sig":null,"attributes":[{"value":"/ Queries the file system metadata for a path.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/symlink_metadata.rs","byte_start":8270205,"byte_end":8270253,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/symlink_metadata.rs","byte_start":8270254,"byte_end":8270257,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::symlink_metadata`][std]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/symlink_metadata.rs","byte_start":8270258,"byte_end":8270324,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/symlink_metadata.rs","byte_start":8270325,"byte_end":8270328,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::symlink_metadata","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/symlink_metadata.rs","byte_start":8270329,"byte_end":8270368,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1274},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8270968,"byte_end":8270973,"line_start":20,"line_end":20,"column_start":14,"column_end":19},"name":"write","qualname":"::fs::write::write","value":"pub async fn write<C: AsRef<[u8]> + Unpin,\n                   impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>, C)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that will open a file for writing and write the entire\n contents of `contents` to it.","sig":null,"attributes":[{"value":"/ Creates a future that will open a file for writing and write the entire","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8270602,"byte_end":8270677,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ contents of `contents` to it.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8270678,"byte_end":8270711,"line_start":6,"line_end":6,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8270712,"byte_end":8270715,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of `std::fs::write`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8270716,"byte_end":8270769,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8270770,"byte_end":8270773,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8270774,"byte_end":8270788,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8270789,"byte_end":8270792,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8270793,"byte_end":8270806,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8270807,"byte_end":8270825,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8270826,"byte_end":8270829,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8270830,"byte_end":8270875,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ fs::write(\"foo.txt\", b\"Hello world!\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8270876,"byte_end":8270925,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8270926,"byte_end":8270938,"line_start":17,"line_end":17,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8270939,"byte_end":8270946,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8270947,"byte_end":8270954,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1284},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8271700,"byte_end":8271704,"line_start":20,"line_end":20,"column_start":14,"column_end":18},"name":"copy","qualname":"::fs::copy::copy","value":"pub async fn copy<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Copies the contents of one file to another. This function will also copy the permission bits of the original file to the destination file.\n This function will overwrite the contents of to.","sig":null,"attributes":[{"value":"/ Copies the contents of one file to another. This function will also copy the permission bits of the original file to the destination file.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8271255,"byte_end":8271397,"line_start":4,"line_end":4,"column_start":1,"column_end":143}},{"value":"/ This function will overwrite the contents of to.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8271398,"byte_end":8271450,"line_start":5,"line_end":5,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8271451,"byte_end":8271454,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of `std::fs::copy`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8271455,"byte_end":8271507,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8271508,"byte_end":8271511,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8271512,"byte_end":8271526,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8271527,"byte_end":8271530,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8271531,"byte_end":8271544,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8271545,"byte_end":8271563,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8271564,"byte_end":8271567,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8271568,"byte_end":8271613,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/ fs::copy(\"foo.txt\", \"bar.txt\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8271614,"byte_end":8271656,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8271657,"byte_end":8271669,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8271670,"byte_end":8271677,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8271678,"byte_end":8271685,"line_start":18,"line_end":18,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":83},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":176}],"decl_id":null,"docs":" Asynchronous values.\n","sig":null,"attributes":[{"value":"allow(unused_imports, dead_code)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":31010,"byte_end":31046,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/ Asynchronous values.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":31048,"byte_end":31072,"line_start":3,"line_end":3,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1357},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31537,"byte_end":31543,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":1355},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31502,"byte_end":31532,"line_start":11,"line_end":11,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1360},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31597,"byte_end":31601,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":1355},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31554,"byte_end":31592,"line_start":13,"line_end":13,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1363},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31763,"byte_end":31767,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":1355},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31620,"byte_end":31686,"line_start":15,"line_end":15,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31691,"byte_end":31758,"line_start":16,"line_end":16,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":1355},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31473,"byte_end":31482,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> {\n\n    /// A not-yet-completed future\n    Future(Fut),\n\n    /// The output of the completed future\n    Done(Fut::Output),\n\n    /// The empty variant after the result of a [`MaybeDone`] has been\n    /// taken using the [`take_output`](MaybeDone::take_output) method.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":1357},{"krate":0,"index":1360},{"krate":0,"index":1363}],"decl_id":null,"docs":" A future that may have completed.\n","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31409,"byte_end":31446,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":93},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31930,"byte_end":31940,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31885,"byte_end":31922,"line_start":23,"line_end":23,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32343,"byte_end":32353,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32059,"byte_end":32144,"line_start":29,"line_end":29,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32149,"byte_end":32220,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32225,"byte_end":32298,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32303,"byte_end":32331,"line_start":32,"line_end":32,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32731,"byte_end":32742,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempts to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32610,"byte_end":32677,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ towards completion.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32682,"byte_end":32705,"line_start":44,"line_end":44,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32710,"byte_end":32719,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":113},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":33954,"byte_end":33960,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":115}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":33902,"byte_end":33942,"line_start":8,"line_end":8,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":118},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34090,"byte_end":34097,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].\n","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34011,"byte_end":34082,"line_start":15,"line_end":15,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1368},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34862,"byte_end":34867,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ok`](ok()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ok`](ok()) function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34633,"byte_end":34674,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34675,"byte_end":34678,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34679,"byte_end":34756,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34825,"byte_end":34850,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":177},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":1432},{"krate":0,"index":178},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":307},{"krate":0,"index":1521},{"krate":0,"index":1617},{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1704},{"krate":0,"index":1740},{"krate":0,"index":1753},{"krate":0,"index":1754},{"krate":0,"index":1755},{"krate":0,"index":1756},{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1802},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1891},{"krate":0,"index":1892},{"krate":0,"index":1893},{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1909},{"krate":0,"index":1910},{"krate":0,"index":1911},{"krate":0,"index":3194},{"krate":0,"index":3195},{"krate":0,"index":3196},{"krate":0,"index":1912},{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":3197}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"/ Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37622,"byte_end":37699,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37700,"byte_end":37703,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37704,"byte_end":37775,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37776,"byte_end":37856,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37857,"byte_end":37931,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37932,"byte_end":37935,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # AsyncRead and AsyncWrite","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37936,"byte_end":37966,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37967,"byte_end":37970,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37971,"byte_end":38051,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38052,"byte_end":38129,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38130,"byte_end":38207,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38208,"byte_end":38288,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38289,"byte_end":38367,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38368,"byte_end":38433,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38434,"byte_end":38437,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38438,"byte_end":38510,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ core methods needed to provide asynchronous reading and writing","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38511,"byte_end":38578,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38579,"byte_end":38658,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38659,"byte_end":38733,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38734,"byte_end":38808,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ respectively.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38809,"byte_end":38826,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38827,"byte_end":38830,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38831,"byte_end":38895,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38896,"byte_end":38971,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38972,"byte_end":39047,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39048,"byte_end":39125,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39126,"byte_end":39129,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39130,"byte_end":39206,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ can be used in almost exactly the same manner as the standard library's","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39207,"byte_end":39282,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39283,"byte_end":39363,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39364,"byte_end":39435,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39436,"byte_end":39505,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39506,"byte_end":39509,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ For example, the standard library documentation introduces `Read` by","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39510,"byte_end":39582,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39583,"byte_end":39663,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39664,"byte_end":39717,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39718,"byte_end":39721,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39722,"byte_end":39735,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncReadExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39736,"byte_end":39776,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39777,"byte_end":39801,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39802,"byte_end":39805,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39806,"byte_end":39824,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39825,"byte_end":39864,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39865,"byte_end":39914,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/     let mut buffer = [0; 10];","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39915,"byte_end":39948,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39949,"byte_end":39952,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     // read up to 10 bytes","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39953,"byte_end":39983,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/     let n = f.read(&mut buffer).await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39984,"byte_end":40027,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40028,"byte_end":40031,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40032,"byte_end":40082,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40083,"byte_end":40097,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40098,"byte_end":40103,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40104,"byte_end":40111,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40112,"byte_end":40115,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`File`]: crate::fs::File","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40116,"byte_end":40145,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/ [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40146,"byte_end":40186,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/ [`std::fs::File`]: std::fs::File","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40187,"byte_end":40223,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ [std_example]: std::io#read-and-write","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40224,"byte_end":40265,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40266,"byte_end":40269,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Buffered Readers and Writers","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40270,"byte_end":40305,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40306,"byte_end":40309,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40310,"byte_end":40391,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40392,"byte_end":40466,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40467,"byte_end":40545,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ and therefore, `tokio::io` does as well.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40546,"byte_end":40590,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40591,"byte_end":40594,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40595,"byte_end":40665,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40666,"byte_end":40744,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40745,"byte_end":40823,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40824,"byte_end":40901,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40902,"byte_end":40905,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40906,"byte_end":40981,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ extra methods to any async reader:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40982,"byte_end":41020,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41021,"byte_end":41024,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41025,"byte_end":41038,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41039,"byte_end":41093,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41094,"byte_end":41118,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41119,"byte_end":41122,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41123,"byte_end":41141,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41142,"byte_end":41181,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41182,"byte_end":41227,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     let mut reader = BufReader::new(f);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41228,"byte_end":41271,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/     let mut buffer = String::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41272,"byte_end":41311,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41312,"byte_end":41315,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     // read a line into buffer","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41316,"byte_end":41350,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/     reader.read_line(&mut buffer).await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41351,"byte_end":41396,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41397,"byte_end":41400,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", buffer);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41401,"byte_end":41432,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41433,"byte_end":41447,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41448,"byte_end":41453,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41454,"byte_end":41461,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41462,"byte_end":41465,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41466,"byte_end":41547,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"/ to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41548,"byte_end":41626,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41627,"byte_end":41689,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41690,"byte_end":41693,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41694,"byte_end":41707,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41708,"byte_end":41760,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41761,"byte_end":41785,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41786,"byte_end":41789,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41790,"byte_end":41808,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41809,"byte_end":41848,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41849,"byte_end":41896,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/     {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41897,"byte_end":41906,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/         let mut writer = BufWriter::new(f);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41907,"byte_end":41954,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41955,"byte_end":41958,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         // Write a byte to the buffer.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41959,"byte_end":42001,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/         writer.write(&[42u8]).await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42002,"byte_end":42043,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42044,"byte_end":42047,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         // Flush the buffer before it goes out of scope.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42048,"byte_end":42108,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"/         writer.flush().await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42109,"byte_end":42143,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42144,"byte_end":42147,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42148,"byte_end":42238,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42239,"byte_end":42242,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42243,"byte_end":42257,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42258,"byte_end":42263,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42264,"byte_end":42271,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42272,"byte_end":42275,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42276,"byte_end":42321,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42322,"byte_end":42364,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42365,"byte_end":42410,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"/ [`BufReader`]: crate::io::BufReader","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42411,"byte_end":42450,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/ [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42451,"byte_end":42490,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42491,"byte_end":42494,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42495,"byte_end":42539,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42540,"byte_end":42543,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42544,"byte_end":42626,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"/ our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42627,"byte_end":42706,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42707,"byte_end":42781,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"/ other words, these types must never block the thread, and instead the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42782,"byte_end":42855,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"/ current task is notified when the I/O resource is ready.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42856,"byte_end":42916,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42917,"byte_end":42920,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ## Conversion to and from Sink/Stream","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42921,"byte_end":42962,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42963,"byte_end":42966,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ It is often convenient to encapsulate the reading and writing of","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42967,"byte_end":43035,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"/ bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43036,"byte_end":43105,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"/ type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43106,"byte_end":43172,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"/ provides some utility traits in the [tokio-util] crate that","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43173,"byte_end":43236,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"/ abstract the asynchronous buffering that is required and allows","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43237,"byte_end":43304,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"/ you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43305,"byte_end":43374,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"/ buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43375,"byte_end":43445,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43446,"byte_end":43524,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ your structured data.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43525,"byte_end":43550,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43551,"byte_end":43554,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [tokio-util]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43555,"byte_end":43631,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43632,"byte_end":43635,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Standard input and output","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43636,"byte_end":43667,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43668,"byte_end":43671,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43672,"byte_end":43752,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/ These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43753,"byte_end":43829,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43830,"byte_end":43877,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43878,"byte_end":43881,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43882,"byte_end":43955,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43956,"byte_end":44032,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"/ function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44033,"byte_end":44109,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44110,"byte_end":44113,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [input]: fn@stdin","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44114,"byte_end":44135,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/ [output]: fn@stdout","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44136,"byte_end":44159,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/ [error]: fn@stderr","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44160,"byte_end":44182,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44183,"byte_end":44186,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # `std` re-exports","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44187,"byte_end":44209,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44210,"byte_end":44213,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Additionally, [`Error`], [`ErrorKind`], and [`Result`] are re-exported","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44214,"byte_end":44288,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ from `std::io` for ease of use.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44289,"byte_end":44324,"line_start":166,"line_end":166,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44325,"byte_end":44328,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44329,"byte_end":44363,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44364,"byte_end":44400,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/ [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44401,"byte_end":44441,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"/ [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44442,"byte_end":44484,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ [\"codec\"]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44485,"byte_end":44558,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ [`Encoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Encoder.html","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44559,"byte_end":44642,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"/ [`Decoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Decoder.html","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44643,"byte_end":44726,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"/ [`Error`]: struct@Error","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44727,"byte_end":44754,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/ [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44755,"byte_end":44788,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/ [`Result`]: type@Result","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44789,"byte_end":44816,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"/ [`Read`]: std::io::Read","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44817,"byte_end":44844,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"/ [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44845,"byte_end":44915,"line_start":179,"line_end":179,"column_start":1,"column_end":71}},{"value":"/ [`Stream`]: crate::stream::Stream","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44916,"byte_end":44953,"line_start":180,"line_end":180,"column_start":1,"column_end":38}},{"value":"/ [`Write`]: std::io::Write","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44954,"byte_end":44983,"line_start":181,"line_end":181,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":186},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47360,"byte_end":47372,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46683,"byte_end":46714,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46715,"byte_end":46718,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46719,"byte_end":46791,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46792,"byte_end":46870,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46871,"byte_end":46957,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46958,"byte_end":47035,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47036,"byte_end":47047,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47048,"byte_end":47051,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47052,"byte_end":47120,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47121,"byte_end":47145,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47146,"byte_end":47149,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47150,"byte_end":47192,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47193,"byte_end":47243,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47244,"byte_end":47297,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47298,"byte_end":47349,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48470,"byte_end":48483,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47390,"byte_end":47475,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47480,"byte_end":47521,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47526,"byte_end":47529,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47534,"byte_end":47581,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47586,"byte_end":47589,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47594,"byte_end":47653,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47658,"byte_end":47716,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47721,"byte_end":47802,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47807,"byte_end":47833,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47838,"byte_end":47841,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47846,"byte_end":47917,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47922,"byte_end":47984,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47989,"byte_end":48060,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48065,"byte_end":48146,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48151,"byte_end":48227,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48232,"byte_end":48283,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48288,"byte_end":48291,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48296,"byte_end":48367,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48372,"byte_end":48375,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48380,"byte_end":48419,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48424,"byte_end":48462,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49386,"byte_end":49393,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48561,"byte_end":48635,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48640,"byte_end":48707,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48712,"byte_end":48715,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48720,"byte_end":48791,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48796,"byte_end":48865,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48870,"byte_end":48944,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48949,"byte_end":49026,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49031,"byte_end":49101,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49106,"byte_end":49159,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49164,"byte_end":49167,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49172,"byte_end":49244,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49249,"byte_end":49271,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49276,"byte_end":49279,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49284,"byte_end":49323,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49328,"byte_end":49378,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":215},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52627,"byte_end":52636,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51046,"byte_end":51076,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51077,"byte_end":51080,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51081,"byte_end":51160,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51161,"byte_end":51235,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51236,"byte_end":51315,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51316,"byte_end":51393,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51394,"byte_end":51405,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51406,"byte_end":51409,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51410,"byte_end":51487,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51488,"byte_end":51506,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51507,"byte_end":51510,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately read","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51511,"byte_end":51587,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/   and placed into the output buffer, where `n` == 0 implies that EOF has","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51588,"byte_end":51664,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/   been reached.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51665,"byte_end":51684,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51685,"byte_end":51688,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51689,"byte_end":51754,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51755,"byte_end":51835,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51836,"byte_end":51915,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51916,"byte_end":51989,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51990,"byte_end":52063,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52064,"byte_end":52085,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52086,"byte_end":52089,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52090,"byte_end":52174,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52175,"byte_end":52199,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52200,"byte_end":52203,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52204,"byte_end":52277,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52278,"byte_end":52357,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52358,"byte_end":52361,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52362,"byte_end":52427,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52428,"byte_end":52449,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52450,"byte_end":52453,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52454,"byte_end":52493,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52494,"byte_end":52530,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52531,"byte_end":52570,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52571,"byte_end":52616,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54280,"byte_end":54308,"line_start":77,"line_end":77,"column_start":15,"column_end":43},"name":"prepare_uninitialized_buffer","qualname":"::io::async_read::AsyncRead::prepare_uninitialized_buffer","value":"pub unsafe fn prepare_uninitialized_buffer(&Self, &mut [MaybeUninit<u8>])\n-> bool","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Prepares an uninitialized buffer to be safe to pass to `read`. Returns\n `true` if the supplied buffer was zeroed out.","sig":null,"attributes":[{"value":"/ Prepares an uninitialized buffer to be safe to pass to `read`. Returns","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52643,"byte_end":52717,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ `true` if the supplied buffer was zeroed out.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52722,"byte_end":52771,"line_start":45,"line_end":45,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52776,"byte_end":52779,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ While it would be highly unusual, implementations of [`io::Read`] are","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52784,"byte_end":52857,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ able to read data from the buffer passed as an argument. Because of","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52862,"byte_end":52933,"line_start":48,"line_end":48,"column_start":5,"column_end":76}},{"value":"/ this, the buffer passed to [`io::Read`] must be initialized memory. In","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52938,"byte_end":53012,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ situations where large numbers of buffers are used, constantly having to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53017,"byte_end":53093,"line_start":50,"line_end":50,"column_start":5,"column_end":81}},{"value":"/ zero out buffers can be expensive.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53098,"byte_end":53136,"line_start":51,"line_end":51,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53141,"byte_end":53144,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function does any necessary work to prepare an uninitialized buffer","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53149,"byte_end":53225,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/ to be safe to pass to `read`. If `read` guarantees to never attempt to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53230,"byte_end":53304,"line_start":54,"line_end":54,"column_start":5,"column_end":79}},{"value":"/ read data out of the supplied buffer, then `prepare_uninitialized_buffer`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53309,"byte_end":53386,"line_start":55,"line_end":55,"column_start":5,"column_end":82}},{"value":"/ doesn't need to do any work.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53391,"byte_end":53423,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53428,"byte_end":53431,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If this function returns `true`, then the memory has been zeroed out.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53436,"byte_end":53509,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ This allows implementations of `AsyncRead` which are composed of","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53514,"byte_end":53582,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ multiple subimplementations to efficiently implement","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53587,"byte_end":53643,"line_start":60,"line_end":60,"column_start":5,"column_end":61}},{"value":"/ `prepare_uninitialized_buffer`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53648,"byte_end":53683,"line_start":61,"line_end":61,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53688,"byte_end":53691,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function isn't actually `unsafe` to call but `unsafe` to implement.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53696,"byte_end":53772,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ The implementer must ensure that either the whole `buf` has been zeroed","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53777,"byte_end":53852,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ or `poll_read_buf()` overwrites the buffer without reading it and returns","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53857,"byte_end":53934,"line_start":65,"line_end":65,"column_start":5,"column_end":82}},{"value":"/ correct value.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53939,"byte_end":53957,"line_start":66,"line_end":66,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53962,"byte_end":53965,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function is called from [`poll_read_buf`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53970,"byte_end":54021,"line_start":68,"line_end":68,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54026,"byte_end":54029,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54034,"byte_end":54046,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54051,"byte_end":54054,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Implementations that return `false` must never read from data slices","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54059,"byte_end":54131,"line_start":72,"line_end":72,"column_start":5,"column_end":77}},{"value":"/ that they did not write to.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54136,"byte_end":54167,"line_start":73,"line_end":73,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54172,"byte_end":54175,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`io::Read`]: std::io::Read","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54180,"byte_end":54211,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ [`poll_read_buf`]: method@Self::poll_read_buf","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54216,"byte_end":54265,"line_start":76,"line_end":76,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54821,"byte_end":54830,"line_start":93,"line_end":93,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54451,"byte_end":54504,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54509,"byte_end":54512,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_read))`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54517,"byte_end":54575,"line_start":87,"line_end":87,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54580,"byte_end":54583,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54588,"byte_end":54647,"line_start":89,"line_end":89,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54652,"byte_end":54710,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54715,"byte_end":54782,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/ readable or is closed.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54787,"byte_end":54813,"line_start":92,"line_end":92,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55291,"byte_end":55304,"line_start":105,"line_end":105,"column_start":8,"column_end":21},"name":"poll_read_buf","qualname":"::io::async_read::AsyncRead::poll_read_buf","value":"pub fn poll_read_buf<B: BufMut>(Pin<&mut Self>, &mut Context, &mut B)\n-> Poll<io::Result<usize>> where Self: Sized","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified `BufMut`, returning\n how many bytes were read.","sig":null,"attributes":[{"value":"/ Pulls some bytes from this source into the specified `BufMut`, returning","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54955,"byte_end":55031,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ how many bytes were read.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55036,"byte_end":55065,"line_start":100,"line_end":100,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55070,"byte_end":55073,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The `buf` provided will have bytes read into it and the internal cursor","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55078,"byte_end":55153,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ will be advanced if any bytes were read. Note that this method typically","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55158,"byte_end":55234,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/ will not reallocate the buffer provided.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55239,"byte_end":55283,"line_start":104,"line_end":104,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":246},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58459,"byte_end":58468,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":57977,"byte_end":58007,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58008,"byte_end":58011,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58012,"byte_end":58086,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58087,"byte_end":58157,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58158,"byte_end":58227,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58228,"byte_end":58231,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58232,"byte_end":58297,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58298,"byte_end":58319,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58320,"byte_end":58323,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58324,"byte_end":58360,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58361,"byte_end":58402,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58403,"byte_end":58448,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58806,"byte_end":58816,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"pub fn start_seek(Pin<&mut Self>, &mut Context, SeekFrom)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58475,"byte_end":58532,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58537,"byte_end":58540,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58545,"byte_end":58618,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58623,"byte_end":58649,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58654,"byte_end":58657,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58662,"byte_end":58737,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58742,"byte_end":58798,"line_start":25,"line_end":25,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59399,"byte_end":59412,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"pub fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58942,"byte_end":58985,"line_start":32,"line_end":32,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58990,"byte_end":58993,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58998,"byte_end":59047,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59052,"byte_end":59122,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59127,"byte_end":59188,"line_start":36,"line_end":36,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59193,"byte_end":59196,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59201,"byte_end":59213,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59218,"byte_end":59221,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59226,"byte_end":59282,"line_start":40,"line_end":40,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59287,"byte_end":59290,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59295,"byte_end":59307,"line_start":42,"line_end":42,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59312,"byte_end":59315,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Calling this method without calling `start_seek` first is an error.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59320,"byte_end":59391,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":271},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62915,"byte_end":62925,"line_start":46,"line_end":46,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61052,"byte_end":61084,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61085,"byte_end":61088,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61089,"byte_end":61171,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61172,"byte_end":61247,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61248,"byte_end":61315,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61316,"byte_end":61319,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61320,"byte_end":61400,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61401,"byte_end":61419,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61420,"byte_end":61423,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61424,"byte_end":61495,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61496,"byte_end":61510,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61511,"byte_end":61514,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61515,"byte_end":61583,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61584,"byte_end":61664,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61665,"byte_end":61744,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61745,"byte_end":61818,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61819,"byte_end":61892,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61893,"byte_end":61914,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61915,"byte_end":61918,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61919,"byte_end":62003,"line_start":26,"line_end":26,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62004,"byte_end":62028,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62029,"byte_end":62032,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62033,"byte_end":62115,"line_start":29,"line_end":29,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62116,"byte_end":62199,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62200,"byte_end":62203,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62204,"byte_end":62288,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62289,"byte_end":62373,"line_start":33,"line_end":33,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62374,"byte_end":62452,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62453,"byte_end":62532,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62533,"byte_end":62594,"line_start":36,"line_end":36,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62595,"byte_end":62598,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62599,"byte_end":62665,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62666,"byte_end":62688,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62689,"byte_end":62692,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62693,"byte_end":62731,"line_start":41,"line_end":41,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62732,"byte_end":62776,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62777,"byte_end":62816,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62817,"byte_end":62856,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62857,"byte_end":62904,"line_start":45,"line_end":45,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63309,"byte_end":63319,"line_start":55,"line_end":55,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62932,"byte_end":62986,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62991,"byte_end":62994,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62999,"byte_end":63060,"line_start":49,"line_end":49,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63065,"byte_end":63068,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63073,"byte_end":63135,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63140,"byte_end":63198,"line_start":52,"line_end":52,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63203,"byte_end":63270,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63275,"byte_end":63301,"line_start":54,"line_end":54,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63860,"byte_end":63870,"line_start":70,"line_end":70,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63447,"byte_end":63518,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63523,"byte_end":63545,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63550,"byte_end":63553,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63558,"byte_end":63604,"line_start":64,"line_end":64,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63609,"byte_end":63612,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63617,"byte_end":63681,"line_start":66,"line_end":66,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63686,"byte_end":63744,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63749,"byte_end":63817,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63822,"byte_end":63852,"line_start":69,"line_end":69,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67156,"byte_end":67169,"line_start":130,"line_end":130,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"pub fn poll_shutdown(Pin<&mut Self>, &mut Context)\n-> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63952,"byte_end":64026,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64031,"byte_end":64079,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64084,"byte_end":64087,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64092,"byte_end":64163,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64168,"byte_end":64244,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64249,"byte_end":64325,"line_start":77,"line_end":77,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64330,"byte_end":64405,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64410,"byte_end":64481,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64486,"byte_end":64562,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64567,"byte_end":64595,"line_start":81,"line_end":81,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64600,"byte_end":64603,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64608,"byte_end":64669,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64674,"byte_end":64745,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64750,"byte_end":64822,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64827,"byte_end":64902,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64907,"byte_end":64980,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64985,"byte_end":65060,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65065,"byte_end":65137,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65142,"byte_end":65153,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65158,"byte_end":65161,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65166,"byte_end":65240,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65245,"byte_end":65317,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65322,"byte_end":65391,"line_start":94,"line_end":94,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65396,"byte_end":65464,"line_start":95,"line_end":95,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65469,"byte_end":65530,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65535,"byte_end":65538,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65543,"byte_end":65561,"line_start":98,"line_end":98,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65566,"byte_end":65569,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65574,"byte_end":65644,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65649,"byte_end":65652,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65657,"byte_end":65720,"line_start":102,"line_end":102,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65725,"byte_end":65794,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65799,"byte_end":65874,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65879,"byte_end":65952,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65957,"byte_end":66008,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66013,"byte_end":66016,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66021,"byte_end":66091,"line_start":108,"line_end":108,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66096,"byte_end":66171,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66176,"byte_end":66248,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66253,"byte_end":66323,"line_start":111,"line_end":111,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66328,"byte_end":66403,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66408,"byte_end":66411,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66416,"byte_end":66497,"line_start":114,"line_end":114,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66502,"byte_end":66577,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66582,"byte_end":66649,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66654,"byte_end":66657,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66662,"byte_end":66674,"line_start":118,"line_end":118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66679,"byte_end":66682,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66687,"byte_end":66758,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66763,"byte_end":66829,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66834,"byte_end":66908,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66913,"byte_end":66977,"line_start":123,"line_end":123,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66982,"byte_end":67021,"line_start":124,"line_end":124,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67026,"byte_end":67029,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67034,"byte_end":67046,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67051,"byte_end":67054,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67059,"byte_end":67134,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67139,"byte_end":67148,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67457,"byte_end":67471,"line_start":136,"line_end":136,"column_start":8,"column_end":22},"name":"poll_write_buf","qualname":"::io::async_write::AsyncWrite::poll_write_buf","value":"pub fn poll_write_buf<B: Buf>(Pin<&mut Self>, &mut Context, &mut B)\n-> Poll<Result<usize, io::Error>> where Self: Sized","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Writes a `Buf` into this value, returning how many bytes were written.","sig":null,"attributes":[{"value":"/ Writes a `Buf` into this value, returning how many bytes were written.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67251,"byte_end":67325,"line_start":132,"line_end":132,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67330,"byte_end":67333,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Note that this method will advance the `buf` provided automatically by","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67338,"byte_end":67412,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ the number of bytes written.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67417,"byte_end":67449,"line_start":135,"line_end":135,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1731},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8299752,"byte_end":8299763,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"name":"PollEvented","qualname":"::io::poll_evented::PollEvented","value":"PollEvented {  }","parent":null,"children":[{"krate":0,"index":1733},{"krate":0,"index":1734}],"decl_id":null,"docs":" Associates an I/O resource that implements the [`std::io::Read`] and/or\n [`std::io::Write`] traits with the reactor that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19269,"byte_end":19298,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1643},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8302009,"byte_end":8302012,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<PollEvented<E>>::new","value":"pub fn new(E) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8301587,"byte_end":8301655,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8301660,"byte_end":8301663,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8301668,"byte_end":8301680,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8301685,"byte_end":8301688,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8301693,"byte_end":8301753,"line_start":172,"line_end":172,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8301758,"byte_end":8301761,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8301766,"byte_end":8301836,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8301841,"byte_end":8301914,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8301919,"byte_end":8301997,"line_start":176,"line_end":176,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1644},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8303216,"byte_end":8303230,"line_start":205,"line_end":205,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<PollEvented<E>>::new_with_ready","value":"pub fn new_with_ready(E, mio::Ready) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`\n state. `new_with_ready` should be used over `new` when you need control over the readiness\n state, such as when a file descriptor only allows reads. This does not add `hup` or `error`\n so if you are interested in those states, you will need to add them to the readiness state\n passed to this function.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8302112,"byte_end":8302206,"line_start":181,"line_end":181,"column_start":5,"column_end":99}},{"value":"/ state. `new_with_ready` should be used over `new` when you need control over the readiness","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8302211,"byte_end":8302305,"line_start":182,"line_end":182,"column_start":5,"column_end":99}},{"value":"/ state, such as when a file descriptor only allows reads. This does not add `hup` or `error`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8302310,"byte_end":8302405,"line_start":183,"line_end":183,"column_start":5,"column_end":100}},{"value":"/ so if you are interested in those states, you will need to add them to the readiness state","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8302410,"byte_end":8302504,"line_start":184,"line_end":184,"column_start":5,"column_end":99}},{"value":"/ passed to this function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8302509,"byte_end":8302537,"line_start":185,"line_end":185,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8302542,"byte_end":8302545,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8302550,"byte_end":8302587,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8302592,"byte_end":8302595,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8302600,"byte_end":8302611,"line_start":189,"line_end":189,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8302616,"byte_end":8302633,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8302638,"byte_end":8302669,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8302674,"byte_end":8302719,"line_start":192,"line_end":192,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8302724,"byte_end":8302778,"line_start":193,"line_end":193,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8302783,"byte_end":8302835,"line_start":194,"line_end":194,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8302840,"byte_end":8302850,"line_start":195,"line_end":195,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8302855,"byte_end":8302862,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8302867,"byte_end":8302870,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8302875,"byte_end":8302887,"line_start":198,"line_end":198,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8302892,"byte_end":8302895,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8302900,"byte_end":8302960,"line_start":200,"line_end":200,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8302965,"byte_end":8302968,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8302973,"byte_end":8303043,"line_start":202,"line_end":202,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8303048,"byte_end":8303121,"line_start":203,"line_end":203,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8303126,"byte_end":8303204,"line_start":204,"line_end":204,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1645},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8303708,"byte_end":8303715,"line_start":219,"line_end":219,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollEvented<E>>::get_ref","value":"pub fn get_ref(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the underlying I/O object this readiness","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8303594,"byte_end":8303668,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ stream is wrapping.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8303673,"byte_end":8303696,"line_start":218,"line_end":218,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1646},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8303891,"byte_end":8303898,"line_start":225,"line_end":225,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<PollEvented<E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O object this readiness","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8303776,"byte_end":8303851,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ stream is wrapping.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8303856,"byte_end":8303879,"line_start":224,"line_end":224,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1647},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8304434,"byte_end":8304444,"line_start":237,"line_end":237,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollEvented<E>>::into_inner","value":"pub fn into_inner(Self) -> io::Result<E>","parent":null,"children":[],"decl_id":null,"docs":" Consumes self, returning the inner I/O object","sig":null,"attributes":[{"value":"/ Consumes self, returning the inner I/O object","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8303967,"byte_end":8304016,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8304021,"byte_end":8304024,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This function will deregister the I/O resource from the reactor before","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8304029,"byte_end":8304103,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ returning. If the deregistration operation fails, an error is returned.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8304108,"byte_end":8304183,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8304188,"byte_end":8304191,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8304196,"byte_end":8304271,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8304276,"byte_end":8304352,"line_start":235,"line_end":235,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8304357,"byte_end":8304422,"line_start":236,"line_end":236,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1648},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8305601,"byte_end":8305616,"line_start":269,"line_end":269,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<PollEvented<E>>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context, mio::Ready)\n-> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's read readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's read readiness state.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8304592,"byte_end":8304643,"line_start":243,"line_end":243,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8304648,"byte_end":8304651,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ The mask argument allows specifying what readiness to notify on. This","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8304656,"byte_end":8304729,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/ can be any value, including platform specific readiness, **except**","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8304734,"byte_end":8304805,"line_start":246,"line_end":246,"column_start":5,"column_end":76}},{"value":"/ `writable`. HUP is always implicitly included on platforms that support","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8304810,"byte_end":8304885,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ it.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8304890,"byte_end":8304897,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8304902,"byte_end":8304905,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a read then `Poll::Pending` is returned","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8304910,"byte_end":8304986,"line_start":250,"line_end":250,"column_start":5,"column_end":81}},{"value":"/ and the current task is notified once a new event is received.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8304991,"byte_end":8305057,"line_start":251,"line_end":251,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8305062,"byte_end":8305065,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a read-ready state until readiness is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8305070,"byte_end":8305143,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ cleared by calling [`clear_read_ready`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8305148,"byte_end":8305192,"line_start":254,"line_end":254,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8305197,"byte_end":8305200,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ [`clear_read_ready`]: method@Self::clear_read_ready","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8305205,"byte_end":8305260,"line_start":256,"line_end":256,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8305265,"byte_end":8305268,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8305273,"byte_end":8305285,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8305290,"byte_end":8305293,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8305298,"byte_end":8305326,"line_start":260,"line_end":260,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8305331,"byte_end":8305334,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8305339,"byte_end":8305371,"line_start":262,"line_end":262,"column_start":5,"column_end":37}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8305376,"byte_end":8305420,"line_start":263,"line_end":263,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8305425,"byte_end":8305428,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8305433,"byte_end":8305446,"line_start":265,"line_end":265,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8305451,"byte_end":8305454,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8305459,"byte_end":8305532,"line_start":267,"line_end":267,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_write_ready`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8305537,"byte_end":8305589,"line_start":268,"line_end":268,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1649},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8306592,"byte_end":8306608,"line_start":299,"line_end":299,"column_start":12,"column_end":28},"name":"clear_read_ready","qualname":"<PollEvented<E>>::clear_read_ready","value":"pub fn clear_read_ready(&Self, &mut Context, mio::Ready) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Clears the I/O resource's read readiness state and registers the current\n task to be notified once a read readiness event is received.","sig":null,"attributes":[{"value":"/ Clears the I/O resource's read readiness state and registers the current","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8305993,"byte_end":8306069,"line_start":284,"line_end":284,"column_start":5,"column_end":81}},{"value":"/ task to be notified once a read readiness event is received.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8306074,"byte_end":8306138,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8306143,"byte_end":8306146,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_read_ready` will return","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8306151,"byte_end":8306213,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` until a new read readiness event has been received.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8306218,"byte_end":8306289,"line_start":288,"line_end":288,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8306294,"byte_end":8306297,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ The `mask` argument specifies the readiness bits to clear. This may not","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8306302,"byte_end":8306377,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ include `writable` or `hup`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8306382,"byte_end":8306414,"line_start":291,"line_end":291,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8306419,"byte_end":8306422,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8306427,"byte_end":8306439,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8306444,"byte_end":8306447,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8306452,"byte_end":8306480,"line_start":295,"line_end":295,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8306485,"byte_end":8306488,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable or HUP","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8306493,"byte_end":8306531,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8306536,"byte_end":8306580,"line_start":298,"line_end":298,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1650},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8308048,"byte_end":8308064,"line_start":340,"line_end":340,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<PollEvented<E>>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's write readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's write readiness state.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8307133,"byte_end":8307185,"line_start":316,"line_end":316,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8307190,"byte_end":8307193,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ This always checks for writable readiness and also checks for HUP","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8307198,"byte_end":8307267,"line_start":318,"line_end":318,"column_start":5,"column_end":74}},{"value":"/ readiness on platforms that support it.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8307272,"byte_end":8307315,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8307320,"byte_end":8307323,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a write then `Poll::Pending` is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8307328,"byte_end":8307396,"line_start":321,"line_end":321,"column_start":5,"column_end":73}},{"value":"/ returned and the current task is notified once a new event is received.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8307401,"byte_end":8307476,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8307481,"byte_end":8307484,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a write-ready state until readiness is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8307489,"byte_end":8307563,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/ cleared by calling [`clear_write_ready`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8307568,"byte_end":8307613,"line_start":325,"line_end":325,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8307618,"byte_end":8307621,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ [`clear_write_ready`]: method@Self::clear_write_ready","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8307626,"byte_end":8307683,"line_start":327,"line_end":327,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8307688,"byte_end":8307691,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8307696,"byte_end":8307708,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8307713,"byte_end":8307716,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8307721,"byte_end":8307749,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8307754,"byte_end":8307757,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ * `ready` contains bits besides `writable` and `hup`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8307762,"byte_end":8307819,"line_start":333,"line_end":333,"column_start":5,"column_end":62}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8307824,"byte_end":8307868,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8307873,"byte_end":8307876,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8307881,"byte_end":8307894,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8307899,"byte_end":8307902,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8307907,"byte_end":8307980,"line_start":338,"line_end":338,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_read_ready`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8307985,"byte_end":8308036,"line_start":339,"line_end":339,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1651},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8308913,"byte_end":8308930,"line_start":362,"line_end":362,"column_start":12,"column_end":29},"name":"clear_write_ready","qualname":"<PollEvented<E>>::clear_write_ready","value":"pub fn clear_write_ready(&Self, &mut Context) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Resets the I/O resource's write readiness state and registers the current\n task to be notified once a write readiness event is received.","sig":null,"attributes":[{"value":"/ Resets the I/O resource's write readiness state and registers the current","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8308340,"byte_end":8308417,"line_start":350,"line_end":350,"column_start":5,"column_end":82}},{"value":"/ task to be notified once a write readiness event is received.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8308422,"byte_end":8308487,"line_start":351,"line_end":351,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8308492,"byte_end":8308495,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This only clears writable readiness. HUP (on platforms that support HUP)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8308500,"byte_end":8308576,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ cannot be cleared as it is a final state.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8308581,"byte_end":8308626,"line_start":354,"line_end":354,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8308631,"byte_end":8308634,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_write_ready(Ready::writable())` will","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8308639,"byte_end":8308714,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ return `NotReady` until a new write readiness event has been received.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8308719,"byte_end":8308793,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8308798,"byte_end":8308801,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8308806,"byte_end":8308818,"line_start":359,"line_end":359,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8308823,"byte_end":8308826,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8308831,"byte_end":8308901,"line_start":361,"line_end":361,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1735},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8313172,"byte_end":8313184,"line_start":41,"line_end":41,"column_start":16,"column_end":28},"name":"Registration","qualname":"::io::registration::Registration","value":"Registration {  }","parent":null,"children":[{"krate":0,"index":1736},{"krate":0,"index":1737}],"decl_id":null,"docs":" Associates an I/O resource with the reactor instance that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19269,"byte_end":19298,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1683},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8313876,"byte_end":8313879,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Registration>::new","value":"pub fn new<T>(&T) -> io::Result<Registration> where T: Evented","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8313304,"byte_end":8313360,"line_start":50,"line_end":50,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8313365,"byte_end":8313368,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8313373,"byte_end":8313385,"line_start":52,"line_end":52,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8313390,"byte_end":8313393,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8313398,"byte_end":8313450,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8313455,"byte_end":8313514,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8313519,"byte_end":8313522,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8313527,"byte_end":8313530,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8313535,"byte_end":8313547,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8313552,"byte_end":8313555,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8313560,"byte_end":8313620,"line_start":60,"line_end":60,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8313625,"byte_end":8313628,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8313633,"byte_end":8313703,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8313708,"byte_end":8313781,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8313786,"byte_end":8313864,"line_start":64,"line_end":64,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1685},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8315282,"byte_end":8315296,"line_start":102,"line_end":102,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<Registration>::new_with_ready","value":"pub fn new_with_ready<T>(&T, mio::Ready) -> io::Result<Registration> where\nT: Evented","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.\n `new_with_ready` should be used over `new` when you need control over the readiness state,\n such as when a file descriptor only allows reads. This does not add `hup` or `error` so if\n you are interested in those states, you will need to add them to the readiness state passed\n to this function.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8314026,"byte_end":8314117,"line_start":72,"line_end":72,"column_start":5,"column_end":96}},{"value":"/ `new_with_ready` should be used over `new` when you need control over the readiness state,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8314122,"byte_end":8314216,"line_start":73,"line_end":73,"column_start":5,"column_end":99}},{"value":"/ such as when a file descriptor only allows reads. This does not add `hup` or `error` so if","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8314221,"byte_end":8314315,"line_start":74,"line_end":74,"column_start":5,"column_end":99}},{"value":"/ you are interested in those states, you will need to add them to the readiness state passed","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8314320,"byte_end":8314415,"line_start":75,"line_end":75,"column_start":5,"column_end":100}},{"value":"/ to this function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8314420,"byte_end":8314441,"line_start":76,"line_end":76,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8314446,"byte_end":8314449,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8314454,"byte_end":8314491,"line_start":78,"line_end":78,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8314496,"byte_end":8314499,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8314504,"byte_end":8314515,"line_start":80,"line_end":80,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8314520,"byte_end":8314537,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8314542,"byte_end":8314573,"line_start":82,"line_end":82,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8314578,"byte_end":8314623,"line_start":83,"line_end":83,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8314628,"byte_end":8314682,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8314687,"byte_end":8314739,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8314744,"byte_end":8314754,"line_start":86,"line_end":86,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8314759,"byte_end":8314766,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8314771,"byte_end":8314774,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8314779,"byte_end":8314791,"line_start":89,"line_end":89,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8314796,"byte_end":8314799,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8314804,"byte_end":8314856,"line_start":91,"line_end":91,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8314861,"byte_end":8314920,"line_start":92,"line_end":92,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8314925,"byte_end":8314928,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8314933,"byte_end":8314936,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8314941,"byte_end":8314953,"line_start":95,"line_end":95,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8314958,"byte_end":8314961,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8314966,"byte_end":8315026,"line_start":97,"line_end":97,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8315031,"byte_end":8315034,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8315039,"byte_end":8315109,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8315114,"byte_end":8315187,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8315192,"byte_end":8315270,"line_start":101,"line_end":101,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8316531,"byte_end":8316541,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"deregister","qualname":"<Registration>::deregister","value":"pub fn deregister<T>(&mut Self, &T) -> io::Result<()> where T: Evented","parent":null,"children":[],"decl_id":null,"docs":" Deregisters the I/O resource from the reactor it is associated with.","sig":null,"attributes":[{"value":"/ Deregisters the I/O resource from the reactor it is associated with.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8315755,"byte_end":8315827,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8315832,"byte_end":8315835,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This function must be called before the I/O resource associated with the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8315840,"byte_end":8315916,"line_start":121,"line_end":121,"column_start":5,"column_end":81}},{"value":"/ registration is dropped.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8315921,"byte_end":8315949,"line_start":122,"line_end":122,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8315954,"byte_end":8315957,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8315962,"byte_end":8316037,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8316042,"byte_end":8316118,"line_start":125,"line_end":125,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8316123,"byte_end":8316188,"line_start":126,"line_end":126,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8316193,"byte_end":8316196,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8316201,"byte_end":8316213,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8316218,"byte_end":8316221,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If the deregistration was successful, `Ok` is returned. Any calls to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8316226,"byte_end":8316298,"line_start":130,"line_end":130,"column_start":5,"column_end":77}},{"value":"/ `Reactor::turn` that happen after a successful call to `deregister` will","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8316303,"byte_end":8316379,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/ no longer result in notifications getting sent for this registration.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8316384,"byte_end":8316457,"line_start":132,"line_end":132,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8316462,"byte_end":8316465,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ `Err` is returned if an error is encountered.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8316470,"byte_end":8316519,"line_start":134,"line_end":134,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1689},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8318092,"byte_end":8318107,"line_start":174,"line_end":174,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<Registration>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's read readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's read readiness stream.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8316844,"byte_end":8316909,"line_start":146,"line_end":146,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8316914,"byte_end":8316917,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new read readiness event since the last","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8316922,"byte_end":8316996,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ call to `poll_read_ready`, it is returned. If it has not, the current","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8317001,"byte_end":8317074,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8317079,"byte_end":8317129,"line_start":150,"line_end":150,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8317134,"byte_end":8317137,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8317142,"byte_end":8317215,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8317220,"byte_end":8317295,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8317300,"byte_end":8317336,"line_start":154,"line_end":154,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8317341,"byte_end":8317344,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8317349,"byte_end":8317367,"line_start":156,"line_end":156,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8317372,"byte_end":8317375,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8317380,"byte_end":8317425,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8317430,"byte_end":8317433,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8317438,"byte_end":8317513,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8317518,"byte_end":8317579,"line_start":161,"line_end":161,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8317584,"byte_end":8317587,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8317592,"byte_end":8317667,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_read_ready`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8317672,"byte_end":8317719,"line_start":164,"line_end":164,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8317724,"byte_end":8317727,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8317732,"byte_end":8317808,"line_start":166,"line_end":166,"column_start":5,"column_end":81}},{"value":"/   error. This could represent a permanent internal error for example.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8317813,"byte_end":8317886,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8317891,"byte_end":8317894,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ [edge-triggered]: struct@mio::Poll#edge-triggered-and-level-triggered","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8317899,"byte_end":8317972,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8317977,"byte_end":8317980,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8317985,"byte_end":8317997,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8318002,"byte_end":8318005,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8318010,"byte_end":8318080,"line_start":173,"line_end":173,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8318948,"byte_end":8318963,"line_start":198,"line_end":198,"column_start":12,"column_end":27},"name":"take_read_ready","qualname":"<Registration>::take_read_ready","value":"pub fn take_read_ready(&Self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consume any pending read readiness event.","sig":null,"attributes":[{"value":"/ Consume any pending read readiness event.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8318587,"byte_end":8318632,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8318637,"byte_end":8318640,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_read_ready`] **except** that it","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8318645,"byte_end":8318717,"line_start":193,"line_end":193,"column_start":5,"column_end":77}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8318722,"byte_end":8318797,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8318802,"byte_end":8318870,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8318875,"byte_end":8318878,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8318883,"byte_end":8318936,"line_start":197,"line_end":197,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8320317,"byte_end":8320333,"line_start":230,"line_end":230,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<Registration>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's write readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's write readiness stream.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8319065,"byte_end":8319131,"line_start":202,"line_end":202,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8319136,"byte_end":8319139,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new write readiness event since the last","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8319144,"byte_end":8319219,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ call to `poll_write_ready`, it is returned. If it has not, the current","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8319224,"byte_end":8319298,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8319303,"byte_end":8319353,"line_start":206,"line_end":206,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8319358,"byte_end":8319361,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8319366,"byte_end":8319439,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8319444,"byte_end":8319519,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8319524,"byte_end":8319560,"line_start":210,"line_end":210,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8319565,"byte_end":8319568,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8319573,"byte_end":8319591,"line_start":212,"line_end":212,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8319596,"byte_end":8319599,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8319604,"byte_end":8319649,"line_start":214,"line_end":214,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8319654,"byte_end":8319657,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8319662,"byte_end":8319737,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8319742,"byte_end":8319803,"line_start":217,"line_end":217,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8319808,"byte_end":8319811,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8319816,"byte_end":8319891,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_write_ready`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8319896,"byte_end":8319944,"line_start":220,"line_end":220,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8319949,"byte_end":8319952,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8319957,"byte_end":8320033,"line_start":222,"line_end":222,"column_start":5,"column_end":81}},{"value":"/   error. This could represent a permanent internal error for example.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8320038,"byte_end":8320111,"line_start":223,"line_end":223,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8320116,"byte_end":8320119,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [edge-triggered]: struct@mio::Poll#edge-triggered-and-level-triggered","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8320124,"byte_end":8320197,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8320202,"byte_end":8320205,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8320210,"byte_end":8320222,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8320227,"byte_end":8320230,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8320235,"byte_end":8320305,"line_start":229,"line_end":229,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8321180,"byte_end":8321196,"line_start":254,"line_end":254,"column_start":12,"column_end":28},"name":"take_write_ready","qualname":"<Registration>::take_write_ready","value":"pub fn take_write_ready(&Self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes any pending write readiness event.","sig":null,"attributes":[{"value":"/ Consumes any pending write readiness event.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8320814,"byte_end":8320861,"line_start":247,"line_end":247,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8320866,"byte_end":8320869,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_write_ready`] **except** that it","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8320874,"byte_end":8320947,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8320952,"byte_end":8321027,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8321032,"byte_end":8321100,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8321105,"byte_end":8321108,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8321113,"byte_end":8321168,"line_start":253,"line_end":253,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1788},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stderr.rs","byte_start":8325576,"byte_end":8325582,"line_start":37,"line_end":37,"column_start":16,"column_end":22},"name":"Stderr","qualname":"::io::stderr::Stderr","value":"Stderr {  }","parent":null,"children":[{"krate":0,"index":1789}],"decl_id":null,"docs":" A handle to the standard error stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19632,"byte_end":19658,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1787},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stderr.rs","byte_start":8326631,"byte_end":8326637,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"name":"stderr","qualname":"::io::stderr::stderr","value":"pub fn stderr() -> Stderr","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard error of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19632,"byte_end":19658,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1793},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdin.rs","byte_start":8328701,"byte_end":8328706,"line_start":29,"line_end":29,"column_start":16,"column_end":21},"name":"Stdin","qualname":"::io::stdin::Stdin","value":"Stdin {  }","parent":null,"children":[{"krate":0,"index":1794}],"decl_id":null,"docs":" A handle to the standard input stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19632,"byte_end":19658,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1792},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdin.rs","byte_start":8329363,"byte_end":8329368,"line_start":43,"line_end":43,"column_start":12,"column_end":17},"name":"stdin","qualname":"::io::stdin::stdin","value":"pub fn stdin() -> Stdin","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard input of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19632,"byte_end":19658,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1798},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdout.rs","byte_start":8331412,"byte_end":8331418,"line_start":37,"line_end":37,"column_start":16,"column_end":22},"name":"Stdout","qualname":"::io::stdout::Stdout","value":"Stdout {  }","parent":null,"children":[{"krate":0,"index":1799}],"decl_id":null,"docs":" A handle to the standard output stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19632,"byte_end":19658,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1797},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdout.rs","byte_start":8332456,"byte_end":8332462,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"name":"stdout","qualname":"::io::stdout::stdout","value":"pub fn stdout() -> Stdout","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard output of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19632,"byte_end":19658,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1916},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8334101,"byte_end":8334109,"line_start":21,"line_end":21,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":1918}],"decl_id":null,"docs":" The readable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1919},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8334238,"byte_end":8334247,"line_start":26,"line_end":26,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":1921}],"decl_id":null,"docs":" The writable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1922},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8334561,"byte_end":8334566,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"pub fn split<T>(T) -> (ReadHalf<T>, WriteHalf<T>) where T: AsyncRead +\nAsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Splits a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1831},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8335192,"byte_end":8335202,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<ReadHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &WriteHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `ReadHalf` and some `WriteHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `ReadHalf` and some `WriteHalf` were split from the same","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8335089,"byte_end":8335164,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8335169,"byte_end":8335180,"line_start":65,"line_end":65,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1832},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8335609,"byte_end":8335616,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"pub fn unsplit(Self, WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunites with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunites with a previously split `WriteHalf`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8335285,"byte_end":8335334,"line_start":70,"line_end":70,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8335339,"byte_end":8335342,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8335347,"byte_end":8335359,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8335364,"byte_end":8335367,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8335372,"byte_end":8335446,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8335451,"byte_end":8335501,"line_start":75,"line_end":75,"column_start":5,"column_end":55}},{"value":"/ This can be checked ahead of time by comparing the stream ID","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8335506,"byte_end":8335570,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/ of the two halves.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8335575,"byte_end":8335597,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1835},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8336117,"byte_end":8336127,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<WriteHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &ReadHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this `WriteHalf` and some `ReadHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Check if this `WriteHalf` and some `ReadHalf` were split from the same","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8336015,"byte_end":8336089,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8336094,"byte_end":8336105,"line_start":95,"line_end":95,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1924},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/seek.rs","byte_start":8339364,"byte_end":8339368,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":1927},{"krate":0,"index":1928}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/seek.rs","byte_start":8339201,"byte_end":8339267,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/seek.rs","byte_start":8339285,"byte_end":8339352,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":2614},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8342527,"byte_end":8342542,"line_start":11,"line_end":11,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":2615},{"krate":0,"index":2617},{"krate":0,"index":2619},{"krate":0,"index":2620}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncBufRead`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2615},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8345242,"byte_end":8345252,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":2614},"children":[],"decl_id":null,"docs":" Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2617},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8348143,"byte_end":8348152,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":2614},"children":[],"decl_id":null,"docs":" Reads all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2619},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8349552,"byte_end":8349557,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":2614},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2620},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8351407,"byte_end":8351412,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":2614},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2622},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8353591,"byte_end":8353603,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":2623},{"krate":0,"index":2625},{"krate":0,"index":2627},{"krate":0,"index":2630},{"krate":0,"index":2637},{"krate":0,"index":2639},{"krate":0,"index":2641},{"krate":0,"index":2643},{"krate":0,"index":2645},{"krate":0,"index":2647},{"krate":0,"index":2649},{"krate":0,"index":2651},{"krate":0,"index":2653},{"krate":0,"index":2655},{"krate":0,"index":2657},{"krate":0,"index":2659},{"krate":0,"index":2661},{"krate":0,"index":2663},{"krate":0,"index":2665},{"krate":0,"index":2667},{"krate":0,"index":2669},{"krate":0,"index":2671},{"krate":0,"index":2632},{"krate":0,"index":2634},{"krate":0,"index":2636}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2623},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8354723,"byte_end":8354728,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Creates a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2625},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8357557,"byte_end":8357561,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2627},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8359863,"byte_end":8359871,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"pub fn read_buf<'a, B>(&'a mut Self, &'a mut B) -> ReadBuf where Self: Sized +\nUnpin, B: BufMut","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2630},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8361768,"byte_end":8361778,"line_start":280,"line_end":280,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2637},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8363215,"byte_end":8363222,"line_start":324,"line_end":324,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"pub fn read_u8<'a>(&'a mut Self) -> ReadU8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2639},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8364511,"byte_end":8364518,"line_start":362,"line_end":362,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"pub fn read_i8<'a>(&'a mut Self) -> ReadI8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2641},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8365849,"byte_end":8365857,"line_start":400,"line_end":400,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"pub fn read_u16<'a>(&'a mut Self) -> ReadU16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2643},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8367197,"byte_end":8367205,"line_start":438,"line_end":438,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"pub fn read_i16<'a>(&'a mut Self) -> ReadI16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2645},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8368486,"byte_end":8368494,"line_start":475,"line_end":475,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"pub fn read_u32<'a>(&'a mut Self) -> ReadU32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2647},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8369789,"byte_end":8369797,"line_start":513,"line_end":513,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"pub fn read_i32<'a>(&'a mut Self) -> ReadI32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2649},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8371160,"byte_end":8371168,"line_start":552,"line_end":552,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"pub fn read_u64<'a>(&'a mut Self) -> ReadU64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2651},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8372461,"byte_end":8372469,"line_start":589,"line_end":589,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"pub fn read_i64<'a>(&'a mut Self) -> ReadI64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2653},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8373929,"byte_end":8373938,"line_start":629,"line_end":629,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"pub fn read_u128<'a>(&'a mut Self) -> ReadU128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2655},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8375332,"byte_end":8375341,"line_start":669,"line_end":669,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"pub fn read_i128<'a>(&'a mut Self) -> ReadI128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2657},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8376688,"byte_end":8376699,"line_start":707,"line_end":707,"column_start":16,"column_end":27},"name":"read_u16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16_le","value":"pub fn read_u16_le<'a>(&'a mut Self) -> ReadU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2659},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8378060,"byte_end":8378071,"line_start":745,"line_end":745,"column_start":16,"column_end":27},"name":"read_i16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16_le","value":"pub fn read_i16_le<'a>(&'a mut Self) -> ReadI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2661},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8379372,"byte_end":8379383,"line_start":782,"line_end":782,"column_start":16,"column_end":27},"name":"read_u32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32_le","value":"pub fn read_u32_le<'a>(&'a mut Self) -> ReadU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2663},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8380695,"byte_end":8380706,"line_start":820,"line_end":820,"column_start":16,"column_end":27},"name":"read_i32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32_le","value":"pub fn read_i32_le<'a>(&'a mut Self) -> ReadI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2665},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8382087,"byte_end":8382098,"line_start":859,"line_end":859,"column_start":16,"column_end":27},"name":"read_u64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64_le","value":"pub fn read_u64_le<'a>(&'a mut Self) -> ReadU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2667},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8383392,"byte_end":8383403,"line_start":896,"line_end":896,"column_start":16,"column_end":27},"name":"read_i64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64_le","value":"pub fn read_i64_le<'a>(&'a mut Self) -> ReadI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2669},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8384881,"byte_end":8384893,"line_start":936,"line_end":936,"column_start":16,"column_end":28},"name":"read_u128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128_le","value":"pub fn read_u128_le<'a>(&'a mut Self) -> ReadU128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2671},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8386287,"byte_end":8386299,"line_start":976,"line_end":976,"column_start":16,"column_end":28},"name":"read_i128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128_le","value":"pub fn read_i128_le<'a>(&'a mut Self) -> ReadI128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2632},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8387912,"byte_end":8387923,"line_start":1022,"line_end":1022,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2634},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8389491,"byte_end":8389505,"line_start":1069,"line_end":1069,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2636},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8390683,"byte_end":8390687,"line_start":1103,"line_end":1103,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2003},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391729,"byte_end":8391741,"line_start":35,"line_end":35,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":2004}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncSeek`] types.","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to [`AsyncSeek`] types.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8390954,"byte_end":8391027,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391028,"byte_end":8391031,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ As a convenience, this trait may be imported using the [`prelude`]:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391032,"byte_end":8391103,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391104,"byte_end":8391107,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391108,"byte_end":8391122,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391123,"byte_end":8391126,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391127,"byte_end":8391134,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use std::io::{Cursor, SeekFrom};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391135,"byte_end":8391171,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391172,"byte_end":8391198,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391199,"byte_end":8391202,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391203,"byte_end":8391221,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391222,"byte_end":8391261,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/     let mut cursor = Cursor::new(b\"abcdefg\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391262,"byte_end":8391311,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391312,"byte_end":8391315,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/     // the `seek` method is defined by this trait","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391316,"byte_end":8391369,"line_start":19,"line_end":19,"column_start":1,"column_end":54}},{"value":"/     cursor.seek(SeekFrom::Start(3)).await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391370,"byte_end":8391417,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391418,"byte_end":8391421,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/     let mut buf = [0; 1];","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391422,"byte_end":8391451,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/     let n = cursor.read(&mut buf).await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391452,"byte_end":8391497,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391498,"byte_end":8391523,"line_start":24,"line_end":24,"column_start":1,"column_end":26}},{"value":"/     assert_eq!(buf, [b'd']);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391524,"byte_end":8391556,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391557,"byte_end":8391560,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391561,"byte_end":8391575,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391576,"byte_end":8391581,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391582,"byte_end":8391589,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391590,"byte_end":8391593,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ See [module][crate::io] documentation for more details.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391594,"byte_end":8391653,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391654,"byte_end":8391657,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: AsyncSeek","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391658,"byte_end":8391686,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ [`prelude`]: crate::prelude","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391687,"byte_end":8391718,"line_start":34,"line_end":34,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2004},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8392458,"byte_end":8392462,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":2003},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391759,"byte_end":8391828,"line_start":36,"line_end":36,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391833,"byte_end":8391886,"line_start":37,"line_end":37,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391891,"byte_end":8391894,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391899,"byte_end":8391976,"line_start":39,"line_end":39,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391981,"byte_end":8392003,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8392008,"byte_end":8392011,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8392016,"byte_end":8392030,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8392035,"byte_end":8392038,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8392043,"byte_end":8392056,"line_start":44,"line_end":44,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8392061,"byte_end":8392085,"line_start":45,"line_end":45,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8392090,"byte_end":8392116,"line_start":46,"line_end":46,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8392121,"byte_end":8392124,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ use std::io::SeekFrom;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8392129,"byte_end":8392155,"line_start":48,"line_end":48,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8392160,"byte_end":8392163,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8392168,"byte_end":8392213,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8392218,"byte_end":8392266,"line_start":51,"line_end":51,"column_start":5,"column_end":53}},{"value":"/ file.seek(SeekFrom::Start(6)).await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8392271,"byte_end":8392312,"line_start":52,"line_end":52,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8392317,"byte_end":8392320,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![0u8; 10];","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8392325,"byte_end":8392362,"line_start":54,"line_end":54,"column_start":5,"column_end":42}},{"value":"/ file.read_exact(&mut contents).await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8392367,"byte_end":8392409,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8392414,"byte_end":8392426,"line_start":56,"line_end":56,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8392431,"byte_end":8392438,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8392443,"byte_end":8392450,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":2674},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8394665,"byte_end":8394678,"line_start":68,"line_end":68,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":2675},{"krate":0,"index":2677},{"krate":0,"index":2680},{"krate":0,"index":2684},{"krate":0,"index":2686},{"krate":0,"index":2688},{"krate":0,"index":2690},{"krate":0,"index":2692},{"krate":0,"index":2694},{"krate":0,"index":2696},{"krate":0,"index":2698},{"krate":0,"index":2700},{"krate":0,"index":2702},{"krate":0,"index":2704},{"krate":0,"index":2706},{"krate":0,"index":2708},{"krate":0,"index":2710},{"krate":0,"index":2712},{"krate":0,"index":2714},{"krate":0,"index":2716},{"krate":0,"index":2718},{"krate":0,"index":2682},{"krate":0,"index":2683}],"decl_id":null,"docs":" Writes bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2675},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8396520,"byte_end":8396525,"line_start":115,"line_end":115,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2677},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8399327,"byte_end":8399336,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"pub fn write_buf<'a, B>(&'a mut Self, &'a mut B) -> WriteBuf where\nSelf: Sized + Unpin, B: Buf","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2680},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8400678,"byte_end":8400687,"line_start":228,"line_end":228,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2684},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8402087,"byte_end":8402095,"line_start":271,"line_end":271,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"pub fn write_u8<'a>(&'a mut Self, u8) -> WriteU8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2686},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8403356,"byte_end":8403364,"line_start":308,"line_end":308,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"pub fn write_i8<'a>(&'a mut Self, i8) -> WriteI8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2688},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8404679,"byte_end":8404688,"line_start":346,"line_end":346,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"pub fn write_u16<'a>(&'a mut Self, u16) -> WriteU16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2690},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8406001,"byte_end":8406010,"line_start":384,"line_end":384,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"pub fn write_i16<'a>(&'a mut Self, i16) -> WriteI16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2692},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8407350,"byte_end":8407359,"line_start":422,"line_end":422,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"pub fn write_u32<'a>(&'a mut Self, u32) -> WriteU32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2694},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8408694,"byte_end":8408703,"line_start":460,"line_end":460,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"pub fn write_i32<'a>(&'a mut Self, i32) -> WriteI32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2696},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8410080,"byte_end":8410089,"line_start":498,"line_end":498,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"pub fn write_u64<'a>(&'a mut Self, u64) -> WriteU64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2698},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8411476,"byte_end":8411485,"line_start":536,"line_end":536,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"pub fn write_i64<'a>(&'a mut Self, i64) -> WriteI64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2700},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8412940,"byte_end":8412950,"line_start":576,"line_end":576,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"pub fn write_u128<'a>(&'a mut Self, u128) -> WriteU128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2702},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8414340,"byte_end":8414350,"line_start":616,"line_end":616,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"pub fn write_i128<'a>(&'a mut Self, i128) -> WriteI128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2704},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8415682,"byte_end":8415694,"line_start":655,"line_end":655,"column_start":16,"column_end":28},"name":"write_u16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16_le","value":"pub fn write_u16_le<'a>(&'a mut Self, u16) -> WriteU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2706},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8417021,"byte_end":8417033,"line_start":693,"line_end":693,"column_start":16,"column_end":28},"name":"write_i16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16_le","value":"pub fn write_i16_le<'a>(&'a mut Self, i16) -> WriteI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2708},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8418387,"byte_end":8418399,"line_start":731,"line_end":731,"column_start":16,"column_end":28},"name":"write_u32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32_le","value":"pub fn write_u32_le<'a>(&'a mut Self, u32) -> WriteU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2710},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8419748,"byte_end":8419760,"line_start":769,"line_end":769,"column_start":16,"column_end":28},"name":"write_i32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32_le","value":"pub fn write_i32_le<'a>(&'a mut Self, i32) -> WriteI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2712},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8421151,"byte_end":8421163,"line_start":807,"line_end":807,"column_start":16,"column_end":28},"name":"write_u64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64_le","value":"pub fn write_u64_le<'a>(&'a mut Self, u64) -> WriteU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2714},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8422564,"byte_end":8422576,"line_start":845,"line_end":845,"column_start":16,"column_end":28},"name":"write_i64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64_le","value":"pub fn write_i64_le<'a>(&'a mut Self, i64) -> WriteI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2716},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8424043,"byte_end":8424056,"line_start":885,"line_end":885,"column_start":16,"column_end":29},"name":"write_u128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128_le","value":"pub fn write_u128_le<'a>(&'a mut Self, u128) -> WriteU128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2718},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8425458,"byte_end":8425471,"line_start":925,"line_end":925,"column_start":16,"column_end":29},"name":"write_i128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128_le","value":"pub fn write_i128_le<'a>(&'a mut Self, i128) -> WriteI128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2682},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8426491,"byte_end":8426496,"line_start":958,"line_end":958,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Flushes this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2683},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8427716,"byte_end":8427724,"line_start":995,"line_end":995,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"pub fn shutdown(&mut Self) -> Shutdown<, Self> where Self: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12234},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8429133,"byte_end":8429142,"line_start":29,"line_end":29,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":12236},{"krate":0,"index":12237},{"krate":0,"index":12238},{"krate":0,"index":12239}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8429478,"byte_end":8429481,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8429336,"byte_end":8429428,"line_start":39,"line_end":39,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8429433,"byte_end":8429466,"line_start":40,"line_end":40,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8429643,"byte_end":8429656,"line_start":46,"line_end":46,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8429566,"byte_end":8429631,"line_start":45,"line_end":45,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2072},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8430332,"byte_end":8430339,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8430195,"byte_end":8430241,"line_start":65,"line_end":65,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8430246,"byte_end":8430249,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8430254,"byte_end":8430320,"line_start":67,"line_end":67,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8430531,"byte_end":8430538,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8430386,"byte_end":8430440,"line_start":72,"line_end":72,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8430445,"byte_end":8430448,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8430453,"byte_end":8430519,"line_start":74,"line_end":74,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2074},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8430749,"byte_end":8430760,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8430597,"byte_end":8430658,"line_start":79,"line_end":79,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8430663,"byte_end":8430666,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8430671,"byte_end":8430737,"line_start":81,"line_end":81,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8430991,"byte_end":8431001,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufReader`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufReader`, returning the underlying reader.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8430840,"byte_end":8430903,"line_start":86,"line_end":86,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8430908,"byte_end":8430911,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8430916,"byte_end":8430979,"line_start":88,"line_end":88,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2076},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8431205,"byte_end":8431211,"line_start":96,"line_end":96,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8431045,"byte_end":8431101,"line_start":93,"line_end":93,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8431106,"byte_end":8431109,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8431114,"byte_end":8431193,"line_start":95,"line_end":95,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":12207},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8435457,"byte_end":8435466,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":12209}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8435745,"byte_end":8435748,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"pub fn new(RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wraps a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8435591,"byte_end":8435648,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8435653,"byte_end":8435656,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8435661,"byte_end":8435733,"line_start":29,"line_end":29,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8436080,"byte_end":8436093,"line_start":40,"line_end":40,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufStream<RW>>::with_capacity","value":"pub fn with_capacity(usize, usize, RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]\n capacity.","sig":null,"attributes":[{"value":"/ Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8435880,"byte_end":8435965,"line_start":36,"line_end":36,"column_start":5,"column_end":90}},{"value":"/ capacity.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8435970,"byte_end":8435983,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8435988,"byte_end":8435991,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8435996,"byte_end":8436068,"line_start":39,"line_end":39,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2116},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8436550,"byte_end":8436557,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"pub fn get_ref(&Self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8436405,"byte_end":8436455,"line_start":53,"line_end":53,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8436460,"byte_end":8436463,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8436468,"byte_end":8436538,"line_start":55,"line_end":55,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2117},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8436777,"byte_end":8436784,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8436624,"byte_end":8436682,"line_start":60,"line_end":60,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8436687,"byte_end":8436690,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8436695,"byte_end":8436765,"line_start":62,"line_end":62,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2118},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8437019,"byte_end":8437030,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8436859,"byte_end":8436924,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8436929,"byte_end":8436932,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8436937,"byte_end":8437007,"line_start":69,"line_end":69,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2119},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8437294,"byte_end":8437304,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"pub fn into_inner(Self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8437139,"byte_end":8437206,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8437211,"byte_end":8437214,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8437219,"byte_end":8437282,"line_start":76,"line_end":76,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12157},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8441123,"byte_end":8441132,"line_start":33,"line_end":33,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":12159},{"krate":0,"index":12160},{"krate":0,"index":12161}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2158},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8441440,"byte_end":8441443,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8441298,"byte_end":8441390,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8441395,"byte_end":8441428,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2159},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8441605,"byte_end":8441618,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8441528,"byte_end":8441593,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2161},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8442700,"byte_end":8442707,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8442642,"byte_end":8442688,"line_start":85,"line_end":85,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2162},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8442898,"byte_end":8442905,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8442754,"byte_end":8442808,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8442813,"byte_end":8442816,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8442821,"byte_end":8442886,"line_start":92,"line_end":92,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2163},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8443115,"byte_end":8443126,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8442964,"byte_end":8443025,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8443030,"byte_end":8443033,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8443038,"byte_end":8443103,"line_start":99,"line_end":99,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2164},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8443357,"byte_end":8443367,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8443206,"byte_end":8443269,"line_start":104,"line_end":104,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8443274,"byte_end":8443277,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8443282,"byte_end":8443345,"line_start":106,"line_end":106,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8443479,"byte_end":8443485,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8443411,"byte_end":8443467,"line_start":111,"line_end":111,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":12108},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8446118,"byte_end":8446123,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":12111},{"krate":0,"index":12112},{"krate":0,"index":12113}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":7985170,"byte_end":7985179,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2200},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8446564,"byte_end":8446571,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8446490,"byte_end":8446552,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2201},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8446903,"byte_end":8446910,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8446640,"byte_end":8446710,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8446715,"byte_end":8446718,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8446723,"byte_end":8446796,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8446801,"byte_end":8446874,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8446879,"byte_end":8446891,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2202},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8447269,"byte_end":8447280,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8446999,"byte_end":8447076,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8447081,"byte_end":8447084,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8447089,"byte_end":8447162,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8447167,"byte_end":8447240,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8447245,"byte_end":8447257,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2203},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8447477,"byte_end":8447487,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8447409,"byte_end":8447465,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2724},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/copy.rs","byte_start":8450063,"byte_end":8450067,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::util::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":2728},{"krate":0,"index":2729},{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2732},{"krate":0,"index":2733},{"krate":0,"index":2734}],"decl_id":null,"docs":" A future that asynchronously copies the entire contents of a reader into a\n writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/copy.rs","byte_start":8449980,"byte_end":8450047,"line_start":17,"line_end":17,"column_start":5,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":2720},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/copy.rs","byte_start":8451332,"byte_end":8451336,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"copy","qualname":"::io::util::copy::copy","value":"pub fn copy<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W) -> Copy where\nR: AsyncRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2740},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8454093,"byte_end":8454098,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2741}],"decl_id":null,"docs":" An async reader which is always at EOF.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2742},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8454777,"byte_end":8454782,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2743},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/flush.rs","byte_start":8455999,"byte_end":8456004,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":2746}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":12069},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8457120,"byte_end":8457125,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":12071},{"krate":0,"index":12072},{"krate":0,"index":12073},{"krate":0,"index":12074}],"decl_id":null,"docs":" Stream for the [`lines`](crate::io::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":7985170,"byte_end":7985179,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2285},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8457972,"byte_end":8457981,"line_start":57,"line_end":57,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"pub async fn next_line<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8457482,"byte_end":8457522,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8457527,"byte_end":8457530,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8457535,"byte_end":8457549,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8457554,"byte_end":8457557,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8457562,"byte_end":8457569,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8457574,"byte_end":8457608,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8457613,"byte_end":8457648,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8457653,"byte_end":8457656,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8457661,"byte_end":8457744,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8457749,"byte_end":8457789,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8457794,"byte_end":8457797,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8457802,"byte_end":8457855,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8457860,"byte_end":8457903,"line_start":52,"line_end":52,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8457908,"byte_end":8457913,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8457918,"byte_end":8457930,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8457935,"byte_end":8457942,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8457947,"byte_end":8457954,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2290},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8458208,"byte_end":8458215,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lines<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a mutable reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a mutable reference to the underlying reader","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8458141,"byte_end":8458196,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2291},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8458334,"byte_end":8458341,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Lines<R>>::get_ref","value":"pub fn get_ref(&mut Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a reference to the underlying reader","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8458275,"byte_end":8458322,"line_start":68,"line_end":68,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2292},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8458628,"byte_end":8458638,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Lines<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Lines<R>`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Lines<R>`, returning the underlying reader.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8458393,"byte_end":8458454,"line_start":73,"line_end":73,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8458459,"byte_end":8458462,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8458467,"byte_end":8458530,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/ Therefore, a following read from the underlying reader may lead to data loss.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8458535,"byte_end":8458616,"line_start":76,"line_end":76,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2295},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8458757,"byte_end":8458771,"line_start":87,"line_end":87,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"pub fn poll_next_line(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2751},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read.rs","byte_start":8460740,"byte_end":8460744,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":2754},{"krate":0,"index":2755}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read.rs","byte_start":8460657,"byte_end":8460724,"line_start":27,"line_end":27,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2760},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_buf.rs","byte_start":8461807,"byte_end":8461814,"line_start":21,"line_end":21,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":2764},{"krate":0,"index":2765}],"decl_id":null,"docs":" Future returned by [`read_buf`](crate::io::AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_buf.rs","byte_start":8461724,"byte_end":8461791,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2771},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_exact.rs","byte_start":8463063,"byte_end":8463072,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":2774},{"krate":0,"index":2775},{"krate":0,"index":2776}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_exact.rs","byte_start":8462980,"byte_end":8463047,"line_start":31,"line_end":31,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":12027},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8467396,"byte_end":8467402,"line_start":112,"line_end":112,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":12029}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11994},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8467418,"byte_end":8467424,"line_start":113,"line_end":113,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":11996}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11949},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8467440,"byte_end":8467447,"line_start":115,"line_end":115,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":11951},{"krate":0,"index":11952},{"krate":0,"index":11954}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11904},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8467472,"byte_end":8467479,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":11906},{"krate":0,"index":11907},{"krate":0,"index":11909}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11859},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8467504,"byte_end":8467511,"line_start":117,"line_end":117,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":11861},{"krate":0,"index":11862},{"krate":0,"index":11864}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11814},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8467536,"byte_end":8467544,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":11816},{"krate":0,"index":11817},{"krate":0,"index":11819}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11769},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8467572,"byte_end":8467579,"line_start":120,"line_end":120,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":11771},{"krate":0,"index":11772},{"krate":0,"index":11774}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11724},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8467604,"byte_end":8467611,"line_start":121,"line_end":121,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":11726},{"krate":0,"index":11727},{"krate":0,"index":11729}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11679},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8467636,"byte_end":8467643,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":11681},{"krate":0,"index":11682},{"krate":0,"index":11684}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11634},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8467668,"byte_end":8467676,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":11636},{"krate":0,"index":11637},{"krate":0,"index":11639}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11589},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8467704,"byte_end":8467713,"line_start":125,"line_end":125,"column_start":9,"column_end":18},"name":"ReadU16Le","qualname":"::io::util::read_int::ReadU16Le","value":"ReadU16Le {  }","parent":null,"children":[{"krate":0,"index":11591},{"krate":0,"index":11592},{"krate":0,"index":11594}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11544},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8467741,"byte_end":8467750,"line_start":126,"line_end":126,"column_start":9,"column_end":18},"name":"ReadU32Le","qualname":"::io::util::read_int::ReadU32Le","value":"ReadU32Le {  }","parent":null,"children":[{"krate":0,"index":11546},{"krate":0,"index":11547},{"krate":0,"index":11549}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11499},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8467778,"byte_end":8467787,"line_start":127,"line_end":127,"column_start":9,"column_end":18},"name":"ReadU64Le","qualname":"::io::util::read_int::ReadU64Le","value":"ReadU64Le {  }","parent":null,"children":[{"krate":0,"index":11501},{"krate":0,"index":11502},{"krate":0,"index":11504}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11454},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8467815,"byte_end":8467825,"line_start":128,"line_end":128,"column_start":9,"column_end":19},"name":"ReadU128Le","qualname":"::io::util::read_int::ReadU128Le","value":"ReadU128Le {  }","parent":null,"children":[{"krate":0,"index":11456},{"krate":0,"index":11457},{"krate":0,"index":11459}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11409},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8467856,"byte_end":8467865,"line_start":130,"line_end":130,"column_start":9,"column_end":18},"name":"ReadI16Le","qualname":"::io::util::read_int::ReadI16Le","value":"ReadI16Le {  }","parent":null,"children":[{"krate":0,"index":11411},{"krate":0,"index":11412},{"krate":0,"index":11414}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11364},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8467893,"byte_end":8467902,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"name":"ReadI32Le","qualname":"::io::util::read_int::ReadI32Le","value":"ReadI32Le {  }","parent":null,"children":[{"krate":0,"index":11366},{"krate":0,"index":11367},{"krate":0,"index":11369}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11319},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8467930,"byte_end":8467939,"line_start":132,"line_end":132,"column_start":9,"column_end":18},"name":"ReadI64Le","qualname":"::io::util::read_int::ReadI64Le","value":"ReadI64Le {  }","parent":null,"children":[{"krate":0,"index":11321},{"krate":0,"index":11322},{"krate":0,"index":11324}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11274},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8467967,"byte_end":8467977,"line_start":133,"line_end":133,"column_start":9,"column_end":19},"name":"ReadI128Le","qualname":"::io::util::read_int::ReadI128Le","value":"ReadI128Le {  }","parent":null,"children":[{"krate":0,"index":11276},{"krate":0,"index":11277},{"krate":0,"index":11279}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2925},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_line.rs","byte_start":8468395,"byte_end":8468403,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":2928},{"krate":0,"index":2929},{"krate":0,"index":2930},{"krate":0,"index":2931}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_line.rs","byte_start":8468312,"byte_end":8468379,"line_start":13,"line_end":13,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2936},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8471639,"byte_end":8471648,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":2939},{"krate":0,"index":2940},{"krate":0,"index":2941}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8471509,"byte_end":8471576,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2947},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_string.rs","byte_start":8474627,"byte_end":8474639,"line_start":13,"line_end":13,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":2950},{"krate":0,"index":2951},{"krate":0,"index":2952},{"krate":0,"index":2953}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_string.rs","byte_start":8474544,"byte_end":8474611,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2958},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_until.rs","byte_start":8477092,"byte_end":8477101,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":2961},{"krate":0,"index":2962},{"krate":0,"index":2963},{"krate":0,"index":2964}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n The delimeter is included in the resulting vector.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_until.rs","byte_start":8477009,"byte_end":8477076,"line_start":13,"line_end":13,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2970},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/repeat.rs","byte_start":8479547,"byte_end":8479553,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":2971}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2969},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/repeat.rs","byte_start":8480239,"byte_end":8480245,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2974},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/shutdown.rs","byte_start":8481194,"byte_end":8481202,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":2977}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2982},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8482374,"byte_end":8482378,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":2983}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2984},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8483219,"byte_end":8483223,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":11235},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8484468,"byte_end":8484473,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":11237},{"krate":0,"index":11238},{"krate":0,"index":11239},{"krate":0,"index":11240}],"decl_id":null,"docs":" Stream for the [`split`](crate::io::AsyncBufReadExt::split) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":7985170,"byte_end":7985179,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2506},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8485334,"byte_end":8485346,"line_start":57,"line_end":57,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"pub async fn next_segment<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8484822,"byte_end":8484865,"line_start":40,"line_end":40,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8484870,"byte_end":8484873,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8484878,"byte_end":8484892,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8484897,"byte_end":8484900,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8484905,"byte_end":8484912,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8484917,"byte_end":8484951,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8484956,"byte_end":8484991,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8484996,"byte_end":8484999,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8485004,"byte_end":8485087,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8485092,"byte_end":8485139,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8485144,"byte_end":8485147,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8485152,"byte_end":8485214,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8485219,"byte_end":8485265,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8485270,"byte_end":8485275,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8485280,"byte_end":8485292,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8485297,"byte_end":8485304,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8485309,"byte_end":8485316,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2513},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8485584,"byte_end":8485601,"line_start":69,"line_end":69,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"pub fn poll_next_segment(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11188},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8498395,"byte_end":8498407,"line_start":20,"line_end":20,"column_start":16,"column_end":28},"name":"StreamReader","qualname":"::io::util::stream_reader::StreamReader","value":"StreamReader {  }","parent":null,"children":[{"krate":0,"index":11191},{"krate":0,"index":11192}],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3000},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8499683,"byte_end":8499696,"line_start":68,"line_end":68,"column_start":8,"column_end":21},"name":"stream_reader","qualname":"::io::util::stream_reader::stream_reader","value":"pub fn stream_reader<S, B>(S) -> StreamReader<S, B> where S: Stream<Item =\nResult<B, io::Error>>, B: Buf","parent":null,"children":[],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8498484,"byte_end":8498564,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8498565,"byte_end":8498568,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8498569,"byte_end":8498582,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8498583,"byte_end":8498586,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8498587,"byte_end":8498594,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8498595,"byte_end":8498616,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/ use tokio::io::{stream_reader, AsyncReadExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8498617,"byte_end":8498666,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8498667,"byte_end":8498687,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8498688,"byte_end":8498734,"line_start":35,"line_end":35,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8498735,"byte_end":8498738,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Create a stream from an iterator.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8498739,"byte_end":8498779,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ let stream = tokio::stream::iter(vec![","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8498780,"byte_end":8498822,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/     Ok(Bytes::from_static(&[0, 1, 2, 3])),","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8498823,"byte_end":8498869,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[4, 5, 6, 7])),","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8498870,"byte_end":8498916,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[8, 9, 10, 11])),","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8498917,"byte_end":8498965,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ ]);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8498966,"byte_end":8498973,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8498974,"byte_end":8498977,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // Convert it to an AsyncRead.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8498978,"byte_end":8499012,"line_start":44,"line_end":44,"column_start":1,"column_end":35}},{"value":"/ let mut read = stream_reader(stream);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8499013,"byte_end":8499054,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8499055,"byte_end":8499058,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ // Read five bytes from the stream.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8499059,"byte_end":8499098,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/ let mut buf = [0; 5];","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8499099,"byte_end":8499124,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/ read.read_exact(&mut buf).await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8499125,"byte_end":8499162,"line_start":49,"line_end":49,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(buf, [0, 1, 2, 3, 4]);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8499163,"byte_end":8499200,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8499201,"byte_end":8499204,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Read the rest of the current chunk.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8499205,"byte_end":8499247,"line_start":52,"line_end":52,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 3);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8499248,"byte_end":8499294,"line_start":53,"line_end":53,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..3], [5, 6, 7]);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8499295,"byte_end":8499332,"line_start":54,"line_end":54,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8499333,"byte_end":8499336,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Read the next chunk.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8499337,"byte_end":8499364,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 4);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8499365,"byte_end":8499411,"line_start":57,"line_end":57,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..4], [8, 9, 10, 11]);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8499412,"byte_end":8499454,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8499455,"byte_end":8499458,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // We have now reached the end.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8499459,"byte_end":8499494,"line_start":60,"line_end":60,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 0);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8499495,"byte_end":8499541,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8499542,"byte_end":8499545,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8499546,"byte_end":8499558,"line_start":63,"line_end":63,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8499559,"byte_end":8499566,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8499567,"byte_end":8499574,"line_start":65,"line_end":65,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11146},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8487196,"byte_end":8487200,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":11148},{"krate":0,"index":11149}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":7985170,"byte_end":7985179,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2536},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8487790,"byte_end":8487795,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8487487,"byte_end":8487540,"line_start":30,"line_end":30,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8487545,"byte_end":8487591,"line_start":31,"line_end":31,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8487596,"byte_end":8487599,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8487604,"byte_end":8487614,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8487619,"byte_end":8487622,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8487627,"byte_end":8487704,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8487709,"byte_end":8487778,"line_start":36,"line_end":36,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2537},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8488114,"byte_end":8488123,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8487843,"byte_end":8487914,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8487919,"byte_end":8487993,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8487998,"byte_end":8488073,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8488078,"byte_end":8488102,"line_start":44,"line_end":44,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2538},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8488246,"byte_end":8488253,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8488188,"byte_end":8488234,"line_start":49,"line_end":49,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2539},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8488545,"byte_end":8488552,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8488300,"byte_end":8488354,"line_start":54,"line_end":54,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8488359,"byte_end":8488362,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8488367,"byte_end":8488440,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8488445,"byte_end":8488517,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8488522,"byte_end":8488533,"line_start":58,"line_end":58,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2540},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8488863,"byte_end":8488874,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8488611,"byte_end":8488672,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8488677,"byte_end":8488680,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8488685,"byte_end":8488758,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8488763,"byte_end":8488835,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8488840,"byte_end":8488851,"line_start":67,"line_end":67,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2541},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8489020,"byte_end":8489030,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8488954,"byte_end":8489008,"line_start":72,"line_end":72,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3023},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write.rs","byte_start":8490960,"byte_end":8490965,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":3026},{"krate":0,"index":3027}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write.rs","byte_start":8490877,"byte_end":8490944,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3032},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_all.rs","byte_start":8491861,"byte_end":8491869,"line_start":12,"line_end":12,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":3035},{"krate":0,"index":3036}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_all.rs","byte_start":8491778,"byte_end":8491845,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3041},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_buf.rs","byte_start":8493252,"byte_end":8493260,"line_start":13,"line_end":13,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":3045},{"krate":0,"index":3046}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_buf.rs","byte_start":8493169,"byte_end":8493236,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":11100},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8497141,"byte_end":8497148,"line_start":111,"line_end":111,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":11102},{"krate":0,"index":11103}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11063},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8497164,"byte_end":8497171,"line_start":112,"line_end":112,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":11065},{"krate":0,"index":11066}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11018},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8497187,"byte_end":8497195,"line_start":114,"line_end":114,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":11020},{"krate":0,"index":11021},{"krate":0,"index":11023}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10973},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8497220,"byte_end":8497228,"line_start":115,"line_end":115,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":10975},{"krate":0,"index":10976},{"krate":0,"index":10978}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10928},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8497253,"byte_end":8497261,"line_start":116,"line_end":116,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":10930},{"krate":0,"index":10931},{"krate":0,"index":10933}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10883},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8497286,"byte_end":8497295,"line_start":117,"line_end":117,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":10885},{"krate":0,"index":10886},{"krate":0,"index":10888}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10838},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8497323,"byte_end":8497331,"line_start":119,"line_end":119,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":10840},{"krate":0,"index":10841},{"krate":0,"index":10843}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10793},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8497356,"byte_end":8497364,"line_start":120,"line_end":120,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":10795},{"krate":0,"index":10796},{"krate":0,"index":10798}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10748},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8497389,"byte_end":8497397,"line_start":121,"line_end":121,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":10750},{"krate":0,"index":10751},{"krate":0,"index":10753}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10703},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8497422,"byte_end":8497431,"line_start":122,"line_end":122,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":10705},{"krate":0,"index":10706},{"krate":0,"index":10708}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10658},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8497459,"byte_end":8497469,"line_start":124,"line_end":124,"column_start":9,"column_end":19},"name":"WriteU16Le","qualname":"::io::util::write_int::WriteU16Le","value":"WriteU16Le {  }","parent":null,"children":[{"krate":0,"index":10660},{"krate":0,"index":10661},{"krate":0,"index":10663}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10613},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8497497,"byte_end":8497507,"line_start":125,"line_end":125,"column_start":9,"column_end":19},"name":"WriteU32Le","qualname":"::io::util::write_int::WriteU32Le","value":"WriteU32Le {  }","parent":null,"children":[{"krate":0,"index":10615},{"krate":0,"index":10616},{"krate":0,"index":10618}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10568},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8497535,"byte_end":8497545,"line_start":126,"line_end":126,"column_start":9,"column_end":19},"name":"WriteU64Le","qualname":"::io::util::write_int::WriteU64Le","value":"WriteU64Le {  }","parent":null,"children":[{"krate":0,"index":10570},{"krate":0,"index":10571},{"krate":0,"index":10573}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10523},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8497573,"byte_end":8497584,"line_start":127,"line_end":127,"column_start":9,"column_end":20},"name":"WriteU128Le","qualname":"::io::util::write_int::WriteU128Le","value":"WriteU128Le {  }","parent":null,"children":[{"krate":0,"index":10525},{"krate":0,"index":10526},{"krate":0,"index":10528}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10478},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8497615,"byte_end":8497625,"line_start":129,"line_end":129,"column_start":9,"column_end":19},"name":"WriteI16Le","qualname":"::io::util::write_int::WriteI16Le","value":"WriteI16Le {  }","parent":null,"children":[{"krate":0,"index":10480},{"krate":0,"index":10481},{"krate":0,"index":10483}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10433},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8497653,"byte_end":8497663,"line_start":130,"line_end":130,"column_start":9,"column_end":19},"name":"WriteI32Le","qualname":"::io::util::write_int::WriteI32Le","value":"WriteI32Le {  }","parent":null,"children":[{"krate":0,"index":10435},{"krate":0,"index":10436},{"krate":0,"index":10438}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10388},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8497691,"byte_end":8497701,"line_start":131,"line_end":131,"column_start":9,"column_end":19},"name":"WriteI64Le","qualname":"::io::util::write_int::WriteI64Le","value":"WriteI64Le {  }","parent":null,"children":[{"krate":0,"index":10390},{"krate":0,"index":10391},{"krate":0,"index":10393}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10343},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8497729,"byte_end":8497740,"line_start":132,"line_end":132,"column_start":9,"column_end":20},"name":"WriteI128Le","qualname":"::io::util::write_int::WriteI128Le","value":"WriteI128Le {  }","parent":null,"children":[{"krate":0,"index":10345},{"krate":0,"index":10346},{"krate":0,"index":10348}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":308},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":372},{"krate":0,"index":3253},{"krate":0,"index":3254},{"krate":0,"index":3263},{"krate":0,"index":3525},{"krate":0,"index":3526},{"krate":0,"index":3566},{"krate":0,"index":3692},{"krate":0,"index":3711},{"krate":0,"index":3951},{"krate":0,"index":3952},{"krate":0,"index":3953}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71776,"byte_end":71794,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71796,"byte_end":71834,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71835,"byte_end":71838,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71839,"byte_end":71922,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ library, which can be used to implement networking protocols.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71923,"byte_end":71988,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71989,"byte_end":71992,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71993,"byte_end":72011,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72012,"byte_end":72015,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72016,"byte_end":72104,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72105,"byte_end":72174,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72175,"byte_end":72263,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72264,"byte_end":72322,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/ * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72323,"byte_end":72386,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72387,"byte_end":72452,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72454,"byte_end":72457,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`TcpListener`]: TcpListener","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72458,"byte_end":72490,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72491,"byte_end":72519,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`UdpSocket`]: UdpSocket","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72520,"byte_end":72548,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ [`UnixListener`]: UnixListener","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72549,"byte_end":72583,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72584,"byte_end":72614,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72615,"byte_end":72649,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":319},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73898,"byte_end":73911,"line_start":22,"line_end":22,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73210,"byte_end":73287,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73288,"byte_end":73291,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73292,"byte_end":73301,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73302,"byte_end":73305,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73306,"byte_end":73383,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ These implementations are only provided when Tokio is used with the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73384,"byte_end":73455,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ **`dns`** feature flag.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73456,"byte_end":73483,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73484,"byte_end":73487,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73488,"byte_end":73501,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73502,"byte_end":73505,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73506,"byte_end":73583,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73584,"byte_end":73656,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73657,"byte_end":73726,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73727,"byte_end":73730,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73731,"byte_end":73810,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73811,"byte_end":73887,"line_start":21,"line_end":21,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":368},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":79572,"byte_end":79589,"line_start":237,"line_end":237,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":369},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":79605,"byte_end":79609,"line_start":238,"line_end":238,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":370},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":79670,"byte_end":79676,"line_start":239,"line_end":239,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":79748,"byte_end":79763,"line_start":241,"line_end":241,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"pub fn to_socket_addrs(&Self) -> Self::Future","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3236},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":79900,"byte_end":79905,"line_start":248,"line_end":248,"column_start":13,"column_end":18},"name":"Ready","qualname":"::net::addr::sealed::MaybeReady::Ready","value":"MaybeReady::Ready(Option<SocketAddr>)","parent":{"krate":0,"index":3235},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3239},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":79939,"byte_end":79947,"line_start":249,"line_end":249,"column_start":13,"column_end":21},"name":"Blocking","qualname":"::net::addr::sealed::MaybeReady::Blocking","value":"MaybeReady::Blocking(JoinHandle<io::Result<vec::IntoIter<SocketAddr>>>)","parent":{"krate":0,"index":3235},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3235},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":79875,"byte_end":79885,"line_start":247,"line_end":247,"column_start":18,"column_end":28},"name":"MaybeReady","qualname":"::net::addr::sealed::MaybeReady","value":"pub enum MaybeReady {\n    Ready(Option<SocketAddr>),\n    Blocking(JoinHandle<io::Result<vec::IntoIter<SocketAddr>>>),\n}","parent":null,"children":[{"krate":0,"index":3236},{"krate":0,"index":3239}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"dns\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":18746,"byte_end":18769,"line_start":105,"line_end":105,"column_start":13,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3245},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":80100,"byte_end":80103,"line_start":255,"line_end":255,"column_start":13,"column_end":16},"name":"One","qualname":"::net::addr::sealed::OneOrMore::One","value":"OneOrMore::One(option::IntoIter<SocketAddr>)","parent":{"krate":0,"index":3244},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3248},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":80147,"byte_end":80151,"line_start":256,"line_end":256,"column_start":13,"column_end":17},"name":"More","qualname":"::net::addr::sealed::OneOrMore::More","value":"OneOrMore::More(vec::IntoIter<SocketAddr>)","parent":{"krate":0,"index":3244},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3244},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":80076,"byte_end":80085,"line_start":254,"line_end":254,"column_start":18,"column_end":27},"name":"OneOrMore","qualname":"::net::addr::sealed::OneOrMore","value":"pub enum OneOrMore {\n    One(option::IntoIter<SocketAddr>),\n    More(vec::IntoIter<SocketAddr>),\n}","parent":null,"children":[{"krate":0,"index":3245},{"krate":0,"index":3248}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"dns\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":18746,"byte_end":18769,"line_start":105,"line_end":105,"column_start":13,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":3258},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/lookup_host.rs","byte_start":8503990,"byte_end":8504001,"line_start":32,"line_end":32,"column_start":18,"column_end":29},"name":"lookup_host","qualname":"::net::lookup_host::lookup_host","value":"pub async fn lookup_host<T>(T) -> /*impl Trait*/ where T: ToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Performs a DNS resolution.","sig":null,"attributes":[{"value":"cfg(feature = \"dns\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":18746,"byte_end":18769,"line_start":105,"line_end":105,"column_start":13,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":3263},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::net::tcp","value":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","parent":null,"children":[{"krate":0,"index":3264},{"krate":0,"index":3315},{"krate":0,"index":3316},{"krate":0,"index":3331},{"krate":0,"index":3332},{"krate":0,"index":3366},{"krate":0,"index":3367},{"krate":0,"index":3368},{"krate":0,"index":3369},{"krate":0,"index":3417},{"krate":0,"index":3418},{"krate":0,"index":3419},{"krate":0,"index":3420},{"krate":0,"index":13703},{"krate":0,"index":3421},{"krate":0,"index":3524}],"decl_id":null,"docs":" TCP utility types\n","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":22570,"byte_end":22593,"line_start":298,"line_end":298,"column_start":13,"column_end":36}},{"value":"/ TCP utility types","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8504149,"byte_end":8504170,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":3527},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8506770,"byte_end":8506781,"line_start":69,"line_end":69,"column_start":16,"column_end":27},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":3528}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":22570,"byte_end":22593,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3281},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508750,"byte_end":8508754,"line_start":132,"line_end":132,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TcpListener, which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TcpListener, which will be bound to the specified address.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8506864,"byte_end":8506940,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8506945,"byte_end":8506948,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8506953,"byte_end":8507014,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8507019,"byte_end":8507022,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8507027,"byte_end":8507102,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the `local_addr`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8507107,"byte_end":8507183,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8507188,"byte_end":8507199,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8507204,"byte_end":8507207,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of the [`ToSocketAddrs`] trait.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8507212,"byte_end":8507287,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ Note that strings only implement this trait when the **`dns`** feature","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8507292,"byte_end":8507366,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ is enabled, as strings may contain domain names that need to be resolved.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8507371,"byte_end":8507448,"line_start":85,"line_end":85,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8507453,"byte_end":8507456,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, bind will be attempted with each of","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8507461,"byte_end":8507537,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ the addresses until one succeeds and returns the listener. If none of","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8507542,"byte_end":8507615,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ the addresses succeed in creating a listener, the error returned from","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8507620,"byte_end":8507693,"line_start":89,"line_end":89,"column_start":5,"column_end":78}},{"value":"/ the last attempt (the last address) is returned.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8507698,"byte_end":8507750,"line_start":90,"line_end":90,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8507755,"byte_end":8507758,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This function sets the `SO_REUSEADDR` option on the socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8507763,"byte_end":8507826,"line_start":92,"line_end":92,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8507831,"byte_end":8507834,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8507839,"byte_end":8507893,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8507898,"byte_end":8507901,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8507906,"byte_end":8507920,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8507925,"byte_end":8507928,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8507933,"byte_end":8507946,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8507951,"byte_end":8507983,"line_start":99,"line_end":99,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8507988,"byte_end":8507991,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8507996,"byte_end":8508012,"line_start":101,"line_end":101,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508017,"byte_end":8508020,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508025,"byte_end":8508043,"line_start":103,"line_end":103,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508048,"byte_end":8508087,"line_start":104,"line_end":104,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:2345\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508092,"byte_end":8508158,"line_start":105,"line_end":105,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508163,"byte_end":8508166,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508171,"byte_end":8508198,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508203,"byte_end":8508206,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508211,"byte_end":8508238,"line_start":109,"line_end":109,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508243,"byte_end":8508257,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508262,"byte_end":8508267,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508272,"byte_end":8508279,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508284,"byte_end":8508287,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Without the `dns` feature:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508292,"byte_end":8508322,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508327,"byte_end":8508330,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508335,"byte_end":8508348,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508353,"byte_end":8508385,"line_start":117,"line_end":117,"column_start":5,"column_end":37}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508390,"byte_end":8508417,"line_start":118,"line_end":118,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508422,"byte_end":8508425,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508430,"byte_end":8508446,"line_start":120,"line_end":120,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508451,"byte_end":8508454,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508459,"byte_end":8508477,"line_start":122,"line_end":122,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508482,"byte_end":8508521,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind((Ipv4Addr::new(127, 0, 0, 1), 2345)).await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508526,"byte_end":8508611,"line_start":124,"line_end":124,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508616,"byte_end":8508619,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508624,"byte_end":8508651,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508656,"byte_end":8508659,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508664,"byte_end":8508691,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508696,"byte_end":8508710,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508715,"byte_end":8508720,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8508725,"byte_end":8508732,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3287},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8510326,"byte_end":8510332,"line_start":184,"line_end":184,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection from this listener.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8509467,"byte_end":8509524,"line_start":157,"line_end":157,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8509529,"byte_end":8509532,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This function will yield once a new TCP connection is established. When","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8509537,"byte_end":8509612,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ established, the corresponding [`TcpStream`] and the remote peer's","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8509617,"byte_end":8509687,"line_start":160,"line_end":160,"column_start":5,"column_end":75}},{"value":"/ address will be returned.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8509692,"byte_end":8509721,"line_start":161,"line_end":161,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8509726,"byte_end":8509729,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8509734,"byte_end":8509781,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8509786,"byte_end":8509789,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8509794,"byte_end":8509808,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8509813,"byte_end":8509816,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8509821,"byte_end":8509834,"line_start":167,"line_end":167,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8509839,"byte_end":8509871,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8509876,"byte_end":8509879,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8509884,"byte_end":8509900,"line_start":170,"line_end":170,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8509905,"byte_end":8509908,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8509913,"byte_end":8509931,"line_start":172,"line_end":172,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8509936,"byte_end":8509975,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8509980,"byte_end":8510050,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8510055,"byte_end":8510058,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     match listener.accept().await {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8510063,"byte_end":8510102,"line_start":176,"line_end":176,"column_start":5,"column_end":44}},{"value":"/         Ok((_socket, addr)) => println!(\"new client: {:?}\", addr),","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8510107,"byte_end":8510177,"line_start":177,"line_end":177,"column_start":5,"column_end":75}},{"value":"/         Err(e) => println!(\"couldn't get client: {:?}\", e),","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8510182,"byte_end":8510245,"line_start":178,"line_end":178,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8510250,"byte_end":8510259,"line_start":179,"line_end":179,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8510264,"byte_end":8510267,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8510272,"byte_end":8510286,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8510291,"byte_end":8510296,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8510301,"byte_end":8510308,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3291},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8510668,"byte_end":8510679,"line_start":192,"line_end":192,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<TcpListener>::poll_accept","value":"pub fn poll_accept(&mut Self, &mut Context)\n-> Poll<io::Result<(TcpStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `SocketAddr` and `TcpStream` bound to this address.","sig":null,"attributes":[{"value":"/ Attempts to poll `SocketAddr` and `TcpStream` bound to this address.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8510445,"byte_end":8510517,"line_start":188,"line_end":188,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8510522,"byte_end":8510525,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ In case if I/O resource isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8510530,"byte_end":8510606,"line_start":190,"line_end":190,"column_start":5,"column_end":81}},{"value":"/ current task will be notified by a waker.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8510611,"byte_end":8510656,"line_start":191,"line_end":191,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3293},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8513541,"byte_end":8513549,"line_start":266,"line_end":266,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TCP listener from the standard library's TCP listener.","sig":null,"attributes":[{"value":"/ Creates a new TCP listener from the standard library's TCP listener.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8511526,"byte_end":8511598,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8511603,"byte_end":8511606,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ This method can be used when the `Handle::tcp_listen` method isn't","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8511611,"byte_end":8511681,"line_start":222,"line_end":222,"column_start":5,"column_end":75}},{"value":"/ sufficient because perhaps some more configuration is needed in terms of","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8511686,"byte_end":8511762,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ before the calls to `bind` and `listen`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8511767,"byte_end":8511811,"line_start":224,"line_end":224,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8511816,"byte_end":8511819,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ This API is typically paired with the `net2` crate and the `TcpBuilder`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8511824,"byte_end":8511899,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/ type to build up and customize a listener before it's shipped off to the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8511904,"byte_end":8511980,"line_start":227,"line_end":227,"column_start":5,"column_end":81}},{"value":"/ backing event loop. This allows configuration of options like","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8511985,"byte_end":8512050,"line_start":228,"line_end":228,"column_start":5,"column_end":70}},{"value":"/ `SO_REUSEPORT`, binding to multiple addresses, etc.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8512055,"byte_end":8512110,"line_start":229,"line_end":229,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8512115,"byte_end":8512118,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The `addr` argument here is one of the addresses that `listener` is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8512123,"byte_end":8512194,"line_start":231,"line_end":231,"column_start":5,"column_end":76}},{"value":"/ bound to and the listener will only be guaranteed to accept connections","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8512199,"byte_end":8512274,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ of the same address type currently.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8512279,"byte_end":8512318,"line_start":233,"line_end":233,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8512323,"byte_end":8512326,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ The platform specific behavior of this function looks like:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8512331,"byte_end":8512394,"line_start":235,"line_end":235,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8512399,"byte_end":8512402,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ * On Unix, the socket is placed into nonblocking mode and connections","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8512407,"byte_end":8512480,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/   can be accepted as normal","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8512485,"byte_end":8512516,"line_start":238,"line_end":238,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8512521,"byte_end":8512524,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ * On Windows, the address is stored internally and all future accepts","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8512529,"byte_end":8512602,"line_start":240,"line_end":240,"column_start":5,"column_end":78}},{"value":"/   will only be for the same IP version as `addr` specified. That is, if","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8512607,"byte_end":8512682,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/   `addr` is an IPv4 address then all sockets accepted will be IPv4 as","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8512687,"byte_end":8512760,"line_start":242,"line_end":242,"column_start":5,"column_end":78}},{"value":"/   well (same for IPv6).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8512765,"byte_end":8512792,"line_start":243,"line_end":243,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8512797,"byte_end":8512800,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8512805,"byte_end":8512819,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8512824,"byte_end":8512827,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8512832,"byte_end":8512850,"line_start":247,"line_end":247,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8512855,"byte_end":8512881,"line_start":248,"line_end":248,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8512886,"byte_end":8512918,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8512923,"byte_end":8512926,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8512931,"byte_end":8512949,"line_start":251,"line_end":251,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8512954,"byte_end":8513005,"line_start":252,"line_end":252,"column_start":5,"column_end":56}},{"value":"/     let std_listener = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8513010,"byte_end":8513081,"line_start":253,"line_end":253,"column_start":5,"column_end":76}},{"value":"/     let listener = TcpListener::from_std(std_listener)?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8513086,"byte_end":8513146,"line_start":254,"line_end":254,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8513151,"byte_end":8513165,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8513170,"byte_end":8513175,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8513180,"byte_end":8513187,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8513192,"byte_end":8513195,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8513200,"byte_end":8513212,"line_start":259,"line_end":259,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8513217,"byte_end":8513220,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8513225,"byte_end":8513285,"line_start":261,"line_end":261,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8513290,"byte_end":8513293,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8513298,"byte_end":8513368,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8513373,"byte_end":8513446,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8513451,"byte_end":8513529,"line_start":265,"line_end":265,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3295},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8514633,"byte_end":8514643,"line_start":300,"line_end":300,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8513907,"byte_end":8513968,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8513973,"byte_end":8513976,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8513981,"byte_end":8514054,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ which port was actually bound.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8514059,"byte_end":8514093,"line_start":280,"line_end":280,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8514098,"byte_end":8514101,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8514106,"byte_end":8514120,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8514125,"byte_end":8514128,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8514133,"byte_end":8514151,"line_start":284,"line_end":284,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8514156,"byte_end":8514188,"line_start":285,"line_end":285,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8514193,"byte_end":8514196,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8514201,"byte_end":8514217,"line_start":287,"line_end":287,"column_start":5,"column_end":21}},{"value":"/ use std::net::{Ipv4Addr, SocketAddr, SocketAddrV4};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8514222,"byte_end":8514277,"line_start":288,"line_end":288,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8514282,"byte_end":8514285,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8514290,"byte_end":8514308,"line_start":290,"line_end":290,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8514313,"byte_end":8514352,"line_start":291,"line_end":291,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8514357,"byte_end":8514423,"line_start":292,"line_end":292,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8514428,"byte_end":8514431,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(listener.local_addr()?,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8514436,"byte_end":8514478,"line_start":294,"line_end":294,"column_start":5,"column_end":47}},{"value":"/                SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080)));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8514483,"byte_end":8514572,"line_start":295,"line_end":295,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8514577,"byte_end":8514580,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8514585,"byte_end":8514599,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8514604,"byte_end":8514609,"line_start":298,"line_end":298,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8514614,"byte_end":8514621,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3296},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516074,"byte_end":8516082,"line_start":340,"line_end":340,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"pub fn incoming(&mut Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8514729,"byte_end":8514803,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8514808,"byte_end":8514811,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ Note that `TcpListener` also directly implements `Stream`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8514816,"byte_end":8514878,"line_start":306,"line_end":306,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8514883,"byte_end":8514886,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8514891,"byte_end":8514967,"line_start":308,"line_end":308,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8514972,"byte_end":8515041,"line_start":309,"line_end":309,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8515046,"byte_end":8515075,"line_start":310,"line_end":310,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8515080,"byte_end":8515083,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8515088,"byte_end":8515100,"line_start":312,"line_end":312,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8515105,"byte_end":8515108,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8515113,"byte_end":8515188,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8515193,"byte_end":8515268,"line_start":315,"line_end":315,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8515273,"byte_end":8515347,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8515352,"byte_end":8515427,"line_start":317,"line_end":317,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8515432,"byte_end":8515440,"line_start":318,"line_end":318,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8515445,"byte_end":8515448,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8515453,"byte_end":8515467,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8515472,"byte_end":8515475,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8515480,"byte_end":8515493,"line_start":322,"line_end":322,"column_start":5,"column_end":18}},{"value":"/ use tokio::{net::TcpListener, stream::StreamExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8515498,"byte_end":8515551,"line_start":323,"line_end":323,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8515556,"byte_end":8515559,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8515564,"byte_end":8515582,"line_start":325,"line_end":325,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8515587,"byte_end":8515608,"line_start":326,"line_end":326,"column_start":5,"column_end":26}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8515613,"byte_end":8515691,"line_start":327,"line_end":327,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8515696,"byte_end":8515743,"line_start":328,"line_end":328,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8515748,"byte_end":8515751,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8515756,"byte_end":8515812,"line_start":330,"line_end":330,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8515817,"byte_end":8515843,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8515848,"byte_end":8515879,"line_start":332,"line_end":332,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8515884,"byte_end":8515928,"line_start":333,"line_end":333,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8515933,"byte_end":8515950,"line_start":334,"line_end":334,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8515955,"byte_end":8516008,"line_start":335,"line_end":335,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516013,"byte_end":8516026,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516031,"byte_end":8516040,"line_start":337,"line_end":337,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516045,"byte_end":8516050,"line_start":338,"line_end":338,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516055,"byte_end":8516062,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3297},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516768,"byte_end":8516771,"line_start":367,"line_end":367,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516151,"byte_end":8516209,"line_start":344,"line_end":344,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516214,"byte_end":8516217,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516222,"byte_end":8516282,"line_start":346,"line_end":346,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516287,"byte_end":8516290,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516295,"byte_end":8516332,"line_start":348,"line_end":348,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516337,"byte_end":8516340,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516345,"byte_end":8516359,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516364,"byte_end":8516367,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516372,"byte_end":8516385,"line_start":352,"line_end":352,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516390,"byte_end":8516422,"line_start":353,"line_end":353,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516427,"byte_end":8516430,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516435,"byte_end":8516451,"line_start":355,"line_end":355,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516456,"byte_end":8516459,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516464,"byte_end":8516482,"line_start":357,"line_end":357,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516487,"byte_end":8516526,"line_start":358,"line_end":358,"column_start":5,"column_end":44}},{"value":"/    let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516531,"byte_end":8516593,"line_start":359,"line_end":359,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516598,"byte_end":8516601,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/    listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516606,"byte_end":8516663,"line_start":361,"line_end":361,"column_start":5,"column_end":62}},{"value":"/    assert_eq!(listener.ttl()?, 100);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516668,"byte_end":8516708,"line_start":362,"line_end":362,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516713,"byte_end":8516716,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/    Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516721,"byte_end":8516734,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516739,"byte_end":8516744,"line_start":365,"line_end":365,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516749,"byte_end":8516756,"line_start":366,"line_end":366,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3298},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8517410,"byte_end":8517417,"line_start":392,"line_end":392,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516843,"byte_end":8516901,"line_start":371,"line_end":371,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516906,"byte_end":8516909,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516914,"byte_end":8516990,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8516995,"byte_end":8517016,"line_start":374,"line_end":374,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8517021,"byte_end":8517024,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8517029,"byte_end":8517043,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8517048,"byte_end":8517051,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8517056,"byte_end":8517069,"line_start":378,"line_end":378,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8517074,"byte_end":8517106,"line_start":379,"line_end":379,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8517111,"byte_end":8517114,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8517119,"byte_end":8517135,"line_start":381,"line_end":381,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8517140,"byte_end":8517143,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8517148,"byte_end":8517166,"line_start":383,"line_end":383,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8517171,"byte_end":8517210,"line_start":384,"line_end":384,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8517215,"byte_end":8517278,"line_start":385,"line_end":385,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8517283,"byte_end":8517286,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/     listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8517291,"byte_end":8517349,"line_start":387,"line_end":387,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8517354,"byte_end":8517357,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8517362,"byte_end":8517376,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8517381,"byte_end":8517386,"line_start":390,"line_end":390,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8517391,"byte_end":8517398,"line_start":391,"line_end":391,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3529},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8519690,"byte_end":8519698,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":3531}],"decl_id":null,"docs":" Stream returned by the `TcpListener::incoming` function representing the\n stream of sockets received from a listener.\n","sig":null,"attributes":[{"value":"/ Stream returned by the `TcpListener::incoming` function representing the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8519488,"byte_end":8519564,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ stream of sockets received from a listener.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8519565,"byte_end":8519612,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8519613,"byte_end":8519661,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3327},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8520113,"byte_end":8520124,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"pub fn poll_accept(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<TcpStream>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `TcpStream` by polling inner `TcpListener` to accept\n connection.","sig":null,"attributes":[{"value":"/ Attempts to poll `TcpStream` by polling inner `TcpListener` to accept","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8519876,"byte_end":8519949,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ connection.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8519954,"byte_end":8519969,"line_start":21,"line_end":21,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8519974,"byte_end":8519977,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ If `TcpListener` isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8519982,"byte_end":8520051,"line_start":23,"line_end":23,"column_start":5,"column_end":74}},{"value":"/ current task will be notified by a waker.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8520056,"byte_end":8520101,"line_start":24,"line_end":24,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3535},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8521683,"byte_end":8521691,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::tcp::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Read half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Read half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8521275,"byte_end":8521330,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8521331,"byte_end":8521334,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8521335,"byte_end":8521423,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8521424,"byte_end":8521501,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8521502,"byte_end":8521505,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8521506,"byte_end":8521534,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8521535,"byte_end":8521568,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8521569,"byte_end":8521620,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8521621,"byte_end":8521654,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3542},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8522385,"byte_end":8522394,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::tcp::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Write half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Write half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8521713,"byte_end":8521769,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8521770,"byte_end":8521773,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8521774,"byte_end":8521860,"line_start":36,"line_end":36,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8521861,"byte_end":8521913,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8521914,"byte_end":8521917,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8521918,"byte_end":8522004,"line_start":39,"line_end":39,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8522005,"byte_end":8522090,"line_start":40,"line_end":40,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8522091,"byte_end":8522094,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8522095,"byte_end":8522123,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8522124,"byte_end":8522157,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8522158,"byte_end":8522205,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8522206,"byte_end":8522268,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8522269,"byte_end":8522322,"line_start":46,"line_end":46,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8522323,"byte_end":8522356,"line_start":47,"line_end":47,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8523451,"byte_end":8523460,"line_start":85,"line_end":85,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<ReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8522568,"byte_end":8522642,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8522647,"byte_end":8522720,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8522725,"byte_end":8522739,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8522744,"byte_end":8522747,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8522752,"byte_end":8522825,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8522830,"byte_end":8522833,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8522838,"byte_end":8522852,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8522857,"byte_end":8522860,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8522865,"byte_end":8522878,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8522883,"byte_end":8522901,"line_start":65,"line_end":65,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8522906,"byte_end":8522936,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8522941,"byte_end":8522944,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8522949,"byte_end":8522982,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8522987,"byte_end":8522990,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8522995,"byte_end":8523013,"line_start":70,"line_end":70,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8523018,"byte_end":8523057,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8523062,"byte_end":8523131,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8523136,"byte_end":8523184,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8523189,"byte_end":8523219,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8523224,"byte_end":8523227,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8523232,"byte_end":8523254,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8523259,"byte_end":8523304,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8523309,"byte_end":8523327,"line_start":78,"line_end":78,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8523332,"byte_end":8523335,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8523340,"byte_end":8523354,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8523359,"byte_end":8523364,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8523369,"byte_end":8523376,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8523381,"byte_end":8523384,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8523389,"byte_end":8523439,"line_start":84,"line_end":84,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3349},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8524877,"byte_end":8524881,"line_start":128,"line_end":128,"column_start":18,"column_end":22},"name":"peek","qualname":"<ReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8523585,"byte_end":8523655,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8523660,"byte_end":8523729,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8523734,"byte_end":8523773,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8523778,"byte_end":8523781,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8523786,"byte_end":8523854,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8523859,"byte_end":8523862,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8523867,"byte_end":8523907,"line_start":95,"line_end":95,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8523912,"byte_end":8523915,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8523920,"byte_end":8523934,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8523939,"byte_end":8523942,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8523947,"byte_end":8523960,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8523965,"byte_end":8523995,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8524000,"byte_end":8524026,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8524031,"byte_end":8524057,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8524062,"byte_end":8524065,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8524070,"byte_end":8524088,"line_start":104,"line_end":104,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8524093,"byte_end":8524144,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8524149,"byte_end":8524177,"line_start":106,"line_end":106,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8524182,"byte_end":8524251,"line_start":107,"line_end":107,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8524256,"byte_end":8524304,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8524309,"byte_end":8524312,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8524317,"byte_end":8524346,"line_start":110,"line_end":110,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8524351,"byte_end":8524380,"line_start":111,"line_end":111,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8524385,"byte_end":8524388,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8524393,"byte_end":8524420,"line_start":113,"line_end":113,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8524425,"byte_end":8524472,"line_start":114,"line_end":114,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8524477,"byte_end":8524480,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8524485,"byte_end":8524509,"line_start":116,"line_end":116,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8524514,"byte_end":8524573,"line_start":117,"line_end":117,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8524578,"byte_end":8524617,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8524622,"byte_end":8524625,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8524630,"byte_end":8524644,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8524649,"byte_end":8524654,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8524659,"byte_end":8524666,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8524671,"byte_end":8524674,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8524679,"byte_end":8524744,"line_start":124,"line_end":124,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8524749,"byte_end":8524752,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8524757,"byte_end":8524803,"line_start":126,"line_end":126,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8524808,"byte_end":8524859,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3549},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8527483,"byte_end":8527496,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::tcp::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":3550}],"decl_id":null,"docs":" Owned read half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8527048,"byte_end":8527114,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8527115,"byte_end":8527118,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8527119,"byte_end":8527206,"line_start":26,"line_end":26,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8527207,"byte_end":8527291,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8527292,"byte_end":8527295,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8527296,"byte_end":8527324,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8527325,"byte_end":8527368,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8527369,"byte_end":8527420,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8527421,"byte_end":8527454,"line_start":32,"line_end":32,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3553},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8528302,"byte_end":8528316,"line_start":55,"line_end":55,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::tcp::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":3554},{"krate":0,"index":3555}],"decl_id":null,"docs":" Owned write half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8527529,"byte_end":8527596,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8527597,"byte_end":8527600,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8527601,"byte_end":8527687,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8527688,"byte_end":8527740,"line_start":41,"line_end":41,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8527741,"byte_end":8527744,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Dropping the write half will shutdown the write half of the TCP stream.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8527745,"byte_end":8527820,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8527821,"byte_end":8527824,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8527825,"byte_end":8527911,"line_start":45,"line_end":45,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8527912,"byte_end":8527997,"line_start":46,"line_end":46,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8527998,"byte_end":8528001,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8528002,"byte_end":8528030,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8528031,"byte_end":8528074,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8528075,"byte_end":8528122,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8528123,"byte_end":8528185,"line_start":51,"line_end":51,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8528186,"byte_end":8528239,"line_start":52,"line_end":52,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8528240,"byte_end":8528273,"line_start":53,"line_end":53,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3558},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8529260,"byte_end":8529272,"line_start":89,"line_end":89,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::tcp::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating two halves were not from the same socket, and thus could","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8529133,"byte_end":8529210,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/ not be reunited.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8529211,"byte_end":8529231,"line_start":87,"line_end":87,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3560},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8529273,"byte_end":8529290,"line_start":89,"line_end":89,"column_start":25,"column_end":42},"name":"0","qualname":"::net::tcp::split_owned::ReuniteError::0","value":"net::tcp::split_owned::OwnedReadHalf","parent":{"krate":0,"index":3558},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3561},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8529292,"byte_end":8529310,"line_start":89,"line_end":89,"column_start":44,"column_end":62},"name":"1","qualname":"::net::tcp::split_owned::ReuniteError::1","value":"net::tcp::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":3558},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3393},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8529856,"byte_end":8529863,"line_start":108,"line_end":108,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8529593,"byte_end":8529662,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8529667,"byte_end":8529731,"line_start":104,"line_end":104,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8529736,"byte_end":8529788,"line_start":105,"line_end":105,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8529793,"byte_end":8529796,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8529801,"byte_end":8529844,"line_start":107,"line_end":107,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3394},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530854,"byte_end":8530863,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<OwnedReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8529970,"byte_end":8530044,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530049,"byte_end":8530122,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530127,"byte_end":8530141,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530146,"byte_end":8530149,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530154,"byte_end":8530227,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530232,"byte_end":8530235,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530240,"byte_end":8530254,"line_start":118,"line_end":118,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530259,"byte_end":8530262,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530267,"byte_end":8530280,"line_start":120,"line_end":120,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530285,"byte_end":8530303,"line_start":121,"line_end":121,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530308,"byte_end":8530338,"line_start":122,"line_end":122,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530343,"byte_end":8530346,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530351,"byte_end":8530384,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530389,"byte_end":8530392,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530397,"byte_end":8530415,"line_start":126,"line_end":126,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530420,"byte_end":8530459,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530464,"byte_end":8530529,"line_start":128,"line_end":128,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530534,"byte_end":8530587,"line_start":129,"line_end":129,"column_start":5,"column_end":58}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530592,"byte_end":8530622,"line_start":130,"line_end":130,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530627,"byte_end":8530630,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530635,"byte_end":8530657,"line_start":132,"line_end":132,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530662,"byte_end":8530707,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530712,"byte_end":8530730,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530735,"byte_end":8530738,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530743,"byte_end":8530757,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530762,"byte_end":8530767,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530772,"byte_end":8530779,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530784,"byte_end":8530787,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530792,"byte_end":8530842,"line_start":140,"line_end":140,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3395},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8532285,"byte_end":8532289,"line_start":184,"line_end":184,"column_start":18,"column_end":22},"name":"peek","qualname":"<OwnedReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8530992,"byte_end":8531062,"line_start":145,"line_end":145,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8531067,"byte_end":8531136,"line_start":146,"line_end":146,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8531141,"byte_end":8531180,"line_start":147,"line_end":147,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8531185,"byte_end":8531188,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8531193,"byte_end":8531261,"line_start":149,"line_end":149,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8531266,"byte_end":8531269,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8531274,"byte_end":8531314,"line_start":151,"line_end":151,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8531319,"byte_end":8531322,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8531327,"byte_end":8531341,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8531346,"byte_end":8531349,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8531354,"byte_end":8531367,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8531372,"byte_end":8531402,"line_start":156,"line_end":156,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8531407,"byte_end":8531433,"line_start":157,"line_end":157,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8531438,"byte_end":8531464,"line_start":158,"line_end":158,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8531469,"byte_end":8531472,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8531477,"byte_end":8531495,"line_start":160,"line_end":160,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8531500,"byte_end":8531551,"line_start":161,"line_end":161,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8531556,"byte_end":8531584,"line_start":162,"line_end":162,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8531589,"byte_end":8531654,"line_start":163,"line_end":163,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8531659,"byte_end":8531712,"line_start":164,"line_end":164,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8531717,"byte_end":8531720,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8531725,"byte_end":8531754,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8531759,"byte_end":8531788,"line_start":167,"line_end":167,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8531793,"byte_end":8531796,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8531801,"byte_end":8531828,"line_start":169,"line_end":169,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8531833,"byte_end":8531880,"line_start":170,"line_end":170,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8531885,"byte_end":8531888,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8531893,"byte_end":8531917,"line_start":172,"line_end":172,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8531922,"byte_end":8531981,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8531986,"byte_end":8532025,"line_start":174,"line_end":174,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8532030,"byte_end":8532033,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8532038,"byte_end":8532052,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8532057,"byte_end":8532062,"line_start":177,"line_end":177,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8532067,"byte_end":8532074,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8532079,"byte_end":8532082,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8532087,"byte_end":8532152,"line_start":180,"line_end":180,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8532157,"byte_end":8532160,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8532165,"byte_end":8532211,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8532216,"byte_end":8532267,"line_start":183,"line_end":183,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3403},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8533022,"byte_end":8533029,"line_start":209,"line_end":209,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8532759,"byte_end":8532828,"line_start":204,"line_end":204,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8532833,"byte_end":8532897,"line_start":205,"line_end":205,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8532902,"byte_end":8532954,"line_start":206,"line_end":206,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8532959,"byte_end":8532962,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8532967,"byte_end":8533010,"line_start":208,"line_end":208,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3404},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8533203,"byte_end":8533209,"line_start":214,"line_end":214,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Drop the write half, but don't issue a TCP shutdown.\n","sig":null,"attributes":[{"value":"/ Drop the write half, but don't issue a TCP shutdown.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8533135,"byte_end":8533191,"line_start":213,"line_end":213,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3564},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8536499,"byte_end":8536508,"line_start":58,"line_end":58,"column_start":16,"column_end":25},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":3565}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":22570,"byte_end":22593,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3455},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8538589,"byte_end":8538596,"line_start":121,"line_end":121,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8536587,"byte_end":8536631,"line_start":64,"line_end":64,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8536636,"byte_end":8536639,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8536644,"byte_end":8536718,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ [`ToSocketAddrs`] trait can be supplied as the address. Note that","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8536723,"byte_end":8536792,"line_start":67,"line_end":67,"column_start":5,"column_end":74}},{"value":"/ strings only implement this trait when the **`dns`** feature is enabled,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8536797,"byte_end":8536873,"line_start":68,"line_end":68,"column_start":5,"column_end":81}},{"value":"/ as strings may contain domain names that need to be resolved.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8536878,"byte_end":8536943,"line_start":69,"line_end":69,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8536948,"byte_end":8536951,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, connect will be attempted with each","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8536956,"byte_end":8537032,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ of the addresses until a connection is successful. If none of the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537037,"byte_end":8537106,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/ addresses result in a successful connection, the error returned from the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537111,"byte_end":8537187,"line_start":73,"line_end":73,"column_start":5,"column_end":81}},{"value":"/ last connection attempt (the last address) is returned.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537192,"byte_end":8537251,"line_start":74,"line_end":74,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537256,"byte_end":8537259,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537264,"byte_end":8537318,"line_start":76,"line_end":76,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537323,"byte_end":8537326,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537331,"byte_end":8537345,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537350,"byte_end":8537353,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537358,"byte_end":8537371,"line_start":80,"line_end":80,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537376,"byte_end":8537406,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537411,"byte_end":8537437,"line_start":82,"line_end":82,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537442,"byte_end":8537468,"line_start":83,"line_end":83,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537473,"byte_end":8537476,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537481,"byte_end":8537499,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537504,"byte_end":8537555,"line_start":86,"line_end":86,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537560,"byte_end":8537588,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537593,"byte_end":8537662,"line_start":88,"line_end":88,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537667,"byte_end":8537670,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537675,"byte_end":8537702,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537707,"byte_end":8537756,"line_start":91,"line_end":91,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537761,"byte_end":8537764,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537769,"byte_end":8537783,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537788,"byte_end":8537793,"line_start":94,"line_end":94,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537798,"byte_end":8537805,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537810,"byte_end":8537813,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Without the `dns` feature:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537818,"byte_end":8537848,"line_start":97,"line_end":97,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537853,"byte_end":8537856,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537861,"byte_end":8537874,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537879,"byte_end":8537909,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537914,"byte_end":8537940,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537945,"byte_end":8537971,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8537976,"byte_end":8538003,"line_start":103,"line_end":103,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8538008,"byte_end":8538011,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8538016,"byte_end":8538034,"line_start":105,"line_end":105,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8538039,"byte_end":8538090,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8538095,"byte_end":8538123,"line_start":107,"line_end":107,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect((Ipv4Addr::new(127, 0, 0, 1), 8080)).await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8538128,"byte_end":8538216,"line_start":108,"line_end":108,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8538221,"byte_end":8538224,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8538229,"byte_end":8538256,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8538261,"byte_end":8538310,"line_start":111,"line_end":111,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8538315,"byte_end":8538318,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8538323,"byte_end":8538337,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8538342,"byte_end":8538347,"line_start":114,"line_end":114,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8538352,"byte_end":8538359,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8538364,"byte_end":8538367,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8538372,"byte_end":8538443,"line_start":117,"line_end":117,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8538448,"byte_end":8538451,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8538456,"byte_end":8538513,"line_start":119,"line_end":119,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8538518,"byte_end":8538571,"line_start":120,"line_end":120,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3465},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8541029,"byte_end":8541037,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(net::TcpStream) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpStream` from a `std::net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates new `TcpStream` from a `std::net::TcpStream`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8540062,"byte_end":8540119,"line_start":166,"line_end":166,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8540124,"byte_end":8540127,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This function will convert a TCP stream created by the standard library","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8540132,"byte_end":8540207,"line_start":168,"line_end":168,"column_start":5,"column_end":80}},{"value":"/ to a TCP stream ready to be used with the provided event loop handle.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8540212,"byte_end":8540285,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8540290,"byte_end":8540293,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8540298,"byte_end":8540312,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8540317,"byte_end":8540320,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8540325,"byte_end":8540343,"line_start":173,"line_end":173,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8540348,"byte_end":8540374,"line_start":174,"line_end":174,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8540379,"byte_end":8540409,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8540414,"byte_end":8540417,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8540422,"byte_end":8540440,"line_start":177,"line_end":177,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8540445,"byte_end":8540496,"line_start":178,"line_end":178,"column_start":5,"column_end":56}},{"value":"/     let std_stream = std::net::TcpStream::connect(\"127.0.0.1:34254\")?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8540501,"byte_end":8540575,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/     let stream = TcpStream::from_std(std_stream)?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8540580,"byte_end":8540634,"line_start":180,"line_end":180,"column_start":5,"column_end":59}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8540639,"byte_end":8540653,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8540658,"byte_end":8540663,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8540668,"byte_end":8540675,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8540680,"byte_end":8540683,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8540688,"byte_end":8540700,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8540705,"byte_end":8540708,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8540713,"byte_end":8540773,"line_start":187,"line_end":187,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8540778,"byte_end":8540781,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8540786,"byte_end":8540856,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8540861,"byte_end":8540934,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8540939,"byte_end":8541017,"line_start":191,"line_end":191,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3466},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8541434,"byte_end":8541445,"line_start":202,"line_end":202,"column_start":18,"column_end":29},"name":"connect_std","qualname":"<TcpStream>::connect_std","value":"pub async fn connect_std<'_>(net::TcpStream, &'_ SocketAddr) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3470},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8542593,"byte_end":8542603,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8542194,"byte_end":8542253,"line_start":222,"line_end":222,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8542258,"byte_end":8542261,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8542266,"byte_end":8542280,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8542285,"byte_end":8542288,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8542293,"byte_end":8542306,"line_start":226,"line_end":226,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8542311,"byte_end":8542341,"line_start":227,"line_end":227,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8542346,"byte_end":8542349,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8542354,"byte_end":8542418,"line_start":229,"line_end":229,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8542423,"byte_end":8542484,"line_start":230,"line_end":230,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8542489,"byte_end":8542492,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.local_addr()?);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8542497,"byte_end":8542540,"line_start":232,"line_end":232,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8542545,"byte_end":8542557,"line_start":233,"line_end":233,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8542562,"byte_end":8542569,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8542574,"byte_end":8542581,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3471},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543092,"byte_end":8543101,"line_start":254,"line_end":254,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8542689,"byte_end":8542753,"line_start":240,"line_end":240,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8542758,"byte_end":8542761,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8542766,"byte_end":8542780,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8542785,"byte_end":8542788,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8542793,"byte_end":8542806,"line_start":244,"line_end":244,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8542811,"byte_end":8542841,"line_start":245,"line_end":245,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8542846,"byte_end":8542849,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8542854,"byte_end":8542918,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8542923,"byte_end":8542984,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8542989,"byte_end":8542992,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.peer_addr()?);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8542997,"byte_end":8543039,"line_start":250,"line_end":250,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543044,"byte_end":8543056,"line_start":251,"line_end":251,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543061,"byte_end":8543068,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543073,"byte_end":8543080,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3472},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8544259,"byte_end":8544268,"line_start":294,"line_end":294,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<TcpStream>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempts to receive data on the socket, without removing that data from","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543186,"byte_end":8543261,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543266,"byte_end":8543339,"line_start":259,"line_end":259,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543344,"byte_end":8543358,"line_start":260,"line_end":260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543363,"byte_end":8543366,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543371,"byte_end":8543389,"line_start":262,"line_end":262,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543394,"byte_end":8543397,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543402,"byte_end":8543427,"line_start":264,"line_end":264,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543432,"byte_end":8543435,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if data is not yet available.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543440,"byte_end":8543491,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/ * `Poll::Ready(Ok(n))` if data is available. `n` is the number of bytes peeked.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543496,"byte_end":8543579,"line_start":267,"line_end":267,"column_start":5,"column_end":88}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543584,"byte_end":8543639,"line_start":268,"line_end":268,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543644,"byte_end":8543647,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543652,"byte_end":8543664,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543669,"byte_end":8543672,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543677,"byte_end":8543752,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543757,"byte_end":8543760,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543765,"byte_end":8543779,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543784,"byte_end":8543787,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543792,"byte_end":8543805,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543810,"byte_end":8543828,"line_start":277,"line_end":277,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543833,"byte_end":8543863,"line_start":278,"line_end":278,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543868,"byte_end":8543871,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543876,"byte_end":8543909,"line_start":280,"line_end":280,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543914,"byte_end":8543917,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543922,"byte_end":8543940,"line_start":282,"line_end":282,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543945,"byte_end":8543984,"line_start":283,"line_end":283,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8543989,"byte_end":8544058,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8544063,"byte_end":8544093,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8544098,"byte_end":8544101,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8544106,"byte_end":8544128,"line_start":287,"line_end":287,"column_start":5,"column_end":27}},{"value":"/         stream.poll_peek(cx, &mut buf)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8544133,"byte_end":8544175,"line_start":288,"line_end":288,"column_start":5,"column_end":47}},{"value":"/     }).await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8544180,"byte_end":8544198,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8544203,"byte_end":8544206,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8544211,"byte_end":8544225,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8544230,"byte_end":8544235,"line_start":292,"line_end":292,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8544240,"byte_end":8544247,"line_start":293,"line_end":293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3474},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8546180,"byte_end":8546184,"line_start":352,"line_end":352,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8544929,"byte_end":8544999,"line_start":315,"line_end":315,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545004,"byte_end":8545073,"line_start":316,"line_end":316,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545078,"byte_end":8545117,"line_start":317,"line_end":317,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545122,"byte_end":8545125,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545130,"byte_end":8545204,"line_start":319,"line_end":319,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545209,"byte_end":8545269,"line_start":320,"line_end":320,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545274,"byte_end":8545277,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545282,"byte_end":8545296,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545301,"byte_end":8545304,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545309,"byte_end":8545322,"line_start":324,"line_end":324,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545327,"byte_end":8545357,"line_start":325,"line_end":325,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545362,"byte_end":8545388,"line_start":326,"line_end":326,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545393,"byte_end":8545419,"line_start":327,"line_end":327,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545424,"byte_end":8545427,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545432,"byte_end":8545450,"line_start":329,"line_end":329,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545455,"byte_end":8545506,"line_start":330,"line_end":330,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545511,"byte_end":8545539,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545544,"byte_end":8545613,"line_start":332,"line_end":332,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545618,"byte_end":8545621,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545626,"byte_end":8545655,"line_start":334,"line_end":334,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545660,"byte_end":8545689,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545694,"byte_end":8545697,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545702,"byte_end":8545729,"line_start":337,"line_end":337,"column_start":5,"column_end":32}},{"value":"/     let n = stream.peek(&mut b1).await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545734,"byte_end":8545778,"line_start":338,"line_end":338,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545783,"byte_end":8545786,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545791,"byte_end":8545815,"line_start":340,"line_end":340,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, stream.read(&mut b2[..n]).await?);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545820,"byte_end":8545876,"line_start":341,"line_end":341,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545881,"byte_end":8545920,"line_start":342,"line_end":342,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545925,"byte_end":8545928,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545933,"byte_end":8545947,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545952,"byte_end":8545957,"line_start":345,"line_end":345,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545962,"byte_end":8545969,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545974,"byte_end":8545977,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8545982,"byte_end":8546047,"line_start":348,"line_end":348,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8546052,"byte_end":8546055,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8546060,"byte_end":8546106,"line_start":350,"line_end":350,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8546111,"byte_end":8546162,"line_start":351,"line_end":351,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3478},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8547053,"byte_end":8547061,"line_start":380,"line_end":380,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8546298,"byte_end":8546364,"line_start":356,"line_end":356,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8546369,"byte_end":8546372,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8546377,"byte_end":8546449,"line_start":358,"line_end":358,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8546454,"byte_end":8546523,"line_start":359,"line_end":359,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8546528,"byte_end":8546561,"line_start":360,"line_end":360,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8546566,"byte_end":8546569,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8546574,"byte_end":8546588,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8546593,"byte_end":8546596,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8546601,"byte_end":8546614,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8546619,"byte_end":8546649,"line_start":365,"line_end":365,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8546654,"byte_end":8546680,"line_start":366,"line_end":366,"column_start":5,"column_end":31}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8546685,"byte_end":8546712,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8546717,"byte_end":8546720,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8546725,"byte_end":8546743,"line_start":369,"line_end":369,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8546748,"byte_end":8546799,"line_start":370,"line_end":370,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8546804,"byte_end":8546832,"line_start":371,"line_end":371,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8546837,"byte_end":8546902,"line_start":372,"line_end":372,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8546907,"byte_end":8546910,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     // Shutdown the stream","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8546915,"byte_end":8546945,"line_start":374,"line_end":374,"column_start":5,"column_end":35}},{"value":"/     stream.shutdown(Shutdown::Write)?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8546950,"byte_end":8546992,"line_start":375,"line_end":375,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8546997,"byte_end":8547000,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8547005,"byte_end":8547019,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8547024,"byte_end":8547029,"line_start":378,"line_end":378,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8547034,"byte_end":8547041,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3479},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8547687,"byte_end":8547694,"line_start":402,"line_end":402,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8547155,"byte_end":8547217,"line_start":384,"line_end":384,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8547222,"byte_end":8547225,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8547230,"byte_end":8547294,"line_start":386,"line_end":386,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8547299,"byte_end":8547302,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: TcpStream::set_nodelay","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8547307,"byte_end":8547350,"line_start":388,"line_end":388,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8547355,"byte_end":8547358,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8547363,"byte_end":8547377,"line_start":390,"line_end":390,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8547382,"byte_end":8547385,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8547390,"byte_end":8547403,"line_start":392,"line_end":392,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8547408,"byte_end":8547438,"line_start":393,"line_end":393,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8547443,"byte_end":8547446,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8547451,"byte_end":8547515,"line_start":395,"line_end":395,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8547520,"byte_end":8547581,"line_start":396,"line_end":396,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8547586,"byte_end":8547589,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.nodelay()?);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8547594,"byte_end":8547634,"line_start":398,"line_end":398,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8547639,"byte_end":8547651,"line_start":399,"line_end":399,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8547656,"byte_end":8547663,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8547668,"byte_end":8547675,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3480},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8548501,"byte_end":8548512,"line_start":426,"line_end":426,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8547771,"byte_end":8547833,"line_start":406,"line_end":406,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8547838,"byte_end":8547841,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8547846,"byte_end":8547915,"line_start":408,"line_end":408,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8547920,"byte_end":8547993,"line_start":409,"line_end":409,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8547998,"byte_end":8548071,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8548076,"byte_end":8548151,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8548156,"byte_end":8548174,"line_start":412,"line_end":412,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8548179,"byte_end":8548182,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8548187,"byte_end":8548201,"line_start":414,"line_end":414,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8548206,"byte_end":8548209,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8548214,"byte_end":8548227,"line_start":416,"line_end":416,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8548232,"byte_end":8548262,"line_start":417,"line_end":417,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8548267,"byte_end":8548270,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8548275,"byte_end":8548339,"line_start":419,"line_end":419,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8548344,"byte_end":8548405,"line_start":420,"line_end":420,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8548410,"byte_end":8548413,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8548418,"byte_end":8548448,"line_start":422,"line_end":422,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8548453,"byte_end":8548465,"line_start":423,"line_end":423,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8548470,"byte_end":8548477,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8548482,"byte_end":8548489,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3481},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8549179,"byte_end":8549195,"line_start":448,"line_end":448,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpStream>::recv_buffer_size","value":"pub fn recv_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8548613,"byte_end":8548673,"line_start":430,"line_end":430,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8548678,"byte_end":8548681,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_recv_buffer_size`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8548686,"byte_end":8548759,"line_start":432,"line_end":432,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8548764,"byte_end":8548767,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: TcpStream::set_recv_buffer_size","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8548772,"byte_end":8548833,"line_start":434,"line_end":434,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8548838,"byte_end":8548841,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8548846,"byte_end":8548860,"line_start":436,"line_end":436,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8548865,"byte_end":8548868,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8548873,"byte_end":8548886,"line_start":438,"line_end":438,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8548891,"byte_end":8548921,"line_start":439,"line_end":439,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8548926,"byte_end":8548929,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8548934,"byte_end":8548998,"line_start":441,"line_end":441,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8549003,"byte_end":8549064,"line_start":442,"line_end":442,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8549069,"byte_end":8549072,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.recv_buffer_size()?);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8549077,"byte_end":8549126,"line_start":444,"line_end":444,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8549131,"byte_end":8549143,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8549148,"byte_end":8549155,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8549160,"byte_end":8549167,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3482},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8549787,"byte_end":8549807,"line_start":469,"line_end":469,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpStream>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8549282,"byte_end":8549342,"line_start":452,"line_end":452,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8549347,"byte_end":8549350,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's receive buffer associated","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8549355,"byte_end":8549427,"line_start":454,"line_end":454,"column_start":5,"column_end":77}},{"value":"/ with the socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8549432,"byte_end":8549452,"line_start":455,"line_end":455,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8549457,"byte_end":8549460,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8549465,"byte_end":8549479,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8549484,"byte_end":8549487,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8549492,"byte_end":8549505,"line_start":459,"line_end":459,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8549510,"byte_end":8549540,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8549545,"byte_end":8549548,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8549553,"byte_end":8549617,"line_start":462,"line_end":462,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8549622,"byte_end":8549683,"line_start":463,"line_end":463,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8549688,"byte_end":8549691,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ stream.set_recv_buffer_size(100)?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8549696,"byte_end":8549734,"line_start":465,"line_end":465,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8549739,"byte_end":8549751,"line_start":466,"line_end":466,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8549756,"byte_end":8549763,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8549768,"byte_end":8549775,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3483},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550478,"byte_end":8550494,"line_start":491,"line_end":491,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpStream>::send_buffer_size","value":"pub fn send_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8549912,"byte_end":8549972,"line_start":473,"line_end":473,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8549977,"byte_end":8549980,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_send_buffer_size`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8549985,"byte_end":8550058,"line_start":475,"line_end":475,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550063,"byte_end":8550066,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: TcpStream::set_send_buffer_size","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550071,"byte_end":8550132,"line_start":477,"line_end":477,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550137,"byte_end":8550140,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550145,"byte_end":8550159,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550164,"byte_end":8550167,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550172,"byte_end":8550185,"line_start":481,"line_end":481,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550190,"byte_end":8550220,"line_start":482,"line_end":482,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550225,"byte_end":8550228,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550233,"byte_end":8550297,"line_start":484,"line_end":484,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550302,"byte_end":8550363,"line_start":485,"line_end":485,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550368,"byte_end":8550371,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.send_buffer_size()?);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550376,"byte_end":8550425,"line_start":487,"line_end":487,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550430,"byte_end":8550442,"line_start":488,"line_end":488,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550447,"byte_end":8550454,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550459,"byte_end":8550466,"line_start":490,"line_end":490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3484},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8551083,"byte_end":8551103,"line_start":512,"line_end":512,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpStream>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550581,"byte_end":8550641,"line_start":495,"line_end":495,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550646,"byte_end":8550649,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's send buffer associated with","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550654,"byte_end":8550728,"line_start":497,"line_end":497,"column_start":5,"column_end":79}},{"value":"/ the socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550733,"byte_end":8550748,"line_start":498,"line_end":498,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550753,"byte_end":8550756,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550761,"byte_end":8550775,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550780,"byte_end":8550783,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550788,"byte_end":8550801,"line_start":502,"line_end":502,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550806,"byte_end":8550836,"line_start":503,"line_end":503,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550841,"byte_end":8550844,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550849,"byte_end":8550913,"line_start":505,"line_end":505,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550918,"byte_end":8550979,"line_start":506,"line_end":506,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550984,"byte_end":8550987,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ stream.set_send_buffer_size(100)?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8550992,"byte_end":8551030,"line_start":508,"line_end":508,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8551035,"byte_end":8551047,"line_start":509,"line_end":509,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8551052,"byte_end":8551059,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8551064,"byte_end":8551071,"line_start":511,"line_end":511,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3485},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8551805,"byte_end":8551814,"line_start":535,"line_end":535,"column_start":12,"column_end":21},"name":"keepalive","qualname":"<TcpStream>::keepalive","value":"pub fn keepalive(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns whether keepalive messages are enabled on this socket, and if so\n the duration of time between them.","sig":null,"attributes":[{"value":"/ Returns whether keepalive messages are enabled on this socket, and if so","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8551208,"byte_end":8551284,"line_start":516,"line_end":516,"column_start":5,"column_end":81}},{"value":"/ the duration of time between them.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8551289,"byte_end":8551327,"line_start":517,"line_end":517,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8551332,"byte_end":8551335,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_keepalive`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8551340,"byte_end":8551406,"line_start":519,"line_end":519,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8551411,"byte_end":8551414,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ [`set_keepalive`]: TcpStream::set_keepalive","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8551419,"byte_end":8551466,"line_start":521,"line_end":521,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8551471,"byte_end":8551474,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8551479,"byte_end":8551493,"line_start":523,"line_end":523,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8551498,"byte_end":8551501,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8551506,"byte_end":8551519,"line_start":525,"line_end":525,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8551524,"byte_end":8551554,"line_start":526,"line_end":526,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8551559,"byte_end":8551562,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8551567,"byte_end":8551631,"line_start":528,"line_end":528,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8551636,"byte_end":8551697,"line_start":529,"line_end":529,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8551702,"byte_end":8551705,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.keepalive()?);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8551710,"byte_end":8551752,"line_start":531,"line_end":531,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8551757,"byte_end":8551769,"line_start":532,"line_end":532,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8551774,"byte_end":8551781,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8551786,"byte_end":8551793,"line_start":534,"line_end":534,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3486},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8552845,"byte_end":8552858,"line_start":564,"line_end":564,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<TcpStream>::set_keepalive","value":"pub fn set_keepalive(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether keepalive messages are enabled to be sent on this socket.","sig":null,"attributes":[{"value":"/ Sets whether keepalive messages are enabled to be sent on this socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8551905,"byte_end":8551979,"line_start":539,"line_end":539,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8551984,"byte_end":8551987,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ On Unix, this option will set the `SO_KEEPALIVE` as well as the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8551992,"byte_end":8552059,"line_start":541,"line_end":541,"column_start":5,"column_end":72}},{"value":"/ `TCP_KEEPALIVE` or `TCP_KEEPIDLE` option (depending on your platform).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8552064,"byte_end":8552138,"line_start":542,"line_end":542,"column_start":5,"column_end":79}},{"value":"/ On Windows, this will set the `SIO_KEEPALIVE_VALS` option.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8552143,"byte_end":8552205,"line_start":543,"line_end":543,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8552210,"byte_end":8552213,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified then keepalive messages are disabled, otherwise","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8552218,"byte_end":8552292,"line_start":545,"line_end":545,"column_start":5,"column_end":79}},{"value":"/ the duration specified will be the time to remain idle before sending a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8552297,"byte_end":8552372,"line_start":546,"line_end":546,"column_start":5,"column_end":80}},{"value":"/ TCP keepalive probe.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8552377,"byte_end":8552401,"line_start":547,"line_end":547,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8552406,"byte_end":8552409,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8552414,"byte_end":8552477,"line_start":549,"line_end":549,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8552482,"byte_end":8552516,"line_start":550,"line_end":550,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8552521,"byte_end":8552524,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8552529,"byte_end":8552543,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8552548,"byte_end":8552551,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8552556,"byte_end":8552569,"line_start":554,"line_end":554,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8552574,"byte_end":8552604,"line_start":555,"line_end":555,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8552609,"byte_end":8552612,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8552617,"byte_end":8552681,"line_start":557,"line_end":557,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8552686,"byte_end":8552747,"line_start":558,"line_end":558,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8552752,"byte_end":8552755,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ stream.set_keepalive(None)?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8552760,"byte_end":8552792,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8552797,"byte_end":8552809,"line_start":561,"line_end":561,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8552814,"byte_end":8552821,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8552826,"byte_end":8552833,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3487},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553489,"byte_end":8553492,"line_start":586,"line_end":586,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8552977,"byte_end":8553035,"line_start":568,"line_end":568,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553040,"byte_end":8553043,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553048,"byte_end":8553108,"line_start":570,"line_end":570,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553113,"byte_end":8553116,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: TcpStream::set_ttl","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553121,"byte_end":8553156,"line_start":572,"line_end":572,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553161,"byte_end":8553164,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553169,"byte_end":8553183,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553188,"byte_end":8553191,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553196,"byte_end":8553209,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553214,"byte_end":8553244,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553249,"byte_end":8553252,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553257,"byte_end":8553321,"line_start":579,"line_end":579,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553326,"byte_end":8553387,"line_start":580,"line_end":580,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553392,"byte_end":8553395,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.ttl()?);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553400,"byte_end":8553436,"line_start":582,"line_end":582,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553441,"byte_end":8553453,"line_start":583,"line_end":583,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553458,"byte_end":8553465,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553470,"byte_end":8553477,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3488},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8554059,"byte_end":8554066,"line_start":607,"line_end":607,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553564,"byte_end":8553622,"line_start":590,"line_end":590,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553627,"byte_end":8553630,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553635,"byte_end":8553711,"line_start":592,"line_end":592,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553716,"byte_end":8553737,"line_start":593,"line_end":593,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553742,"byte_end":8553745,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553750,"byte_end":8553764,"line_start":595,"line_end":595,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553769,"byte_end":8553772,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553777,"byte_end":8553790,"line_start":597,"line_end":597,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553795,"byte_end":8553825,"line_start":598,"line_end":598,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553830,"byte_end":8553833,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553838,"byte_end":8553902,"line_start":600,"line_end":600,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553907,"byte_end":8553968,"line_start":601,"line_end":601,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553973,"byte_end":8553976,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(123)?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8553981,"byte_end":8554006,"line_start":603,"line_end":603,"column_start":5,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8554011,"byte_end":8554023,"line_start":604,"line_end":604,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8554028,"byte_end":8554035,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8554040,"byte_end":8554047,"line_start":606,"line_end":606,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3489},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8554708,"byte_end":8554714,"line_start":630,"line_end":630,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"pub fn linger(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Reads the linger duration for this socket by getting the `SO_LINGER`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8554154,"byte_end":8554226,"line_start":611,"line_end":611,"column_start":5,"column_end":77}},{"value":"/ option.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8554231,"byte_end":8554242,"line_start":612,"line_end":612,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8554247,"byte_end":8554250,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8554255,"byte_end":8554318,"line_start":614,"line_end":614,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8554323,"byte_end":8554326,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: TcpStream::set_linger","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8554331,"byte_end":8554372,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8554377,"byte_end":8554380,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8554385,"byte_end":8554399,"line_start":618,"line_end":618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8554404,"byte_end":8554407,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8554412,"byte_end":8554425,"line_start":620,"line_end":620,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8554430,"byte_end":8554460,"line_start":621,"line_end":621,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8554465,"byte_end":8554468,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8554473,"byte_end":8554537,"line_start":623,"line_end":623,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8554542,"byte_end":8554603,"line_start":624,"line_end":624,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8554608,"byte_end":8554611,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.linger()?);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8554616,"byte_end":8554655,"line_start":626,"line_end":626,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8554660,"byte_end":8554672,"line_start":627,"line_end":627,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8554677,"byte_end":8554684,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8554689,"byte_end":8554696,"line_start":629,"line_end":629,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3490},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8555656,"byte_end":8555666,"line_start":658,"line_end":658,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"pub fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the `SO_LINGER`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8554802,"byte_end":8554872,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/ option.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8554877,"byte_end":8554888,"line_start":635,"line_end":635,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8554893,"byte_end":8554896,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ This option controls the action taken when a stream has unsent messages","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8554901,"byte_end":8554976,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ and the stream is closed. If `SO_LINGER` is set, the system","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8554981,"byte_end":8555044,"line_start":638,"line_end":638,"column_start":5,"column_end":68}},{"value":"/ shall block the process until it can transmit the data or until the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8555049,"byte_end":8555120,"line_start":639,"line_end":639,"column_start":5,"column_end":76}},{"value":"/ time expires.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8555125,"byte_end":8555142,"line_start":640,"line_end":640,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8555147,"byte_end":8555150,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ If `SO_LINGER` is not specified, and the stream is closed, the system","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8555155,"byte_end":8555228,"line_start":642,"line_end":642,"column_start":5,"column_end":78}},{"value":"/ handles the call in a way that allows the process to continue as quickly","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8555233,"byte_end":8555309,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/ as possible.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8555314,"byte_end":8555330,"line_start":644,"line_end":644,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8555335,"byte_end":8555338,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8555343,"byte_end":8555357,"line_start":646,"line_end":646,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8555362,"byte_end":8555365,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8555370,"byte_end":8555383,"line_start":648,"line_end":648,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8555388,"byte_end":8555418,"line_start":649,"line_end":649,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8555423,"byte_end":8555426,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8555431,"byte_end":8555495,"line_start":651,"line_end":651,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8555500,"byte_end":8555561,"line_start":652,"line_end":652,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8555566,"byte_end":8555569,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ stream.set_linger(None)?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8555574,"byte_end":8555603,"line_start":654,"line_end":654,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8555608,"byte_end":8555620,"line_start":655,"line_end":655,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8555625,"byte_end":8555632,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8555637,"byte_end":8555644,"line_start":657,"line_end":657,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3491},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8556106,"byte_end":8556111,"line_start":669,"line_end":669,"column_start":12,"column_end":17},"name":"split","qualname":"<TcpStream>::split","value":"pub fn split(&mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8555770,"byte_end":8555847,"line_start":662,"line_end":662,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8555852,"byte_end":8555898,"line_start":663,"line_end":663,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8555903,"byte_end":8555906,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8555911,"byte_end":8555990,"line_start":665,"line_end":665,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8555995,"byte_end":8556038,"line_start":666,"line_end":666,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8556043,"byte_end":8556046,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8556051,"byte_end":8556094,"line_start":668,"line_end":668,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3492},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8556694,"byte_end":8556704,"line_start":683,"line_end":683,"column_start":12,"column_end":22},"name":"into_split","qualname":"<TcpStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8556189,"byte_end":8556266,"line_start":673,"line_end":673,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8556271,"byte_end":8556317,"line_start":674,"line_end":674,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8556322,"byte_end":8556325,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8556330,"byte_end":8556408,"line_start":676,"line_end":676,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8556413,"byte_end":8556461,"line_start":677,"line_end":677,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8556466,"byte_end":8556469,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ **Note::** Dropping the write half will shutdown the write half of the TCP","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8556474,"byte_end":8556552,"line_start":679,"line_end":679,"column_start":5,"column_end":83}},{"value":"/ stream. This is equivalent to calling `shutdown(Write)` on the `TcpStream`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8556557,"byte_end":8556636,"line_start":680,"line_end":680,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8556641,"byte_end":8556644,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8556649,"byte_end":8556682,"line_start":682,"line_end":682,"column_start":5,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":3566},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"udp","qualname":"::net::udp","value":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","parent":null,"children":[{"krate":0,"index":3567},{"krate":0,"index":3650},{"krate":0,"index":3651},{"krate":0,"index":3688},{"krate":0,"index":3689},{"krate":0,"index":3690},{"krate":0,"index":13817},{"krate":0,"index":3691}],"decl_id":null,"docs":" UDP utility types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23406,"byte_end":23429,"line_start":340,"line_end":340,"column_start":13,"column_end":36}},{"value":"/ UDP utility types.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","byte_start":8563957,"byte_end":8563979,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3693},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8564435,"byte_end":8564444,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"UdpSocket","qualname":"::net::udp::socket::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":3694}],"decl_id":null,"docs":" A UDP socket\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23406,"byte_end":23429,"line_start":340,"line_end":340,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3587},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8564642,"byte_end":8564646,"line_start":22,"line_end":22,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function will create a new UDP socket and attempt to bind it to\n the `addr` provided.\n","sig":null,"attributes":[{"value":"/ This function will create a new UDP socket and attempt to bind it to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8564523,"byte_end":8564595,"line_start":20,"line_end":20,"column_start":5,"column_end":77}},{"value":"/ the `addr` provided.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8564600,"byte_end":8564624,"line_start":21,"line_end":21,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3594},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8566349,"byte_end":8566357,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UdpSocket` from the previously bound socket provided.","sig":null,"attributes":[{"value":"/ Creates a new `UdpSocket` from the previously bound socket provided.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8565481,"byte_end":8565553,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8565558,"byte_end":8565561,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The socket given will be registered with the event loop that `handle`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8565566,"byte_end":8565639,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ is associated with. This function requires that `socket` has previously","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8565644,"byte_end":8565719,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ been bound to an address to work correctly.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8565724,"byte_end":8565771,"line_start":55,"line_end":55,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8565776,"byte_end":8565779,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This can be used in conjunction with net2's `UdpBuilder` interface to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8565784,"byte_end":8565857,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ configure a socket before it's handed off, such as setting options like","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8565862,"byte_end":8565937,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ `reuse_address` or binding to multiple addresses.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8565942,"byte_end":8565995,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8566000,"byte_end":8566003,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8566008,"byte_end":8566020,"line_start":61,"line_end":61,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8566025,"byte_end":8566028,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8566033,"byte_end":8566093,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8566098,"byte_end":8566101,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8566106,"byte_end":8566176,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8566181,"byte_end":8566254,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8566259,"byte_end":8566337,"line_start":67,"line_end":67,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3595},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8566741,"byte_end":8566746,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"split","qualname":"<UdpSocket>::split","value":"pub fn split(Self) -> (RecvHalf, SendHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits the `UdpSocket` into a receive half and a send half. The two parts\n can be used to receive and send datagrams concurrently, even from two\n different tasks.\n","sig":null,"attributes":[{"value":"/ Splits the `UdpSocket` into a receive half and a send half. The two parts","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8566549,"byte_end":8566626,"line_start":74,"line_end":74,"column_start":5,"column_end":82}},{"value":"/ can be used to receive and send datagrams concurrently, even from two","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8566631,"byte_end":8566704,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ different tasks.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8566709,"byte_end":8566729,"line_start":76,"line_end":76,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3596},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8566881,"byte_end":8566891,"line_start":82,"line_end":82,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8566810,"byte_end":8566869,"line_start":81,"line_end":81,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3597},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8567163,"byte_end":8567170,"line_start":89,"line_end":89,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub async fn connect<A: ToSocketAddrs, '_>(&'_ Self, A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for send() and\n limiting packets that are read via recv from the address specified in\n `addr`.\n","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for send() and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8566977,"byte_end":8567051,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ limiting packets that are read via recv from the address specified in","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8567056,"byte_end":8567129,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ `addr`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8567134,"byte_end":8567145,"line_start":88,"line_end":88,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3602},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8568107,"byte_end":8568111,"line_start":115,"line_end":115,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8567704,"byte_end":8567802,"line_start":108,"line_end":108,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8567807,"byte_end":8567878,"line_start":109,"line_end":109,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8567883,"byte_end":8567886,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8567891,"byte_end":8567974,"line_start":111,"line_end":111,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8567979,"byte_end":8568039,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8568044,"byte_end":8568047,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8568052,"byte_end":8568089,"line_start":114,"line_end":114,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3606},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8568838,"byte_end":8568847,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UdpSocket>::poll_send","value":"pub fn poll_send(&Self, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3607},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8569865,"byte_end":8569869,"line_start":154,"line_end":154,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8569225,"byte_end":8569304,"line_start":142,"line_end":142,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8569309,"byte_end":8569393,"line_start":143,"line_end":143,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8569398,"byte_end":8569430,"line_start":144,"line_end":144,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8569435,"byte_end":8569438,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8569443,"byte_end":8569524,"line_start":146,"line_end":146,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8569529,"byte_end":8569612,"line_start":147,"line_end":147,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8569617,"byte_end":8569651,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8569656,"byte_end":8569659,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8569664,"byte_end":8569747,"line_start":150,"line_end":150,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8569752,"byte_end":8569797,"line_start":151,"line_end":151,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8569802,"byte_end":8569805,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8569810,"byte_end":8569847,"line_start":153,"line_end":153,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3611},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8570009,"byte_end":8570018,"line_start":159,"line_end":159,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UdpSocket>::poll_recv","value":"pub fn poll_recv(&Self, &mut Context, &mut [u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3612},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8570737,"byte_end":8570744,"line_start":176,"line_end":176,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub async fn send_to<A: ToSocketAddrs, '_, '_>(&'_ mut Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8570446,"byte_end":8570518,"line_start":171,"line_end":171,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8570523,"byte_end":8570594,"line_start":172,"line_end":172,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8570599,"byte_end":8570602,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8570607,"byte_end":8570683,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8570688,"byte_end":8570719,"line_start":175,"line_end":175,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3617},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8571216,"byte_end":8571228,"line_start":190,"line_end":190,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UdpSocket>::poll_send_to","value":"pub fn poll_send_to(&Self, &mut Context, &[u8], &SocketAddr)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3618},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8572067,"byte_end":8572076,"line_start":213,"line_end":213,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8571677,"byte_end":8571756,"line_start":207,"line_end":207,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8571761,"byte_end":8571828,"line_start":208,"line_end":208,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8571833,"byte_end":8571836,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8571841,"byte_end":8571919,"line_start":210,"line_end":210,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8571924,"byte_end":8572002,"line_start":211,"line_end":211,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8572007,"byte_end":8572049,"line_start":212,"line_end":212,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3622},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8572235,"byte_end":8572249,"line_start":218,"line_end":218,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UdpSocket>::poll_recv_from","value":"pub fn poll_recv_from(&Self, &mut Context, &mut [u8])\n-> Poll<Result<(usize, SocketAddr), io::Error>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3623},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8572951,"byte_end":8572960,"line_start":239,"line_end":239,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8572734,"byte_end":8572798,"line_start":234,"line_end":234,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8572803,"byte_end":8572806,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8572811,"byte_end":8572877,"line_start":236,"line_end":236,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8572882,"byte_end":8572885,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: method@Self::set_broadcast","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8572890,"byte_end":8572939,"line_start":238,"line_end":238,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3624},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8573216,"byte_end":8573229,"line_start":247,"line_end":247,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8573039,"byte_end":8573103,"line_start":243,"line_end":243,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8573108,"byte_end":8573111,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8573116,"byte_end":8573187,"line_start":245,"line_end":245,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8573192,"byte_end":8573204,"line_start":246,"line_end":246,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3625},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8573568,"byte_end":8573585,"line_start":256,"line_end":256,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8573322,"byte_end":8573391,"line_start":251,"line_end":251,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8573396,"byte_end":8573399,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8573404,"byte_end":8573478,"line_start":253,"line_end":253,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8573483,"byte_end":8573486,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: method@Self::set_multicast_loop_v4","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8573491,"byte_end":8573556,"line_start":255,"line_end":255,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3626},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8573925,"byte_end":8573946,"line_start":267,"line_end":267,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8573672,"byte_end":8573741,"line_start":260,"line_end":260,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8573746,"byte_end":8573749,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8573754,"byte_end":8573828,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8573833,"byte_end":8573836,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8573841,"byte_end":8573851,"line_start":264,"line_end":264,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8573856,"byte_end":8573859,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8573864,"byte_end":8573913,"line_start":266,"line_end":266,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3627},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8574289,"byte_end":8574305,"line_start":276,"line_end":276,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8574047,"byte_end":8574115,"line_start":271,"line_end":271,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8574120,"byte_end":8574123,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8574128,"byte_end":8574201,"line_start":273,"line_end":273,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8574206,"byte_end":8574209,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: method@Self::set_multicast_ttl_v4","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8574214,"byte_end":8574277,"line_start":275,"line_end":275,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3628},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8574784,"byte_end":8574804,"line_start":289,"line_end":289,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8574390,"byte_end":8574458,"line_start":280,"line_end":280,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8574463,"byte_end":8574466,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8574471,"byte_end":8574541,"line_start":282,"line_end":282,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8574546,"byte_end":8574620,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8574625,"byte_end":8574687,"line_start":284,"line_end":284,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8574692,"byte_end":8574695,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8574700,"byte_end":8574710,"line_start":286,"line_end":286,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8574715,"byte_end":8574718,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8574723,"byte_end":8574772,"line_start":288,"line_end":288,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3629},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8575153,"byte_end":8575170,"line_start":298,"line_end":298,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8574905,"byte_end":8574976,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8574981,"byte_end":8574984,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8574989,"byte_end":8575063,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8575068,"byte_end":8575071,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: method@Self::set_multicast_loop_v6","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8575076,"byte_end":8575141,"line_start":297,"line_end":297,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3630},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8575514,"byte_end":8575535,"line_start":309,"line_end":309,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8575257,"byte_end":8575328,"line_start":302,"line_end":302,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8575333,"byte_end":8575336,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8575341,"byte_end":8575417,"line_start":304,"line_end":304,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8575422,"byte_end":8575425,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8575430,"byte_end":8575440,"line_start":306,"line_end":306,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8575445,"byte_end":8575448,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8575453,"byte_end":8575502,"line_start":308,"line_end":308,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3631},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8575829,"byte_end":8575832,"line_start":318,"line_end":318,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8575636,"byte_end":8575694,"line_start":313,"line_end":313,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8575699,"byte_end":8575702,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8575707,"byte_end":8575767,"line_start":315,"line_end":315,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8575772,"byte_end":8575775,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8575780,"byte_end":8575817,"line_start":317,"line_end":317,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3632},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8576089,"byte_end":8576096,"line_start":326,"line_end":326,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8575904,"byte_end":8575962,"line_start":322,"line_end":322,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8575967,"byte_end":8575970,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8575975,"byte_end":8576051,"line_start":324,"line_end":324,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8576056,"byte_end":8576077,"line_start":325,"line_end":325,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3633},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8576614,"byte_end":8576631,"line_start":337,"line_end":337,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8576184,"byte_end":8576242,"line_start":330,"line_end":330,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8576247,"byte_end":8576250,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8576255,"byte_end":8576329,"line_start":332,"line_end":332,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8576334,"byte_end":8576407,"line_start":333,"line_end":333,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8576412,"byte_end":8576484,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8576489,"byte_end":8576559,"line_start":335,"line_end":335,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8576564,"byte_end":8576602,"line_start":336,"line_end":336,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3634},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8577096,"byte_end":8577113,"line_start":346,"line_end":346,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8576780,"byte_end":8576840,"line_start":341,"line_end":341,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8576845,"byte_end":8576848,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8576853,"byte_end":8576927,"line_start":343,"line_end":343,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8576932,"byte_end":8577005,"line_start":344,"line_end":344,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8577010,"byte_end":8577084,"line_start":345,"line_end":345,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3635},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8577480,"byte_end":8577498,"line_start":355,"line_end":355,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8577256,"byte_end":8577315,"line_start":350,"line_end":350,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8577320,"byte_end":8577323,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8577328,"byte_end":8577398,"line_start":352,"line_end":352,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8577403,"byte_end":8577406,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: method@Self::join_multicast_v4","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8577411,"byte_end":8577468,"line_start":354,"line_end":354,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3636},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8577874,"byte_end":8577892,"line_start":364,"line_end":364,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8577648,"byte_end":8577709,"line_start":359,"line_end":359,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8577714,"byte_end":8577717,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8577722,"byte_end":8577792,"line_start":361,"line_end":361,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8577797,"byte_end":8577800,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: method@Self::join_multicast_v6","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8577805,"byte_end":8577862,"line_start":363,"line_end":363,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":3695},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8580527,"byte_end":8580535,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"SendHalf","qualname":"::net::udp::split::SendHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The send half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The send half after [`split`](super::UdpSocket::split).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8580339,"byte_end":8580398,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8580399,"byte_end":8580402,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Use [`send_to`](method@Self::send_to) or [`send`](method@Self::send) to send","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8580403,"byte_end":8580483,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ datagrams.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8580484,"byte_end":8580498,"line_start":27,"line_end":27,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3700},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8580749,"byte_end":8580757,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"RecvHalf","qualname":"::net::udp::split::RecvHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The recv half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The recv half after [`split`](super::UdpSocket::split).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8580554,"byte_end":8580613,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8580614,"byte_end":8580617,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Use [`recv_from`](method@Self::recv_from) or [`recv`](method@Self::recv) to receive","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8580618,"byte_end":8580705,"line_start":33,"line_end":33,"column_start":1,"column_end":88}},{"value":"/ datagrams.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8580706,"byte_end":8580720,"line_start":34,"line_end":34,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3705},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8581099,"byte_end":8581111,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::udp::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating two halves were not from the same socket, and thus could\n not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating two halves were not from the same socket, and thus could","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8580970,"byte_end":8581047,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ not be `reunite`d.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8581048,"byte_end":8581070,"line_start":46,"line_end":46,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":3707},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8581112,"byte_end":8581124,"line_start":48,"line_end":48,"column_start":25,"column_end":37},"name":"0","qualname":"::net::udp::split::ReuniteError::0","value":"net::udp::split::SendHalf","parent":{"krate":0,"index":3705},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3708},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8581126,"byte_end":8581138,"line_start":48,"line_end":48,"column_start":39,"column_end":51},"name":"1","qualname":"::net::udp::split::ReuniteError::1","value":"net::udp::split::RecvHalf","parent":{"krate":0,"index":3705},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3665},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8582148,"byte_end":8582155,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"reunite","qualname":"<RecvHalf>::reunite","value":"pub fn reunite(Self, SendHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8581933,"byte_end":8582004,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8582009,"byte_end":8582075,"line_start":76,"line_end":76,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8582080,"byte_end":8582136,"line_start":77,"line_end":77,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3666},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8582646,"byte_end":8582655,"line_start":88,"line_end":88,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<RecvHalf>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8582256,"byte_end":8582335,"line_start":82,"line_end":82,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8582340,"byte_end":8582407,"line_start":83,"line_end":83,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8582412,"byte_end":8582415,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8582420,"byte_end":8582498,"line_start":85,"line_end":85,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8582503,"byte_end":8582581,"line_start":86,"line_end":86,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8582586,"byte_end":8582628,"line_start":87,"line_end":87,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3670},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8583435,"byte_end":8583439,"line_start":104,"line_end":104,"column_start":18,"column_end":22},"name":"recv","qualname":"<RecvHalf>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8582790,"byte_end":8582869,"line_start":92,"line_end":92,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8582874,"byte_end":8582958,"line_start":93,"line_end":93,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8582963,"byte_end":8582995,"line_start":94,"line_end":94,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8583000,"byte_end":8583003,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8583008,"byte_end":8583089,"line_start":96,"line_end":96,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8583094,"byte_end":8583177,"line_start":97,"line_end":97,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8583182,"byte_end":8583216,"line_start":98,"line_end":98,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8583221,"byte_end":8583224,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8583229,"byte_end":8583312,"line_start":100,"line_end":100,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8583317,"byte_end":8583362,"line_start":101,"line_end":101,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8583367,"byte_end":8583370,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8583375,"byte_end":8583417,"line_start":103,"line_end":103,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3675},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8583788,"byte_end":8583795,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SendHalf>::reunite","value":"pub fn reunite(Self, RecvHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8583573,"byte_end":8583644,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8583649,"byte_end":8583715,"line_start":111,"line_end":111,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8583720,"byte_end":8583776,"line_start":112,"line_end":112,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3676},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8584187,"byte_end":8584194,"line_start":122,"line_end":122,"column_start":18,"column_end":25},"name":"send_to","qualname":"<SendHalf>::send_to","value":"pub async fn send_to<'_, '_, '_>(&'_ mut Self, &'_ [u8], &'_ SocketAddr)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8583896,"byte_end":8583968,"line_start":117,"line_end":117,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8583973,"byte_end":8584044,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8584049,"byte_end":8584052,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8584057,"byte_end":8584133,"line_start":120,"line_end":120,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8584138,"byte_end":8584169,"line_start":121,"line_end":121,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3680},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8584746,"byte_end":8584750,"line_start":133,"line_end":133,"column_start":18,"column_end":22},"name":"send","qualname":"<SendHalf>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8584338,"byte_end":8584436,"line_start":126,"line_end":126,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8584441,"byte_end":8584512,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8584517,"byte_end":8584520,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8584525,"byte_end":8584608,"line_start":129,"line_end":129,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8584613,"byte_end":8584673,"line_start":130,"line_end":130,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8584678,"byte_end":8584681,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8584686,"byte_end":8584728,"line_start":132,"line_end":132,"column_start":5,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":3711},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::net::unix","value":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","parent":null,"children":[{"krate":0,"index":3712},{"krate":0,"index":3773},{"krate":0,"index":3788},{"krate":0,"index":3789},{"krate":0,"index":3835},{"krate":0,"index":3836},{"krate":0,"index":3860},{"krate":0,"index":3861},{"krate":0,"index":3862},{"krate":0,"index":3863},{"krate":0,"index":3930},{"krate":0,"index":3931},{"krate":0,"index":3950}],"decl_id":null,"docs":" Unix domain socket utility types\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23599,"byte_end":23633,"line_start":350,"line_end":350,"column_start":13,"column_end":47}},{"value":"/ Unix domain socket utility types","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":8585058,"byte_end":8585094,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3954},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8585732,"byte_end":8585744,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"UnixDatagram","qualname":"::net::unix::datagram::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":3955}],"decl_id":null,"docs":" An I/O object representing a Unix datagram socket.\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23599,"byte_end":23633,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3730},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8585901,"byte_end":8585905,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"pub fn bind<P>(P) -> io::Result<UnixDatagram> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` bound to the specified path.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` bound to the specified path.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8585828,"byte_end":8585889,"line_start":21,"line_end":21,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3732},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8586368,"byte_end":8586372,"line_start":35,"line_end":35,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"pub fn pair() -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8586088,"byte_end":8586137,"line_start":30,"line_end":30,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8586142,"byte_end":8586145,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8586150,"byte_end":8586221,"line_start":32,"line_end":32,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8586226,"byte_end":8586296,"line_start":33,"line_end":33,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8586301,"byte_end":8586356,"line_start":34,"line_end":34,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3733},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8587198,"byte_end":8587206,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixDatagram>::from_std","value":"pub fn from_std(net::UnixDatagram) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixDatagram` in the standard library and returns a\n nonblocking `UnixDatagram` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixDatagram` in the standard library and returns a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8586583,"byte_end":8586650,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ nonblocking `UnixDatagram` from this crate.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8586655,"byte_end":8586702,"line_start":44,"line_end":44,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8586707,"byte_end":8586710,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ The returned datagram will be associated with the given event loop","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8586715,"byte_end":8586785,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8586790,"byte_end":8586844,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8586849,"byte_end":8586852,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8586857,"byte_end":8586869,"line_start":49,"line_end":49,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8586874,"byte_end":8586877,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8586882,"byte_end":8586942,"line_start":51,"line_end":51,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8586947,"byte_end":8586950,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8586955,"byte_end":8587025,"line_start":53,"line_end":53,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8587030,"byte_end":8587103,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8587108,"byte_end":8587186,"line_start":55,"line_end":55,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3735},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8587657,"byte_end":8587664,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"pub fn unbound() -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` which is not bound to any address.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` which is not bound to any address.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8587578,"byte_end":8587645,"line_start":67,"line_end":67,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3736},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8588017,"byte_end":8588024,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"pub fn connect<P: AsRef<Path>>(&Self, P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8587798,"byte_end":8587847,"line_start":73,"line_end":73,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8587852,"byte_end":8587855,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ The `send` method may be used to send data to the specified address.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8587860,"byte_end":8587932,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/ `recv` and `recv_from` will only receive data from that address.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8587937,"byte_end":8588005,"line_start":76,"line_end":76,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3738},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8588196,"byte_end":8588200,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"send","qualname":"<UnixDatagram>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8588128,"byte_end":8588178,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3743},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8589395,"byte_end":8589399,"line_start":113,"line_end":113,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnixDatagram>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8589343,"byte_end":8589377,"line_start":112,"line_end":112,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3748},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8590077,"byte_end":8590084,"line_start":134,"line_end":134,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"pub async fn send_to<P, '_, '_>(&'_ mut Self, &'_ [u8], P) -> /*impl Trait*/\nwhere P: AsRef<Path> + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8590005,"byte_end":8590059,"line_start":133,"line_end":133,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3754},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8590805,"byte_end":8590814,"line_start":159,"line_end":159,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8590753,"byte_end":8590787,"line_start":158,"line_end":158,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3759},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8591541,"byte_end":8591551,"line_start":180,"line_end":180,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8591470,"byte_end":8591529,"line_start":179,"line_end":179,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3760},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8591767,"byte_end":8591776,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8591637,"byte_end":8591683,"line_start":184,"line_end":184,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8591688,"byte_end":8591691,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The `connect` method will connect the socket to a peer.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8591696,"byte_end":8591755,"line_start":186,"line_end":186,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3761},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8591920,"byte_end":8591930,"line_start":192,"line_end":192,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8591861,"byte_end":8591908,"line_start":191,"line_end":191,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3762},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8592304,"byte_end":8592312,"line_start":201,"line_end":201,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8592023,"byte_end":8592089,"line_start":196,"line_end":196,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8592094,"byte_end":8592097,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8592102,"byte_end":8592170,"line_start":198,"line_end":198,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8592175,"byte_end":8592245,"line_start":199,"line_end":199,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8592250,"byte_end":8592292,"line_start":200,"line_end":200,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":3956},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8593690,"byte_end":8593698,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::unix::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":3958}],"decl_id":null,"docs":" Stream of listeners\n","sig":null,"attributes":[{"value":"/ Stream of listeners","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8593589,"byte_end":8593612,"line_start":7,"line_end":7,"column_start":1,"column_end":24}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8593630,"byte_end":8593678,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3784},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8594207,"byte_end":8594218,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"pub fn poll_accept(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<UnixStream>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `UnixStream` by polling inner `UnixListener` to accept\n connection.","sig":null,"attributes":[{"value":"/ Attempts to poll `UnixStream` by polling inner `UnixListener` to accept","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8593878,"byte_end":8593953,"line_start":19,"line_end":19,"column_start":5,"column_end":80}},{"value":"/ connection.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8593958,"byte_end":8593973,"line_start":20,"line_end":20,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8593978,"byte_end":8593981,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ If `UnixListener` isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8593986,"byte_end":8594056,"line_start":22,"line_end":22,"column_start":5,"column_end":75}},{"value":"/ current task will be notified by a waker.  Otherwise `Poll::Ready` with","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8594061,"byte_end":8594136,"line_start":23,"line_end":23,"column_start":5,"column_end":80}},{"value":"/ `Result` containing `UnixStream` will be returned.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8594141,"byte_end":8594195,"line_start":24,"line_end":24,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3962},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8596544,"byte_end":8596556,"line_start":49,"line_end":49,"column_start":16,"column_end":28},"name":"UnixListener","qualname":"::net::unix::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":3963}],"decl_id":null,"docs":" A Unix socket which can accept connections from other Unix sockets.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23599,"byte_end":23633,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3810},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8597055,"byte_end":8597059,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"pub fn bind<P>(P) -> io::Result<UnixListener> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` bound to the specified path.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8596640,"byte_end":8596701,"line_start":55,"line_end":55,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8596706,"byte_end":8596709,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8596714,"byte_end":8596726,"line_start":57,"line_end":57,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8596731,"byte_end":8596734,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8596739,"byte_end":8596799,"line_start":59,"line_end":59,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8596804,"byte_end":8596807,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8596812,"byte_end":8596882,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8596887,"byte_end":8596960,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8596965,"byte_end":8597043,"line_start":63,"line_end":63,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3812},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8597903,"byte_end":8597911,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixListener>::from_std","value":"pub fn from_std(net::UnixListener) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixListener` in the standard library and returns a\n nonblocking `UnixListener` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixListener` in the standard library and returns a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8597288,"byte_end":8597355,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/ nonblocking `UnixListener` from this crate.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8597360,"byte_end":8597407,"line_start":74,"line_end":74,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8597412,"byte_end":8597415,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The returned listener will be associated with the given event loop","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8597420,"byte_end":8597490,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8597495,"byte_end":8597549,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8597554,"byte_end":8597557,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8597562,"byte_end":8597574,"line_start":79,"line_end":79,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8597579,"byte_end":8597582,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8597587,"byte_end":8597647,"line_start":81,"line_end":81,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8597652,"byte_end":8597655,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8597660,"byte_end":8597730,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8597735,"byte_end":8597808,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8597813,"byte_end":8597891,"line_start":85,"line_end":85,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3813},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8598198,"byte_end":8598208,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8598132,"byte_end":8598186,"line_start":92,"line_end":92,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3814},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8598353,"byte_end":8598363,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8598294,"byte_end":8598341,"line_start":97,"line_end":97,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3815},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8598529,"byte_end":8598535,"line_start":103,"line_end":103,"column_start":18,"column_end":24},"name":"accept","qualname":"<UnixListener>::accept","value":"pub async fn accept<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.\n","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8598456,"byte_end":8598511,"line_start":102,"line_end":102,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3821},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8601004,"byte_end":8601012,"line_start":174,"line_end":174,"column_start":12,"column_end":20},"name":"incoming","qualname":"<UnixListener>::incoming","value":"pub fn incoming(&mut Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8599640,"byte_end":8599714,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8599719,"byte_end":8599722,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Note that `UnixListener` also directly implements `Stream`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8599727,"byte_end":8599790,"line_start":139,"line_end":139,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8599795,"byte_end":8599798,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8599803,"byte_end":8599879,"line_start":141,"line_end":141,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8599884,"byte_end":8599953,"line_start":142,"line_end":142,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8599958,"byte_end":8599987,"line_start":143,"line_end":143,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8599992,"byte_end":8599995,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8600000,"byte_end":8600012,"line_start":145,"line_end":145,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8600017,"byte_end":8600020,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8600025,"byte_end":8600100,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8600105,"byte_end":8600180,"line_start":148,"line_end":148,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8600185,"byte_end":8600259,"line_start":149,"line_end":149,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8600264,"byte_end":8600339,"line_start":150,"line_end":150,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8600344,"byte_end":8600352,"line_start":151,"line_end":151,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8600357,"byte_end":8600360,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8600365,"byte_end":8600379,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8600384,"byte_end":8600387,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8600392,"byte_end":8600405,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixListener;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8600410,"byte_end":8600443,"line_start":156,"line_end":156,"column_start":5,"column_end":38}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8600448,"byte_end":8600481,"line_start":157,"line_end":157,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8600486,"byte_end":8600489,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8600494,"byte_end":8600512,"line_start":159,"line_end":159,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8600517,"byte_end":8600538,"line_start":160,"line_end":160,"column_start":5,"column_end":26}},{"value":"/     let mut listener = UnixListener::bind(\"/path/to/the/socket\").unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8600543,"byte_end":8600621,"line_start":161,"line_end":161,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8600626,"byte_end":8600673,"line_start":162,"line_end":162,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8600678,"byte_end":8600681,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8600686,"byte_end":8600742,"line_start":164,"line_end":164,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8600747,"byte_end":8600773,"line_start":165,"line_end":165,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8600778,"byte_end":8600809,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8600814,"byte_end":8600858,"line_start":167,"line_end":167,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8600863,"byte_end":8600880,"line_start":168,"line_end":168,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8600885,"byte_end":8600938,"line_start":169,"line_end":169,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8600943,"byte_end":8600956,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8600961,"byte_end":8600970,"line_start":171,"line_end":171,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8600975,"byte_end":8600980,"line_start":172,"line_end":172,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8600985,"byte_end":8600992,"line_start":173,"line_end":173,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3964},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8603123,"byte_end":8603131,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::unix::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Read half of a `UnixStream`.\n","sig":null,"attributes":[{"value":"/ Read half of a `UnixStream`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8603062,"byte_end":8603094,"line_start":20,"line_end":20,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":3971},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8603216,"byte_end":8603225,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::unix::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Write half of a `UnixStream`.\n","sig":null,"attributes":[{"value":"/ Write half of a `UnixStream`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8603154,"byte_end":8603187,"line_start":24,"line_end":24,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3978},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8605191,"byte_end":8605201,"line_start":23,"line_end":23,"column_start":16,"column_end":26},"name":"UnixStream","qualname":"::net::unix::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":3979}],"decl_id":null,"docs":" A structure representing a connected Unix socket.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23599,"byte_end":23633,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3896},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8605523,"byte_end":8605530,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixStream>::connect","value":"pub async fn connect<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.","sig":null,"attributes":[{"value":"/ Connects to the socket named by `path`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8605281,"byte_end":8605324,"line_start":29,"line_end":29,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8605329,"byte_end":8605332,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This function will create a new Unix socket and connect to the path","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8605337,"byte_end":8605408,"line_start":31,"line_end":31,"column_start":5,"column_end":76}},{"value":"/ specified, associating the returned stream with the default event loop's","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8605413,"byte_end":8605489,"line_start":32,"line_end":32,"column_start":5,"column_end":81}},{"value":"/ handle.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8605494,"byte_end":8605505,"line_start":33,"line_end":33,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3901},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8606415,"byte_end":8606423,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixStream>::from_std","value":"pub fn from_std(net::UnixStream) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixStream` in the standard library and returns a\n nonblocking `UnixStream` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixStream` in the standard library and returns a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8605806,"byte_end":8605871,"line_start":45,"line_end":45,"column_start":5,"column_end":70}},{"value":"/ nonblocking `UnixStream` from this crate.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8605876,"byte_end":8605921,"line_start":46,"line_end":46,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8605926,"byte_end":8605929,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be associated with the given event loop","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8605934,"byte_end":8606002,"line_start":48,"line_end":48,"column_start":5,"column_end":73}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8606007,"byte_end":8606061,"line_start":49,"line_end":49,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8606066,"byte_end":8606069,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8606074,"byte_end":8606086,"line_start":51,"line_end":51,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8606091,"byte_end":8606094,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8606099,"byte_end":8606159,"line_start":53,"line_end":53,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8606164,"byte_end":8606167,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8606172,"byte_end":8606242,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8606247,"byte_end":8606320,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8606325,"byte_end":8606403,"line_start":57,"line_end":57,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3902},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8606907,"byte_end":8606911,"line_start":70,"line_end":70,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"pub fn pair() -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8606627,"byte_end":8606676,"line_start":65,"line_end":65,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8606681,"byte_end":8606684,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8606689,"byte_end":8606760,"line_start":67,"line_end":67,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8606765,"byte_end":8606835,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8606840,"byte_end":8606895,"line_start":69,"line_end":69,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3904},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8607352,"byte_end":8607362,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8607272,"byte_end":8607340,"line_start":83,"line_end":83,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3905},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8607529,"byte_end":8607538,"line_start":89,"line_end":89,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8607448,"byte_end":8607517,"line_start":88,"line_end":88,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3906},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8607717,"byte_end":8607726,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"peer_cred","qualname":"<UnixStream>::peer_cred","value":"pub fn peer_cred(&Self) -> io::Result<UCred>","parent":null,"children":[],"decl_id":null,"docs":" Returns effective credentials of the process which called `connect` or `pair`.\n","sig":null,"attributes":[{"value":"/ Returns effective credentials of the process which called `connect` or `pair`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8607623,"byte_end":8607705,"line_start":93,"line_end":93,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":3907},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8607862,"byte_end":8607872,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8607803,"byte_end":8607850,"line_start":98,"line_end":98,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3908},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8608246,"byte_end":8608254,"line_start":108,"line_end":108,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8607965,"byte_end":8608031,"line_start":103,"line_end":103,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8608036,"byte_end":8608039,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8608044,"byte_end":8608112,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8608117,"byte_end":8608187,"line_start":106,"line_end":106,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8608192,"byte_end":8608234,"line_start":107,"line_end":107,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3909},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8608488,"byte_end":8608493,"line_start":114,"line_end":114,"column_start":12,"column_end":17},"name":"split","qualname":"<UnixStream>::split","value":"pub fn split(&mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Split a `UnixStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.\n","sig":null,"attributes":[{"value":"/ Split a `UnixStream` into a read half and a write half, which can be used","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8608348,"byte_end":8608425,"line_start":112,"line_end":112,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8608430,"byte_end":8608476,"line_start":113,"line_end":113,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":3980},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":8612074,"byte_end":8612079,"line_start":5,"line_end":5,"column_start":12,"column_end":17},"name":"UCred","qualname":"::net::unix::ucred::UCred","value":"UCred { uid, gid }","parent":null,"children":[{"krate":0,"index":3981},{"krate":0,"index":3982}],"decl_id":null,"docs":" Credentials of a process\n","sig":null,"attributes":[{"value":"/ Credentials of a process","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":8611983,"byte_end":8612011,"line_start":3,"line_end":3,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":3981},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":8612127,"byte_end":8612130,"line_start":7,"line_end":7,"column_start":9,"column_end":12},"name":"uid","qualname":"::net::unix::ucred::UCred::uid","value":"u32","parent":{"krate":0,"index":3980},"children":[],"decl_id":null,"docs":" UID (user ID) of the process\n","sig":null,"attributes":[{"value":"/ UID (user ID) of the process","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":8612086,"byte_end":8612118,"line_start":6,"line_end":6,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3982},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":8612185,"byte_end":8612188,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"name":"gid","qualname":"::net::unix::ucred::UCred::gid","value":"u32","parent":{"krate":0,"index":3980},"children":[],"decl_id":null,"docs":" GID (group ID) of the process\n","sig":null,"attributes":[{"value":"/ GID (group ID) of the process","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":8612143,"byte_end":8612176,"line_start":8,"line_end":8,"column_start":5,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":545},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":93380,"byte_end":93386,"line_start":55,"line_end":55,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":93317,"byte_end":93370,"line_start":54,"line_end":54,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":546},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":93439,"byte_end":93444,"line_start":58,"line_end":58,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error;","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":93401,"byte_end":93429,"line_start":57,"line_end":57,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":556},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":4098},{"krate":0,"index":4099},{"krate":0,"index":4100},{"krate":0,"index":4101},{"krate":0,"index":4102}],"decl_id":null,"docs":" A \"prelude\" for users of the `tokio` crate.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105035,"byte_end":105053,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ A \"prelude\" for users of the `tokio` crate.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105055,"byte_end":105102,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105103,"byte_end":105106,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This prelude is similar to the standard library's prelude in that you'll","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105107,"byte_end":105183,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ almost always want to import its entire contents, but unlike the standard","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105184,"byte_end":105261,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ library's prelude you'll have to do so manually:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105262,"byte_end":105314,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105315,"byte_end":105318,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105319,"byte_end":105326,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # #![allow(warnings)]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105327,"byte_end":105352,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105353,"byte_end":105379,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105380,"byte_end":105387,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105388,"byte_end":105391,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The prelude may grow over time as additional items see ubiquitous use.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105392,"byte_end":105466,"line_start":14,"line_end":14,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":4103},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"process","qualname":"::process","value":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","parent":null,"children":[{"krate":0,"index":4104},{"krate":0,"index":4253},{"krate":0,"index":4260},{"krate":0,"index":4261},{"krate":0,"index":4262},{"krate":0,"index":4263},{"krate":0,"index":4264},{"krate":0,"index":4265},{"krate":0,"index":4266},{"krate":0,"index":4267},{"krate":0,"index":4268},{"krate":0,"index":4269},{"krate":0,"index":4270},{"krate":0,"index":4271},{"krate":0,"index":4272},{"krate":0,"index":4273},{"krate":0,"index":4274},{"krate":0,"index":4275},{"krate":0,"index":4276},{"krate":0,"index":4414},{"krate":0,"index":4417},{"krate":0,"index":4277},{"krate":0,"index":4282},{"krate":0,"index":4324},{"krate":0,"index":4419},{"krate":0,"index":4423},{"krate":0,"index":4326},{"krate":0,"index":4329},{"krate":0,"index":4332},{"krate":0,"index":4426},{"krate":0,"index":4431},{"krate":0,"index":4338},{"krate":0,"index":4352},{"krate":0,"index":4433},{"krate":0,"index":4435},{"krate":0,"index":4437},{"krate":0,"index":4439},{"krate":0,"index":4441},{"krate":0,"index":4443},{"krate":0,"index":4355},{"krate":0,"index":4359},{"krate":0,"index":4362},{"krate":0,"index":4365}],"decl_id":null,"docs":" An implementation of asynchronous process management for Tokio.","sig":null,"attributes":[{"value":"cfg(feature = \"process\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":20581,"byte_end":20608,"line_start":199,"line_end":199,"column_start":13,"column_end":40}},{"value":"cfg(not(loom))","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":20684,"byte_end":20701,"line_start":201,"line_end":201,"column_start":13,"column_end":30}},{"value":"/ An implementation of asynchronous process management for Tokio.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8617504,"byte_end":8617571,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8617572,"byte_end":8617575,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a [`Command`] struct that imitates the interface of the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8617576,"byte_end":8617656,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ [`std::process::Command`] type in the standard library, but provides asynchronous versions of","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8617657,"byte_end":8617754,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ functions that create processes. These functions (`spawn`, `status`, `output` and their","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8617755,"byte_end":8617846,"line_start":5,"line_end":5,"column_start":1,"column_end":92}},{"value":"/ variants) return \"future aware\" types that interoperate with Tokio. The asynchronous process","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8617847,"byte_end":8617943,"line_start":6,"line_end":6,"column_start":1,"column_end":97}},{"value":"/ support is provided through signal handling on Unix and system APIs on Windows.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8617944,"byte_end":8618027,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8618028,"byte_end":8618031,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`std::process::Command`]: std::process::Command","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8618032,"byte_end":8618084,"line_start":9,"line_end":9,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8618085,"byte_end":8618088,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8618089,"byte_end":8618103,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8618104,"byte_end":8618107,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Here's an example program which will spawn `echo hello world` and then wait","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8618108,"byte_end":8618187,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ for it complete.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8618188,"byte_end":8618208,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8618209,"byte_end":8618212,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8618213,"byte_end":8618226,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8618227,"byte_end":8618259,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8618260,"byte_end":8618263,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8618264,"byte_end":8618282,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8618283,"byte_end":8618346,"line_start":20,"line_end":20,"column_start":1,"column_end":64}},{"value":"/     // The usage is the same as with the standard library's `Command` type, however the value","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8618347,"byte_end":8618444,"line_start":21,"line_end":21,"column_start":1,"column_end":98}},{"value":"/     // returned from `spawn` is a `Result` containing a `Future`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8618445,"byte_end":8618514,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/     let child = Command::new(\"echo\").arg(\"hello\").arg(\"world\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8618515,"byte_end":8618581,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"/                         .spawn();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8618582,"byte_end":8618619,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8618620,"byte_end":8618623,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/     // Make sure our child succeeded in spawning and process the result","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8618624,"byte_end":8618699,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/     let future = child.expect(\"failed to spawn\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8618700,"byte_end":8618753,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8618754,"byte_end":8618757,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     // Await until the future (and the command) completes","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8618758,"byte_end":8618819,"line_start":29,"line_end":29,"column_start":1,"column_end":62}},{"value":"/     let status = future.await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8618820,"byte_end":8618855,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/     println!(\"the command exited with: {}\", status);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8618856,"byte_end":8618912,"line_start":31,"line_end":31,"column_start":1,"column_end":57}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8618913,"byte_end":8618927,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8618928,"byte_end":8618933,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8618934,"byte_end":8618941,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8618942,"byte_end":8618945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Next, let's take a look at an example where we not only spawn `echo hello","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8618946,"byte_end":8619023,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ world` but we also capture its output.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619024,"byte_end":8619066,"line_start":37,"line_end":37,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619067,"byte_end":8619070,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619071,"byte_end":8619084,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619085,"byte_end":8619117,"line_start":40,"line_end":40,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619118,"byte_end":8619121,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619122,"byte_end":8619140,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619141,"byte_end":8619204,"line_start":43,"line_end":43,"column_start":1,"column_end":64}},{"value":"/     // Like above, but use `output` which returns a future instead of","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619205,"byte_end":8619278,"line_start":44,"line_end":44,"column_start":1,"column_end":74}},{"value":"/     // immediately returning the `Child`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619279,"byte_end":8619324,"line_start":45,"line_end":45,"column_start":1,"column_end":46}},{"value":"/     let output = Command::new(\"echo\").arg(\"hello\").arg(\"world\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619325,"byte_end":8619392,"line_start":46,"line_end":46,"column_start":1,"column_end":68}},{"value":"/                         .output();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619393,"byte_end":8619431,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619432,"byte_end":8619435,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     let output = output.await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619436,"byte_end":8619471,"line_start":49,"line_end":49,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619472,"byte_end":8619475,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert!(output.status.success());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619476,"byte_end":8619517,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     assert_eq!(output.stdout, b\"hello world\\n\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619518,"byte_end":8619570,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619571,"byte_end":8619585,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619586,"byte_end":8619591,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619592,"byte_end":8619599,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619600,"byte_end":8619603,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ We can also read input line by line.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619604,"byte_end":8619644,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619645,"byte_end":8619648,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619649,"byte_end":8619662,"line_start":59,"line_end":59,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{BufReader, AsyncBufReadExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619663,"byte_end":8619711,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619712,"byte_end":8619744,"line_start":61,"line_end":61,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619745,"byte_end":8619748,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ use std::process::Stdio;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619749,"byte_end":8619777,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619778,"byte_end":8619781,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619782,"byte_end":8619800,"line_start":65,"line_end":65,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619801,"byte_end":8619864,"line_start":66,"line_end":66,"column_start":1,"column_end":64}},{"value":"/     let mut cmd = Command::new(\"cat\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619865,"byte_end":8619907,"line_start":67,"line_end":67,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619908,"byte_end":8619911,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     // Specify that we want the command's standard output piped back to us.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619912,"byte_end":8619991,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/     // By default, standard input/output/error will be inherited from the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8619992,"byte_end":8620069,"line_start":70,"line_end":70,"column_start":1,"column_end":78}},{"value":"/     // current process (for example, this means that standard input will","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8620070,"byte_end":8620146,"line_start":71,"line_end":71,"column_start":1,"column_end":77}},{"value":"/     // come from the keyboard and standard output/error will go directly to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8620147,"byte_end":8620226,"line_start":72,"line_end":72,"column_start":1,"column_end":80}},{"value":"/     // the terminal if this process is invoked from the command line).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8620227,"byte_end":8620301,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/     cmd.stdout(Stdio::piped());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8620302,"byte_end":8620337,"line_start":74,"line_end":74,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8620338,"byte_end":8620341,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     let mut child = cmd.spawn()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8620342,"byte_end":8620377,"line_start":76,"line_end":76,"column_start":1,"column_end":36}},{"value":"/         .expect(\"failed to spawn command\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8620378,"byte_end":8620425,"line_start":77,"line_end":77,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8620426,"byte_end":8620429,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     let stdout = child.stdout.take()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8620430,"byte_end":8620470,"line_start":79,"line_end":79,"column_start":1,"column_end":41}},{"value":"/         .expect(\"child did not have a handle to stdout\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8620471,"byte_end":8620532,"line_start":80,"line_end":80,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8620533,"byte_end":8620536,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     let mut reader = BufReader::new(stdout).lines();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8620537,"byte_end":8620593,"line_start":82,"line_end":82,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8620594,"byte_end":8620597,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     // Ensure the child process is spawned in the runtime so it can","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8620598,"byte_end":8620669,"line_start":84,"line_end":84,"column_start":1,"column_end":72}},{"value":"/     // make progress on its own while we await for any output.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8620670,"byte_end":8620736,"line_start":85,"line_end":85,"column_start":1,"column_end":67}},{"value":"/     tokio::spawn(async {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8620737,"byte_end":8620765,"line_start":86,"line_end":86,"column_start":1,"column_end":29}},{"value":"/         let status = child.await","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8620766,"byte_end":8620802,"line_start":87,"line_end":87,"column_start":1,"column_end":37}},{"value":"/             .expect(\"child process encountered an error\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8620803,"byte_end":8620865,"line_start":88,"line_end":88,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8620866,"byte_end":8620869,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/         println!(\"child status was: {}\", status);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8620870,"byte_end":8620923,"line_start":90,"line_end":90,"column_start":1,"column_end":54}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8620924,"byte_end":8620935,"line_start":91,"line_end":91,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8620936,"byte_end":8620939,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     while let Some(line) = reader.next_line().await? {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8620940,"byte_end":8620998,"line_start":93,"line_end":93,"column_start":1,"column_end":59}},{"value":"/         println!(\"Line: {}\", line);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8620999,"byte_end":8621038,"line_start":94,"line_end":94,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8621039,"byte_end":8621048,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8621049,"byte_end":8621052,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8621053,"byte_end":8621067,"line_start":97,"line_end":97,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8621068,"byte_end":8621073,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8621074,"byte_end":8621081,"line_start":99,"line_end":99,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8621082,"byte_end":8621085,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8621086,"byte_end":8621099,"line_start":101,"line_end":101,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8621100,"byte_end":8621103,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8621104,"byte_end":8621179,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/ paradigm of dropping-implies-cancellation, a spawned process will, by","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8621180,"byte_end":8621253,"line_start":104,"line_end":104,"column_start":1,"column_end":74}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8621254,"byte_end":8621334,"line_start":105,"line_end":105,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8621335,"byte_end":8621338,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ The `Command::kill_on_drop` method can be used to modify this behavior","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8621339,"byte_end":8621413,"line_start":107,"line_end":107,"column_start":1,"column_end":75}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8621414,"byte_end":8621488,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ has exited.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8621489,"byte_end":8621504,"line_start":109,"line_end":109,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8621505,"byte_end":8621508,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [`Command`]: crate::process::Command","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8621509,"byte_end":8621549,"line_start":111,"line_end":111,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":4414},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8622570,"byte_end":8622577,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"Command","qualname":"::process::Command","value":"Command {  }","parent":null,"children":[{"krate":0,"index":4415},{"krate":0,"index":4416}],"decl_id":null,"docs":" This structure mimics the API of [`std::process::Command`] found in the standard library, but\n replaces functions that create a process with an asynchronous variant. The main provided\n asynchronous functions are [spawn](Command::spawn), [status](Command::status), and\n [output](Command::output).","sig":null,"attributes":[{"value":"/ This structure mimics the API of [`std::process::Command`] found in the standard library, but","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8622058,"byte_end":8622155,"line_start":139,"line_end":139,"column_start":1,"column_end":98}},{"value":"/ replaces functions that create a process with an asynchronous variant. The main provided","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8622156,"byte_end":8622248,"line_start":140,"line_end":140,"column_start":1,"column_end":93}},{"value":"/ asynchronous functions are [spawn](Command::spawn), [status](Command::status), and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8622249,"byte_end":8622335,"line_start":141,"line_end":141,"column_start":1,"column_end":87}},{"value":"/ [output](Command::output).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8622336,"byte_end":8622366,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8622367,"byte_end":8622370,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ `Command` uses asynchronous versions of some `std` types (for example [`Child`]).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8622371,"byte_end":8622456,"line_start":144,"line_end":144,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8622457,"byte_end":8622460,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ [`std::process::Command`]: std::process::Command","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8622461,"byte_end":8622513,"line_start":146,"line_end":146,"column_start":1,"column_end":53}},{"value":"/ [`Child`]: struct@Child","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8622514,"byte_end":8622541,"line_start":147,"line_end":147,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4283},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8623927,"byte_end":8623930,"line_start":191,"line_end":191,"column_start":12,"column_end":15},"name":"new","qualname":"<Command>::new","value":"pub fn new<S: AsRef<OsStr>>(S) -> Command","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Command` for launching the program at\n path `program`, with the following default configuration:","sig":null,"attributes":[{"value":"/ Constructs a new `Command` for launching the program at","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8622818,"byte_end":8622877,"line_start":162,"line_end":162,"column_start":5,"column_end":64}},{"value":"/ path `program`, with the following default configuration:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8622882,"byte_end":8622943,"line_start":163,"line_end":163,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8622948,"byte_end":8622951,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ * No arguments to the program","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8622956,"byte_end":8622989,"line_start":165,"line_end":165,"column_start":5,"column_end":38}},{"value":"/ * Inherit the current process's environment","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8622994,"byte_end":8623041,"line_start":166,"line_end":166,"column_start":5,"column_end":52}},{"value":"/ * Inherit the current process's working directory","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8623046,"byte_end":8623099,"line_start":167,"line_end":167,"column_start":5,"column_end":58}},{"value":"/ * Inherit stdin/stdout/stderr for `spawn` or `status`, but create pipes for `output`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8623104,"byte_end":8623192,"line_start":168,"line_end":168,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8623197,"byte_end":8623200,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Builder methods are provided to change these defaults and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8623205,"byte_end":8623266,"line_start":170,"line_end":170,"column_start":5,"column_end":66}},{"value":"/ otherwise configure the process.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8623271,"byte_end":8623307,"line_start":171,"line_end":171,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8623312,"byte_end":8623315,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ If `program` is not an absolute path, the `PATH` will be searched in","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8623320,"byte_end":8623392,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/ an OS-defined way.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8623397,"byte_end":8623419,"line_start":174,"line_end":174,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8623424,"byte_end":8623427,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ The search path to be used may be controlled by setting the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8623432,"byte_end":8623495,"line_start":176,"line_end":176,"column_start":5,"column_end":68}},{"value":"/ `PATH` environment variable on the Command,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8623500,"byte_end":8623547,"line_start":177,"line_end":177,"column_start":5,"column_end":52}},{"value":"/ but this has some implementation limitations on Windows","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8623552,"byte_end":8623611,"line_start":178,"line_end":178,"column_start":5,"column_end":64}},{"value":"/ (see issue [rust-lang/rust#37519]).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8623616,"byte_end":8623655,"line_start":179,"line_end":179,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8623660,"byte_end":8623663,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8623668,"byte_end":8623682,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8623687,"byte_end":8623690,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8623695,"byte_end":8623711,"line_start":183,"line_end":183,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8623716,"byte_end":8623719,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8623724,"byte_end":8623737,"line_start":185,"line_end":185,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8623742,"byte_end":8623774,"line_start":186,"line_end":186,"column_start":5,"column_end":37}},{"value":"/ let command = Command::new(\"sh\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8623779,"byte_end":8623816,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8623821,"byte_end":8623828,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8623833,"byte_end":8623836,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ [rust-lang/rust#37519]: https://github.com/rust-lang/rust/issues/37519","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8623841,"byte_end":8623915,"line_start":190,"line_end":190,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":4285},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624777,"byte_end":8624780,"line_start":227,"line_end":227,"column_start":12,"column_end":15},"name":"arg","qualname":"<Command>::arg","value":"pub fn arg<S: AsRef<OsStr>>(&mut Self, S) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Adds an argument to pass to the program.","sig":null,"attributes":[{"value":"/ Adds an argument to pass to the program.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624029,"byte_end":8624073,"line_start":195,"line_end":195,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624078,"byte_end":8624081,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Only one argument can be passed per use. So instead of:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624086,"byte_end":8624145,"line_start":197,"line_end":197,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624150,"byte_end":8624153,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624158,"byte_end":8624171,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/ tokio::process::Command::new(\"sh\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624176,"byte_end":8624214,"line_start":200,"line_end":200,"column_start":5,"column_end":43}},{"value":"/   .arg(\"-C /path/to/repo\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624219,"byte_end":8624250,"line_start":201,"line_end":201,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624255,"byte_end":8624262,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624267,"byte_end":8624270,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ usage would be:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624275,"byte_end":8624294,"line_start":204,"line_end":204,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624299,"byte_end":8624302,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624307,"byte_end":8624320,"line_start":206,"line_end":206,"column_start":5,"column_end":18}},{"value":"/ tokio::process::Command::new(\"sh\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624325,"byte_end":8624363,"line_start":207,"line_end":207,"column_start":5,"column_end":43}},{"value":"/   .arg(\"-C\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624368,"byte_end":8624384,"line_start":208,"line_end":208,"column_start":5,"column_end":21}},{"value":"/   .arg(\"/path/to/repo\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624389,"byte_end":8624417,"line_start":209,"line_end":209,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624422,"byte_end":8624429,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624434,"byte_end":8624437,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ To pass multiple arguments see [`args`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624442,"byte_end":8624486,"line_start":212,"line_end":212,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624491,"byte_end":8624494,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ [`args`]: method@Self::args","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624499,"byte_end":8624530,"line_start":214,"line_end":214,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624535,"byte_end":8624538,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624543,"byte_end":8624557,"line_start":216,"line_end":216,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624562,"byte_end":8624565,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624570,"byte_end":8624586,"line_start":218,"line_end":218,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624591,"byte_end":8624594,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624599,"byte_end":8624612,"line_start":220,"line_end":220,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624617,"byte_end":8624649,"line_start":221,"line_end":221,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624654,"byte_end":8624657,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624662,"byte_end":8624698,"line_start":223,"line_end":223,"column_start":5,"column_end":41}},{"value":"/         .arg(\"-l\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624703,"byte_end":8624725,"line_start":224,"line_end":224,"column_start":5,"column_end":27}},{"value":"/         .arg(\"-a\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624730,"byte_end":8624753,"line_start":225,"line_end":225,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624758,"byte_end":8624765,"line_start":226,"line_end":226,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4287},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8625264,"byte_end":8625268,"line_start":248,"line_end":248,"column_start":12,"column_end":16},"name":"args","qualname":"<Command>::args","value":"pub fn args<I, S>(&mut Self, I) -> &mut Command where I: IntoIterator<Item =\nS>, S: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Adds multiple arguments to pass to the program.","sig":null,"attributes":[{"value":"/ Adds multiple arguments to pass to the program.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624886,"byte_end":8624937,"line_start":232,"line_end":232,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624942,"byte_end":8624945,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ To pass a single argument see [`arg`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624950,"byte_end":8624992,"line_start":234,"line_end":234,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8624997,"byte_end":8625000,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ [`arg`]: method@Self::arg","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8625005,"byte_end":8625034,"line_start":236,"line_end":236,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8625039,"byte_end":8625042,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8625047,"byte_end":8625061,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8625066,"byte_end":8625069,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8625074,"byte_end":8625090,"line_start":240,"line_end":240,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8625095,"byte_end":8625098,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8625103,"byte_end":8625116,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8625121,"byte_end":8625153,"line_start":243,"line_end":243,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8625158,"byte_end":8625161,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8625166,"byte_end":8625202,"line_start":245,"line_end":245,"column_start":5,"column_end":41}},{"value":"/         .args(&[\"-l\", \"-a\"]);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8625207,"byte_end":8625240,"line_start":246,"line_end":246,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8625245,"byte_end":8625252,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4290},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8625884,"byte_end":8625887,"line_start":272,"line_end":272,"column_start":12,"column_end":15},"name":"env","qualname":"<Command>::env","value":"pub fn env<K, V>(&mut Self, K, V) -> &mut Command where K: AsRef<OsStr>,\nV: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Inserts or updates an environment variable mapping.","sig":null,"attributes":[{"value":"/ Inserts or updates an environment variable mapping.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8625440,"byte_end":8625495,"line_start":257,"line_end":257,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8625500,"byte_end":8625503,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Note that environment variable names are case-insensitive (but case-preserving) on Windows,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8625508,"byte_end":8625603,"line_start":259,"line_end":259,"column_start":5,"column_end":100}},{"value":"/ and case-sensitive on all other platforms.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8625608,"byte_end":8625654,"line_start":260,"line_end":260,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8625659,"byte_end":8625662,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8625667,"byte_end":8625681,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8625686,"byte_end":8625689,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8625694,"byte_end":8625710,"line_start":264,"line_end":264,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8625715,"byte_end":8625718,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8625723,"byte_end":8625736,"line_start":266,"line_end":266,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8625741,"byte_end":8625773,"line_start":267,"line_end":267,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8625778,"byte_end":8625781,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8625786,"byte_end":8625822,"line_start":269,"line_end":269,"column_start":5,"column_end":41}},{"value":"/         .env(\"PATH\", \"/bin\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8625827,"byte_end":8625860,"line_start":270,"line_end":270,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8625865,"byte_end":8625872,"line_start":271,"line_end":271,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4293},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8626761,"byte_end":8626765,"line_start":304,"line_end":304,"column_start":12,"column_end":16},"name":"envs","qualname":"<Command>::envs","value":"pub fn envs<I, K, V>(&mut Self, I) -> &mut Command where I: IntoIterator<Item\n= (K, V)>, K: AsRef<OsStr>, V: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Adds or updates multiple environment variable mappings.","sig":null,"attributes":[{"value":"/ Adds or updates multiple environment variable mappings.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8626059,"byte_end":8626118,"line_start":281,"line_end":281,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8626123,"byte_end":8626126,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8626131,"byte_end":8626145,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8626150,"byte_end":8626153,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8626158,"byte_end":8626174,"line_start":285,"line_end":285,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8626179,"byte_end":8626182,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8626187,"byte_end":8626200,"line_start":287,"line_end":287,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8626205,"byte_end":8626237,"line_start":288,"line_end":288,"column_start":5,"column_end":37}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8626242,"byte_end":8626272,"line_start":289,"line_end":289,"column_start":5,"column_end":35}},{"value":"/ use std::env;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8626277,"byte_end":8626294,"line_start":290,"line_end":290,"column_start":5,"column_end":22}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8626299,"byte_end":8626333,"line_start":291,"line_end":291,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8626338,"byte_end":8626341,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let filtered_env : HashMap<String, String> =","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8626346,"byte_end":8626394,"line_start":293,"line_end":293,"column_start":5,"column_end":53}},{"value":"/     env::vars().filter(|&(ref k, _)|","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8626399,"byte_end":8626439,"line_start":294,"line_end":294,"column_start":5,"column_end":45}},{"value":"/         k == \"TERM\" || k == \"TZ\" || k == \"LANG\" || k == \"PATH\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8626444,"byte_end":8626510,"line_start":295,"line_end":295,"column_start":5,"column_end":71}},{"value":"/     ).collect();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8626515,"byte_end":8626535,"line_start":296,"line_end":296,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8626540,"byte_end":8626543,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"printenv\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8626548,"byte_end":8626590,"line_start":298,"line_end":298,"column_start":5,"column_end":47}},{"value":"/         .stdin(Stdio::null())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8626595,"byte_end":8626628,"line_start":299,"line_end":299,"column_start":5,"column_end":38}},{"value":"/         .stdout(Stdio::inherit())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8626633,"byte_end":8626670,"line_start":300,"line_end":300,"column_start":5,"column_end":42}},{"value":"/         .env_clear()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8626675,"byte_end":8626699,"line_start":301,"line_end":301,"column_start":5,"column_end":29}},{"value":"/         .envs(&filtered_env);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8626704,"byte_end":8626737,"line_start":302,"line_end":302,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8626742,"byte_end":8626749,"line_start":303,"line_end":303,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4297},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627243,"byte_end":8627253,"line_start":326,"line_end":326,"column_start":12,"column_end":22},"name":"env_remove","qualname":"<Command>::env_remove","value":"pub fn env_remove<K: AsRef<OsStr>>(&mut Self, K) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Removes an environment variable mapping.","sig":null,"attributes":[{"value":"/ Removes an environment variable mapping.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8626970,"byte_end":8627014,"line_start":314,"line_end":314,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627019,"byte_end":8627022,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627027,"byte_end":8627041,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627046,"byte_end":8627049,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627054,"byte_end":8627070,"line_start":318,"line_end":318,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627075,"byte_end":8627078,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627083,"byte_end":8627096,"line_start":320,"line_end":320,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627101,"byte_end":8627133,"line_start":321,"line_end":321,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627138,"byte_end":8627141,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627146,"byte_end":8627182,"line_start":323,"line_end":323,"column_start":5,"column_end":41}},{"value":"/         .env_remove(\"PATH\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627187,"byte_end":8627219,"line_start":324,"line_end":324,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627224,"byte_end":8627231,"line_start":325,"line_end":325,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4299},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627648,"byte_end":8627657,"line_start":343,"line_end":343,"column_start":12,"column_end":21},"name":"env_clear","qualname":"<Command>::env_clear","value":"pub fn env_clear(&mut Self) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Clears the entire environment map for the child process.","sig":null,"attributes":[{"value":"/ Clears the entire environment map for the child process.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627366,"byte_end":8627426,"line_start":331,"line_end":331,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627431,"byte_end":8627434,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627439,"byte_end":8627453,"line_start":333,"line_end":333,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627458,"byte_end":8627461,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627466,"byte_end":8627482,"line_start":335,"line_end":335,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627487,"byte_end":8627490,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627495,"byte_end":8627508,"line_start":337,"line_end":337,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627513,"byte_end":8627545,"line_start":338,"line_end":338,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627550,"byte_end":8627553,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627558,"byte_end":8627594,"line_start":340,"line_end":340,"column_start":5,"column_end":41}},{"value":"/         .env_clear();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627599,"byte_end":8627624,"line_start":341,"line_end":341,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627629,"byte_end":8627636,"line_start":342,"line_end":342,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4300},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8628502,"byte_end":8628513,"line_start":370,"line_end":370,"column_start":12,"column_end":23},"name":"current_dir","qualname":"<Command>::current_dir","value":"pub fn current_dir<P: AsRef<Path>>(&mut Self, P) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets the working directory for the child process.","sig":null,"attributes":[{"value":"/ Sets the working directory for the child process.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627741,"byte_end":8627794,"line_start":348,"line_end":348,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627799,"byte_end":8627802,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627807,"byte_end":8627839,"line_start":350,"line_end":350,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627844,"byte_end":8627847,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ If the program path is relative (e.g., `\"./script.sh\"`), it's ambiguous","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627852,"byte_end":8627927,"line_start":352,"line_end":352,"column_start":5,"column_end":80}},{"value":"/ whether it should be interpreted relative to the parent's working","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8627932,"byte_end":8628001,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ directory or relative to `current_dir`. The behavior in this case is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8628006,"byte_end":8628078,"line_start":354,"line_end":354,"column_start":5,"column_end":77}},{"value":"/ platform specific and unstable, and it's recommended to use","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8628083,"byte_end":8628146,"line_start":355,"line_end":355,"column_start":5,"column_end":68}},{"value":"/ [`canonicalize`] to get an absolute program path instead.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8628151,"byte_end":8628212,"line_start":356,"line_end":356,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8628217,"byte_end":8628220,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ [`canonicalize`]: crate::fs::canonicalize()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8628225,"byte_end":8628272,"line_start":358,"line_end":358,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8628277,"byte_end":8628280,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8628285,"byte_end":8628299,"line_start":360,"line_end":360,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8628304,"byte_end":8628307,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8628312,"byte_end":8628328,"line_start":362,"line_end":362,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8628333,"byte_end":8628336,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8628341,"byte_end":8628354,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8628359,"byte_end":8628391,"line_start":365,"line_end":365,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8628396,"byte_end":8628399,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8628404,"byte_end":8628440,"line_start":367,"line_end":367,"column_start":5,"column_end":41}},{"value":"/         .current_dir(\"/bin\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8628445,"byte_end":8628478,"line_start":368,"line_end":368,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8628483,"byte_end":8628490,"line_start":369,"line_end":369,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4302},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8629208,"byte_end":8629213,"line_start":394,"line_end":394,"column_start":12,"column_end":17},"name":"stdin","qualname":"<Command>::stdin","value":"pub fn stdin<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard input (stdin) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard input (stdin) handle.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8628626,"byte_end":8628703,"line_start":375,"line_end":375,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8628708,"byte_end":8628711,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8628716,"byte_end":8628783,"line_start":377,"line_end":377,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8628788,"byte_end":8628838,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8628843,"byte_end":8628846,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8628851,"byte_end":8628896,"line_start":380,"line_end":380,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8628901,"byte_end":8628942,"line_start":381,"line_end":381,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8628947,"byte_end":8628950,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8628955,"byte_end":8628969,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8628974,"byte_end":8628977,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8628982,"byte_end":8628998,"line_start":385,"line_end":385,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8629003,"byte_end":8629006,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8629011,"byte_end":8629024,"line_start":387,"line_end":387,"column_start":5,"column_end":18}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8629029,"byte_end":8629059,"line_start":388,"line_end":388,"column_start":5,"column_end":35}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8629064,"byte_end":8629096,"line_start":389,"line_end":389,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8629101,"byte_end":8629104,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8629109,"byte_end":8629145,"line_start":391,"line_end":391,"column_start":5,"column_end":41}},{"value":"/         .stdin(Stdio::null());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8629150,"byte_end":8629184,"line_start":392,"line_end":392,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8629189,"byte_end":8629196,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4304},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8629904,"byte_end":8629910,"line_start":418,"line_end":418,"column_start":12,"column_end":18},"name":"stdout","qualname":"<Command>::stdout","value":"pub fn stdout<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard output (stdout) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard output (stdout) handle.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8629320,"byte_end":8629399,"line_start":399,"line_end":399,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8629404,"byte_end":8629407,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8629412,"byte_end":8629479,"line_start":401,"line_end":401,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8629484,"byte_end":8629534,"line_start":402,"line_end":402,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8629539,"byte_end":8629542,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8629547,"byte_end":8629592,"line_start":404,"line_end":404,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8629597,"byte_end":8629638,"line_start":405,"line_end":405,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8629643,"byte_end":8629646,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8629651,"byte_end":8629665,"line_start":407,"line_end":407,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8629670,"byte_end":8629673,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8629678,"byte_end":8629694,"line_start":409,"line_end":409,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8629699,"byte_end":8629702,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8629707,"byte_end":8629720,"line_start":411,"line_end":411,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8629725,"byte_end":8629758,"line_start":412,"line_end":412,"column_start":5,"column_end":38}},{"value":"/ use std::process::Stdio;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8629763,"byte_end":8629791,"line_start":413,"line_end":413,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8629796,"byte_end":8629799,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8629804,"byte_end":8629840,"line_start":415,"line_end":415,"column_start":5,"column_end":41}},{"value":"/         .stdout(Stdio::null());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8629845,"byte_end":8629880,"line_start":416,"line_end":416,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8629885,"byte_end":8629892,"line_start":417,"line_end":417,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4306},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8630603,"byte_end":8630609,"line_start":442,"line_end":442,"column_start":12,"column_end":18},"name":"stderr","qualname":"<Command>::stderr","value":"pub fn stderr<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard error (stderr) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard error (stderr) handle.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8630018,"byte_end":8630096,"line_start":423,"line_end":423,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8630101,"byte_end":8630104,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8630109,"byte_end":8630176,"line_start":425,"line_end":425,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8630181,"byte_end":8630231,"line_start":426,"line_end":426,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8630236,"byte_end":8630239,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8630244,"byte_end":8630289,"line_start":428,"line_end":428,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8630294,"byte_end":8630335,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8630340,"byte_end":8630343,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8630348,"byte_end":8630362,"line_start":431,"line_end":431,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8630367,"byte_end":8630370,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8630375,"byte_end":8630391,"line_start":433,"line_end":433,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8630396,"byte_end":8630399,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8630404,"byte_end":8630417,"line_start":435,"line_end":435,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8630422,"byte_end":8630455,"line_start":436,"line_end":436,"column_start":5,"column_end":38}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8630460,"byte_end":8630490,"line_start":437,"line_end":437,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8630495,"byte_end":8630498,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8630503,"byte_end":8630539,"line_start":439,"line_end":439,"column_start":5,"column_end":41}},{"value":"/         .stderr(Stdio::null());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8630544,"byte_end":8630579,"line_start":440,"line_end":440,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8630584,"byte_end":8630591,"line_start":441,"line_end":441,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4308},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8631062,"byte_end":8631074,"line_start":453,"line_end":453,"column_start":12,"column_end":24},"name":"kill_on_drop","qualname":"<Command>::kill_on_drop","value":"pub fn kill_on_drop(&mut Self, bool) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Controls whether a `kill` operation should be invoked on a spawned child\n process when its corresponding `Child` handle is dropped.","sig":null,"attributes":[{"value":"/ Controls whether a `kill` operation should be invoked on a spawned child","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8630717,"byte_end":8630793,"line_start":447,"line_end":447,"column_start":5,"column_end":81}},{"value":"/ process when its corresponding `Child` handle is dropped.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8630798,"byte_end":8630859,"line_start":448,"line_end":448,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8630864,"byte_end":8630867,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ By default, this value is assumed to be `false`, meaning the next spawned","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8630872,"byte_end":8630949,"line_start":450,"line_end":450,"column_start":5,"column_end":82}},{"value":"/ process will not be killed on drop, similar to the behavior of the standard","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8630954,"byte_end":8631033,"line_start":451,"line_end":451,"column_start":5,"column_end":84}},{"value":"/ library.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8631038,"byte_end":8631050,"line_start":452,"line_end":452,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4309},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8631791,"byte_end":8631794,"line_start":473,"line_end":473,"column_start":12,"column_end":15},"name":"uid","qualname":"<Command>::uid","value":"pub fn uid(&mut Self, u32) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets the child process's user ID. This translates to a\n `setuid` call in the child process. Failure in the `setuid`\n call will cause the spawn to fail.\n","sig":null,"attributes":[{"value":"/ Sets the child process's user ID. This translates to a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8631593,"byte_end":8631651,"line_start":469,"line_end":469,"column_start":5,"column_end":63}},{"value":"/ `setuid` call in the child process. Failure in the `setuid`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8631656,"byte_end":8631719,"line_start":470,"line_end":470,"column_start":5,"column_end":68}},{"value":"/ call will cause the spawn to fail.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8631724,"byte_end":8631762,"line_start":471,"line_end":471,"column_start":5,"column_end":43}},{"value":"cfg(unix)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8631767,"byte_end":8631779,"line_start":472,"line_end":472,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4310},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8632032,"byte_end":8632035,"line_start":481,"line_end":481,"column_start":12,"column_end":15},"name":"gid","qualname":"<Command>::gid","value":"pub fn gid(&mut Self, u32) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Similar to `uid` but sets the group ID of the child process. This has\n the same semantics as the `uid` field.\n","sig":null,"attributes":[{"value":"/ Similar to `uid` but sets the group ID of the child process. This has","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8631883,"byte_end":8631956,"line_start":478,"line_end":478,"column_start":5,"column_end":78}},{"value":"/ the same semantics as the `uid` field.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8631961,"byte_end":8632003,"line_start":479,"line_end":479,"column_start":5,"column_end":47}},{"value":"cfg(unix)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8632008,"byte_end":8632020,"line_start":480,"line_end":480,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4311},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8633689,"byte_end":8633697,"line_start":516,"line_end":516,"column_start":19,"column_end":27},"name":"pre_exec","qualname":"<Command>::pre_exec","value":"pub unsafe fn pre_exec<F>(&mut Self, F) -> &mut Command where F: FnMut() ->\nio::Result<()> + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Schedules a closure to be run just before the `exec` function is\n invoked.","sig":null,"attributes":[{"value":"/ Schedules a closure to be run just before the `exec` function is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8632124,"byte_end":8632192,"line_start":486,"line_end":486,"column_start":5,"column_end":73}},{"value":"/ invoked.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8632197,"byte_end":8632209,"line_start":487,"line_end":487,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8632214,"byte_end":8632217,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ The closure is allowed to return an I/O error whose OS error code will","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8632222,"byte_end":8632296,"line_start":489,"line_end":489,"column_start":5,"column_end":79}},{"value":"/ be communicated back to the parent and returned as an error from when","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8632301,"byte_end":8632374,"line_start":490,"line_end":490,"column_start":5,"column_end":78}},{"value":"/ the spawn was requested.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8632379,"byte_end":8632407,"line_start":491,"line_end":491,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8632412,"byte_end":8632415,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Multiple closures can be registered and they will be called in order of","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8632420,"byte_end":8632495,"line_start":493,"line_end":493,"column_start":5,"column_end":80}},{"value":"/ their registration. If a closure returns `Err` then no further closures","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8632500,"byte_end":8632575,"line_start":494,"line_end":494,"column_start":5,"column_end":80}},{"value":"/ will be called and the spawn operation will immediately return with a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8632580,"byte_end":8632653,"line_start":495,"line_end":495,"column_start":5,"column_end":78}},{"value":"/ failure.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8632658,"byte_end":8632670,"line_start":496,"line_end":496,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8632675,"byte_end":8632678,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8632683,"byte_end":8632695,"line_start":498,"line_end":498,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8632700,"byte_end":8632703,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ This closure will be run in the context of the child process after a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8632708,"byte_end":8632780,"line_start":500,"line_end":500,"column_start":5,"column_end":77}},{"value":"/ `fork`. This primarily means that any modifications made to memory on","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8632785,"byte_end":8632858,"line_start":501,"line_end":501,"column_start":5,"column_end":78}},{"value":"/ behalf of this closure will **not** be visible to the parent process.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8632863,"byte_end":8632936,"line_start":502,"line_end":502,"column_start":5,"column_end":78}},{"value":"/ This is often a very constrained environment where normal operations","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8632941,"byte_end":8633013,"line_start":503,"line_end":503,"column_start":5,"column_end":77}},{"value":"/ like `malloc` or acquiring a mutex are not guaranteed to work (due to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8633018,"byte_end":8633091,"line_start":504,"line_end":504,"column_start":5,"column_end":78}},{"value":"/ other threads perhaps still running when the `fork` was run).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8633096,"byte_end":8633161,"line_start":505,"line_end":505,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8633166,"byte_end":8633169,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ This also means that all resources such as file descriptors and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8633174,"byte_end":8633241,"line_start":507,"line_end":507,"column_start":5,"column_end":72}},{"value":"/ memory-mapped regions got duplicated. It is your responsibility to make","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8633246,"byte_end":8633321,"line_start":508,"line_end":508,"column_start":5,"column_end":80}},{"value":"/ sure that the closure does not violate library invariants by making","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8633326,"byte_end":8633397,"line_start":509,"line_end":509,"column_start":5,"column_end":76}},{"value":"/ invalid use of these duplicates.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8633402,"byte_end":8633438,"line_start":510,"line_end":510,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8633443,"byte_end":8633446,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ When this closure is run, aspects such as the stdio file descriptors and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8633451,"byte_end":8633527,"line_start":512,"line_end":512,"column_start":5,"column_end":81}},{"value":"/ working directory have successfully been changed, so output to these","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8633532,"byte_end":8633604,"line_start":513,"line_end":513,"column_start":5,"column_end":77}},{"value":"/ locations may not appear where intended.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8633609,"byte_end":8633653,"line_start":514,"line_end":514,"column_start":5,"column_end":49}},{"value":"cfg(unix)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8633658,"byte_end":8633670,"line_start":515,"line_end":515,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4313},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8635336,"byte_end":8635341,"line_start":562,"line_end":562,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Command>::spawn","value":"pub fn spawn(&mut Self) -> io::Result<Child>","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, returning a handle to it.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, returning a handle to it.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8633866,"byte_end":8633936,"line_start":524,"line_end":524,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8633941,"byte_end":8633944,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8633949,"byte_end":8634020,"line_start":526,"line_end":526,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8634025,"byte_end":8634028,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ This method will spawn the child process synchronously and return a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8634033,"byte_end":8634104,"line_start":528,"line_end":528,"column_start":5,"column_end":76}},{"value":"/ handle to a future-aware child process. The `Child` returned implements","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8634109,"byte_end":8634184,"line_start":529,"line_end":529,"column_start":5,"column_end":80}},{"value":"/ `Future` itself to acquire the `ExitStatus` of the child, and otherwise","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8634189,"byte_end":8634264,"line_start":530,"line_end":530,"column_start":5,"column_end":80}},{"value":"/ the `Child` has methods to acquire handles to the stdin, stdout, and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8634269,"byte_end":8634341,"line_start":531,"line_end":531,"column_start":5,"column_end":77}},{"value":"/ stderr streams.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8634346,"byte_end":8634365,"line_start":532,"line_end":532,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8634370,"byte_end":8634373,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8634378,"byte_end":8634449,"line_start":534,"line_end":534,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8634454,"byte_end":8634469,"line_start":535,"line_end":535,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8634474,"byte_end":8634477,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8634482,"byte_end":8634495,"line_start":537,"line_end":537,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8634500,"byte_end":8634503,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8634508,"byte_end":8634583,"line_start":539,"line_end":539,"column_start":5,"column_end":80}},{"value":"/ paradigm of dropping-implies-cancellation, the spawned process will, by","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8634588,"byte_end":8634663,"line_start":540,"line_end":540,"column_start":5,"column_end":80}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8634668,"byte_end":8634748,"line_start":541,"line_end":541,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8634753,"byte_end":8634756,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ The `Command::kill_on_drop` method can be used to modify this behavior","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8634761,"byte_end":8634835,"line_start":543,"line_end":543,"column_start":5,"column_end":79}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8634840,"byte_end":8634914,"line_start":544,"line_end":544,"column_start":5,"column_end":79}},{"value":"/ has exited.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8634919,"byte_end":8634934,"line_start":545,"line_end":545,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8634939,"byte_end":8634942,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8634947,"byte_end":8634961,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8634966,"byte_end":8634969,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8634974,"byte_end":8634990,"line_start":549,"line_end":549,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8634995,"byte_end":8634998,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8635003,"byte_end":8635016,"line_start":551,"line_end":551,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8635021,"byte_end":8635053,"line_start":552,"line_end":552,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8635058,"byte_end":8635061,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() -> std::process::ExitStatus {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8635066,"byte_end":8635117,"line_start":554,"line_end":554,"column_start":5,"column_end":56}},{"value":"/     Command::new(\"ls\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8635122,"byte_end":8635148,"line_start":555,"line_end":555,"column_start":5,"column_end":31}},{"value":"/         .spawn()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8635153,"byte_end":8635173,"line_start":556,"line_end":556,"column_start":5,"column_end":25}},{"value":"/         .expect(\"ls command failed to start\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8635178,"byte_end":8635227,"line_start":557,"line_end":557,"column_start":5,"column_end":54}},{"value":"/         .await","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8635232,"byte_end":8635250,"line_start":558,"line_end":558,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8635255,"byte_end":8635302,"line_start":559,"line_end":559,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8635307,"byte_end":8635312,"line_start":560,"line_end":560,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8635317,"byte_end":8635324,"line_start":561,"line_end":561,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4318},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8636899,"byte_end":8636905,"line_start":605,"line_end":605,"column_start":12,"column_end":18},"name":"status","qualname":"<Command>::status","value":"pub fn status(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, waiting for it to finish and\n collecting its exit status.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, waiting for it to finish and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8635838,"byte_end":8635911,"line_start":574,"line_end":574,"column_start":5,"column_end":78}},{"value":"/ collecting its exit status.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8635916,"byte_end":8635947,"line_start":575,"line_end":575,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8635952,"byte_end":8635955,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8635960,"byte_end":8636031,"line_start":577,"line_end":577,"column_start":5,"column_end":76}},{"value":"/ If any input/output handles are set to a pipe then they will be immediately","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8636036,"byte_end":8636115,"line_start":578,"line_end":578,"column_start":5,"column_end":84}},{"value":"/ closed after the child is spawned.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8636120,"byte_end":8636158,"line_start":579,"line_end":579,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8636163,"byte_end":8636166,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8636171,"byte_end":8636242,"line_start":581,"line_end":581,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8636247,"byte_end":8636262,"line_start":582,"line_end":582,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8636267,"byte_end":8636270,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ If this future is dropped before the future resolves, then","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8636275,"byte_end":8636337,"line_start":584,"line_end":584,"column_start":5,"column_end":67}},{"value":"/ the child will be killed, if it was spawned.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8636342,"byte_end":8636390,"line_start":585,"line_end":585,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8636395,"byte_end":8636398,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8636403,"byte_end":8636415,"line_start":587,"line_end":587,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8636420,"byte_end":8636423,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ This future will return an error if the child process cannot be spawned","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8636428,"byte_end":8636503,"line_start":589,"line_end":589,"column_start":5,"column_end":80}},{"value":"/ or if there is an error while awaiting its status.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8636508,"byte_end":8636562,"line_start":590,"line_end":590,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8636567,"byte_end":8636570,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8636575,"byte_end":8636589,"line_start":592,"line_end":592,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8636594,"byte_end":8636597,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8636602,"byte_end":8636618,"line_start":594,"line_end":594,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8636623,"byte_end":8636626,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8636631,"byte_end":8636644,"line_start":596,"line_end":596,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8636649,"byte_end":8636681,"line_start":597,"line_end":597,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8636686,"byte_end":8636689,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() -> std::process::ExitStatus {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8636694,"byte_end":8636745,"line_start":599,"line_end":599,"column_start":5,"column_end":56}},{"value":"/     Command::new(\"ls\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8636750,"byte_end":8636776,"line_start":600,"line_end":600,"column_start":5,"column_end":31}},{"value":"/         .status()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8636781,"byte_end":8636802,"line_start":601,"line_end":601,"column_start":5,"column_end":26}},{"value":"/         .await","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8636807,"byte_end":8636825,"line_start":602,"line_end":602,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8636830,"byte_end":8636877,"line_start":603,"line_end":603,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8636882,"byte_end":8636887,"line_start":604,"line_end":604,"column_start":5,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":4321},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8638794,"byte_end":8638800,"line_start":657,"line_end":657,"column_start":12,"column_end":18},"name":"output","qualname":"<Command>::output","value":"pub fn output(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, waiting for it to finish and\n collecting all of its output.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, waiting for it to finish and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8637380,"byte_end":8637453,"line_start":622,"line_end":622,"column_start":5,"column_end":78}},{"value":"/ collecting all of its output.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8637458,"byte_end":8637491,"line_start":623,"line_end":623,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8637496,"byte_end":8637499,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ > **Note**: this method, unlike the standard library, will","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8637504,"byte_end":8637566,"line_start":625,"line_end":625,"column_start":5,"column_end":67}},{"value":"/ > unconditionally configure the stdout/stderr handles to be pipes, even","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8637571,"byte_end":8637646,"line_start":626,"line_end":626,"column_start":5,"column_end":80}},{"value":"/ > if they have been previously configured. If this is not desired then","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8637651,"byte_end":8637725,"line_start":627,"line_end":627,"column_start":5,"column_end":79}},{"value":"/ > the `spawn` method should be used in combination with the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8637730,"byte_end":8637793,"line_start":628,"line_end":628,"column_start":5,"column_end":68}},{"value":"/ > `wait_with_output` method on child.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8637798,"byte_end":8637839,"line_start":629,"line_end":629,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8637844,"byte_end":8637847,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ This method will return a future representing the collection of the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8637852,"byte_end":8637923,"line_start":631,"line_end":631,"column_start":5,"column_end":76}},{"value":"/ child process's stdout/stderr. It will resolve to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8637928,"byte_end":8637981,"line_start":632,"line_end":632,"column_start":5,"column_end":58}},{"value":"/ the `Output` type in the standard library, containing `stdout` and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8637986,"byte_end":8638056,"line_start":633,"line_end":633,"column_start":5,"column_end":75}},{"value":"/ `stderr` as `Vec<u8>` along with an `ExitStatus` representing how the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8638061,"byte_end":8638134,"line_start":634,"line_end":634,"column_start":5,"column_end":78}},{"value":"/ process exited.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8638139,"byte_end":8638158,"line_start":635,"line_end":635,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8638163,"byte_end":8638166,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8638171,"byte_end":8638242,"line_start":637,"line_end":637,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8638247,"byte_end":8638262,"line_start":638,"line_end":638,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8638267,"byte_end":8638270,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ If this future is dropped before the future resolves, then","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8638275,"byte_end":8638337,"line_start":640,"line_end":640,"column_start":5,"column_end":67}},{"value":"/ the child will be killed, if it was spawned.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8638342,"byte_end":8638390,"line_start":641,"line_end":641,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8638395,"byte_end":8638398,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8638403,"byte_end":8638417,"line_start":643,"line_end":643,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8638422,"byte_end":8638425,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8638430,"byte_end":8638446,"line_start":645,"line_end":645,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8638451,"byte_end":8638454,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8638459,"byte_end":8638472,"line_start":647,"line_end":647,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8638477,"byte_end":8638509,"line_start":648,"line_end":648,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8638514,"byte_end":8638517,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8638522,"byte_end":8638545,"line_start":650,"line_end":650,"column_start":5,"column_end":28}},{"value":"/     let output: std::process::Output = Command::new(\"ls\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8638550,"byte_end":8638611,"line_start":651,"line_end":651,"column_start":5,"column_end":66}},{"value":"/         .output()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8638616,"byte_end":8638637,"line_start":652,"line_end":652,"column_start":5,"column_end":26}},{"value":"/         .await","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8638642,"byte_end":8638660,"line_start":653,"line_end":653,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8638665,"byte_end":8638713,"line_start":654,"line_end":654,"column_start":5,"column_end":53}},{"value":"/     println!(\"stderr of ls: {:?}\", output.stderr);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8638718,"byte_end":8638772,"line_start":655,"line_end":655,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8638777,"byte_end":8638782,"line_start":656,"line_end":656,"column_start":5,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":4426},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8641149,"byte_end":8641154,"line_start":744,"line_end":744,"column_start":12,"column_end":17},"name":"Child","qualname":"::process::Child","value":"Child { stdin, stdout, stderr }","parent":null,"children":[{"krate":0,"index":4427},{"krate":0,"index":4428},{"krate":0,"index":4429},{"krate":0,"index":4430}],"decl_id":null,"docs":" Representation of a child process spawned onto an event loop.","sig":null,"attributes":[{"value":"/ Representation of a child process spawned onto an event loop.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8640371,"byte_end":8640436,"line_start":728,"line_end":728,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8640437,"byte_end":8640440,"line_start":729,"line_end":729,"column_start":1,"column_end":4}},{"value":"/ This type is also a future which will yield the `ExitStatus` of the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8640441,"byte_end":8640512,"line_start":730,"line_end":730,"column_start":1,"column_end":72}},{"value":"/ underlying child process. A `Child` here also provides access to information","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8640513,"byte_end":8640593,"line_start":731,"line_end":731,"column_start":1,"column_end":81}},{"value":"/ like the OS-assigned identifier and the stdio streams.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8640594,"byte_end":8640652,"line_start":732,"line_end":732,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8640653,"byte_end":8640656,"line_start":733,"line_end":733,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8640657,"byte_end":8640670,"line_start":734,"line_end":734,"column_start":1,"column_end":14}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8640671,"byte_end":8640746,"line_start":735,"line_end":735,"column_start":1,"column_end":76}},{"value":"/ paradigm of dropping-implies-cancellation, a spawned process will, by","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8640747,"byte_end":8640820,"line_start":736,"line_end":736,"column_start":1,"column_end":74}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8640821,"byte_end":8640901,"line_start":737,"line_end":737,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8640902,"byte_end":8640905,"line_start":738,"line_end":738,"column_start":1,"column_end":4}},{"value":"/ The `Command::kill_on_drop` method can be used to modify this behavior","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8640906,"byte_end":8640980,"line_start":739,"line_end":739,"column_start":1,"column_end":75}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8640981,"byte_end":8641055,"line_start":740,"line_end":740,"column_start":1,"column_end":75}},{"value":"/ has exited.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8641056,"byte_end":8641071,"line_start":741,"line_end":741,"column_start":1,"column_end":16}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8641072,"byte_end":8641120,"line_start":742,"line_end":742,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":4428},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8641308,"byte_end":8641313,"line_start":749,"line_end":749,"column_start":9,"column_end":14},"name":"stdin","qualname":"::process::Child::stdin","value":"std::option::Option<process::ChildStdin>","parent":{"krate":0,"index":4426},"children":[],"decl_id":null,"docs":" The handle for writing to the child's standard input (stdin), if it has\n been captured.\n","sig":null,"attributes":[{"value":"/ The handle for writing to the child's standard input (stdin), if it has","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8641201,"byte_end":8641276,"line_start":747,"line_end":747,"column_start":5,"column_end":80}},{"value":"/ been captured.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8641281,"byte_end":8641299,"line_start":748,"line_end":748,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":4429},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8641451,"byte_end":8641457,"line_start":753,"line_end":753,"column_start":9,"column_end":15},"name":"stdout","qualname":"::process::Child::stdout","value":"std::option::Option<process::ChildStdout>","parent":{"krate":0,"index":4426},"children":[],"decl_id":null,"docs":" The handle for reading from the child's standard output (stdout), if it\n has been captured.\n","sig":null,"attributes":[{"value":"/ The handle for reading from the child's standard output (stdout), if it","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8641340,"byte_end":8641415,"line_start":751,"line_end":751,"column_start":5,"column_end":80}},{"value":"/ has been captured.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8641420,"byte_end":8641442,"line_start":752,"line_end":752,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":4430},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8641595,"byte_end":8641601,"line_start":757,"line_end":757,"column_start":9,"column_end":15},"name":"stderr","qualname":"::process::Child::stderr","value":"std::option::Option<process::ChildStderr>","parent":{"krate":0,"index":4426},"children":[],"decl_id":null,"docs":" The handle for reading from the child's standard error (stderr), if it\n has been captured.\n","sig":null,"attributes":[{"value":"/ The handle for reading from the child's standard error (stderr), if it","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8641485,"byte_end":8641559,"line_start":755,"line_end":755,"column_start":5,"column_end":79}},{"value":"/ has been captured.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8641564,"byte_end":8641586,"line_start":756,"line_end":756,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4339},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8641730,"byte_end":8641732,"line_start":762,"line_end":762,"column_start":12,"column_end":14},"name":"id","qualname":"<Child>::id","value":"pub fn id(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the OS-assigned process identifier associated with this child.\n","sig":null,"attributes":[{"value":"/ Returns the OS-assigned process identifier associated with this child.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8641644,"byte_end":8641718,"line_start":761,"line_end":761,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":4340},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8641906,"byte_end":8641910,"line_start":769,"line_end":769,"column_start":12,"column_end":16},"name":"kill","qualname":"<Child>::kill","value":"pub fn kill(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Forces the child to exit.","sig":null,"attributes":[{"value":"/ Forces the child to exit.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8641790,"byte_end":8641819,"line_start":766,"line_end":766,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8641824,"byte_end":8641827,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to sending a SIGKILL on unix platforms.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8641832,"byte_end":8641894,"line_start":768,"line_end":768,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":4341},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8642066,"byte_end":8642071,"line_start":775,"line_end":775,"column_start":12,"column_end":17},"name":"stdin","qualname":"<Child>::stdin","value":"pub fn stdin(&mut Self) -> &mut Option<ChildStdin>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"please use `child.stdin` instead\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8641998,"byte_end":8642054,"line_start":774,"line_end":774,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4342},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8642235,"byte_end":8642241,"line_start":781,"line_end":781,"column_start":12,"column_end":18},"name":"stdout","qualname":"<Child>::stdout","value":"pub fn stdout(&mut Self) -> &mut Option<ChildStdout>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"please use `child.stdout` instead\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8642166,"byte_end":8642223,"line_start":780,"line_end":780,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4343},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8642407,"byte_end":8642413,"line_start":787,"line_end":787,"column_start":12,"column_end":18},"name":"stderr","qualname":"<Child>::stderr","value":"pub fn stderr(&mut Self) -> &mut Option<ChildStderr>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"please use `child.stderr` instead\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8642338,"byte_end":8642395,"line_start":786,"line_end":786,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4344},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8643421,"byte_end":8643437,"line_start":807,"line_end":807,"column_start":18,"column_end":34},"name":"wait_with_output","qualname":"<Child>::wait_with_output","value":"pub async fn wait_with_output(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that will resolve to an `Output`, containing the exit\n status, stdout, and stderr of the child process.","sig":null,"attributes":[{"value":"/ Returns a future that will resolve to an `Output`, containing the exit","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8642491,"byte_end":8642565,"line_start":791,"line_end":791,"column_start":5,"column_end":79}},{"value":"/ status, stdout, and stderr of the child process.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8642570,"byte_end":8642622,"line_start":792,"line_end":792,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8642627,"byte_end":8642630,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ The returned future will simultaneously waits for the child to exit and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8642635,"byte_end":8642710,"line_start":794,"line_end":794,"column_start":5,"column_end":80}},{"value":"/ collect all remaining output on the stdout/stderr handles, returning an","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8642715,"byte_end":8642790,"line_start":795,"line_end":795,"column_start":5,"column_end":80}},{"value":"/ `Output` instance.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8642795,"byte_end":8642817,"line_start":796,"line_end":796,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8642822,"byte_end":8642825,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ The stdin handle to the child process, if any, will be closed before","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8642830,"byte_end":8642902,"line_start":798,"line_end":798,"column_start":5,"column_end":77}},{"value":"/ waiting. This helps avoid deadlock: it ensures that the child does not","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8642907,"byte_end":8642981,"line_start":799,"line_end":799,"column_start":5,"column_end":79}},{"value":"/ block waiting for input from the parent, while the parent waits for the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8642986,"byte_end":8643061,"line_start":800,"line_end":800,"column_start":5,"column_end":80}},{"value":"/ child to exit.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8643066,"byte_end":8643084,"line_start":801,"line_end":801,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8643089,"byte_end":8643092,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent. In","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8643097,"byte_end":8643171,"line_start":803,"line_end":803,"column_start":5,"column_end":79}},{"value":"/ order to capture the output into this `Output` it is necessary to create","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8643176,"byte_end":8643252,"line_start":804,"line_end":804,"column_start":5,"column_end":81}},{"value":"/ new pipes between parent and child. Use `stdout(Stdio::piped())` or","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8643257,"byte_end":8643328,"line_start":805,"line_end":805,"column_start":5,"column_end":76}},{"value":"/ `stderr(Stdio::piped())`, respectively, when creating a `Command`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8643333,"byte_end":8643403,"line_start":806,"line_end":806,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":4433},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8644551,"byte_end":8644561,"line_start":845,"line_end":845,"column_start":12,"column_end":22},"name":"ChildStdin","qualname":"::process::ChildStdin","value":"ChildStdin {  }","parent":null,"children":[{"krate":0,"index":4434}],"decl_id":null,"docs":" The standard input stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard input stream for spawned children.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8644337,"byte_end":8644388,"line_start":840,"line_end":840,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8644389,"byte_end":8644392,"line_start":841,"line_end":841,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncWrite` trait to pass data to the stdin handle of","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8644393,"byte_end":8644476,"line_start":842,"line_end":842,"column_start":1,"column_end":84}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8644477,"byte_end":8644522,"line_start":843,"line_end":843,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4437},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8644802,"byte_end":8644813,"line_start":854,"line_end":854,"column_start":12,"column_end":23},"name":"ChildStdout","qualname":"::process::ChildStdout","value":"ChildStdout {  }","parent":null,"children":[{"krate":0,"index":4438}],"decl_id":null,"docs":" The standard output stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard output stream for spawned children.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8644595,"byte_end":8644647,"line_start":849,"line_end":849,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8644648,"byte_end":8644651,"line_start":850,"line_end":850,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncRead` trait to read data from the stdout","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8644652,"byte_end":8644727,"line_start":851,"line_end":851,"column_start":1,"column_end":76}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8644728,"byte_end":8644773,"line_start":852,"line_end":852,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4441},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8645054,"byte_end":8645065,"line_start":863,"line_end":863,"column_start":12,"column_end":23},"name":"ChildStderr","qualname":"::process::ChildStderr","value":"ChildStderr {  }","parent":null,"children":[{"krate":0,"index":4442}],"decl_id":null,"docs":" The standard error stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard error stream for spawned children.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8644848,"byte_end":8644899,"line_start":858,"line_end":858,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8644900,"byte_end":8644903,"line_start":859,"line_end":859,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncRead` trait to read data from the stderr","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8644904,"byte_end":8644979,"line_start":860,"line_end":860,"column_start":1,"column_end":76}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8644980,"byte_end":8645025,"line_start":861,"line_end":861,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":562},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":4455},{"krate":0,"index":4546},{"krate":0,"index":4547},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":5180},{"krate":0,"index":5181},{"krate":0,"index":5182},{"krate":0,"index":580},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":5285},{"krate":0,"index":5335},{"krate":0,"index":693},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":5366},{"krate":0,"index":5467},{"krate":0,"index":5665},{"krate":0,"index":5694},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":5695},{"krate":0,"index":5699},{"krate":0,"index":5701},{"krate":0,"index":5711},{"krate":0,"index":732},{"krate":0,"index":733}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"/ The Tokio runtime.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105678,"byte_end":105700,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105701,"byte_end":105704,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Unlike other Rust programs, asynchronous applications require","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105705,"byte_end":105770,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/ runtime support. In particular, the following runtime services are","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105771,"byte_end":105841,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ necessary:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105842,"byte_end":105856,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105857,"byte_end":105860,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ * An **I/O event loop**, called the driver, which drives I/O resources and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105861,"byte_end":105939,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/   dispatches I/O events to tasks that depend on them.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105940,"byte_end":105997,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"/ * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105998,"byte_end":106068,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106069,"byte_end":106141,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106142,"byte_end":106145,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106146,"byte_end":106226,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ them to be started, shut down, and configured together. However, most","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106227,"byte_end":106300,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ applications won't need to use [`Runtime`] directly. Instead, they can","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106301,"byte_end":106375,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ use the [`tokio::main`] attribute macro, which creates a [`Runtime`] under","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106376,"byte_end":106454,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ the hood.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106455,"byte_end":106468,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106469,"byte_end":106472,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106473,"byte_end":106484,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106485,"byte_end":106488,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Most applications will use the [`tokio::main`] attribute macro.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106489,"byte_end":106556,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106557,"byte_end":106560,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106561,"byte_end":106574,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106575,"byte_end":106607,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106608,"byte_end":106634,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106635,"byte_end":106638,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106639,"byte_end":106657,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106658,"byte_end":106721,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106722,"byte_end":106792,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106793,"byte_end":106796,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106797,"byte_end":106811,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106812,"byte_end":106871,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106872,"byte_end":106875,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106876,"byte_end":106913,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106914,"byte_end":106954,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106955,"byte_end":106958,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106959,"byte_end":107039,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107040,"byte_end":107062,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107063,"byte_end":107126,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107127,"byte_end":107167,"line_start":39,"line_end":39,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107168,"byte_end":107218,"line_start":40,"line_end":40,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107219,"byte_end":107254,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107255,"byte_end":107290,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"/                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107291,"byte_end":107373,"line_start":43,"line_end":43,"column_start":1,"column_end":83}},{"value":"/                         return;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107374,"byte_end":107409,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107410,"byte_end":107435,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107436,"byte_end":107458,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107459,"byte_end":107462,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107463,"byte_end":107505,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107506,"byte_end":107578,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"/                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107579,"byte_end":107656,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/                     return;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107657,"byte_end":107688,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107689,"byte_end":107710,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107711,"byte_end":107728,"line_start":53,"line_end":53,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107729,"byte_end":107744,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107745,"byte_end":107754,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107755,"byte_end":107760,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107761,"byte_end":107768,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107769,"byte_end":107772,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107773,"byte_end":107851,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107852,"byte_end":107930,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/ executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107931,"byte_end":107992,"line_start":61,"line_end":61,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107993,"byte_end":107996,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ A [`Runtime`] instance can also be used directly.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107997,"byte_end":108050,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108051,"byte_end":108054,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108055,"byte_end":108068,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108069,"byte_end":108101,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108102,"byte_end":108128,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108129,"byte_end":108161,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108162,"byte_end":108165,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108166,"byte_end":108223,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/     // Create the runtime","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108224,"byte_end":108253,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"/     let mut rt = Runtime::new()?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108254,"byte_end":108291,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108292,"byte_end":108295,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     // Spawn the root task","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108296,"byte_end":108326,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"/     rt.block_on(async {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108327,"byte_end":108354,"line_start":75,"line_end":75,"column_start":1,"column_end":28}},{"value":"/         let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108355,"byte_end":108429,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108430,"byte_end":108433,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/         loop {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108434,"byte_end":108452,"line_start":78,"line_end":78,"column_start":1,"column_end":19}},{"value":"/             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108453,"byte_end":108516,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108517,"byte_end":108520,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/             tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108521,"byte_end":108562,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"/                 let mut buf = [0; 1024];","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108563,"byte_end":108607,"line_start":82,"line_end":82,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108608,"byte_end":108611,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108612,"byte_end":108696,"line_start":84,"line_end":84,"column_start":1,"column_end":85}},{"value":"/                 loop {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108697,"byte_end":108723,"line_start":85,"line_end":85,"column_start":1,"column_end":27}},{"value":"/                     let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108724,"byte_end":108791,"line_start":86,"line_end":86,"column_start":1,"column_end":68}},{"value":"/                         // socket closed","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108792,"byte_end":108836,"line_start":87,"line_end":87,"column_start":1,"column_end":45}},{"value":"/                         Ok(n) if n == 0 => return,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108837,"byte_end":108891,"line_start":88,"line_end":88,"column_start":1,"column_end":55}},{"value":"/                         Ok(n) => n,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108892,"byte_end":108931,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"/                         Err(e) => {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108932,"byte_end":108971,"line_start":90,"line_end":90,"column_start":1,"column_end":40}},{"value":"/                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108972,"byte_end":109058,"line_start":91,"line_end":91,"column_start":1,"column_end":87}},{"value":"/                             return;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109059,"byte_end":109098,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"/                         }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109099,"byte_end":109128,"line_start":93,"line_end":93,"column_start":1,"column_end":30}},{"value":"/                     };","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109129,"byte_end":109155,"line_start":94,"line_end":94,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109156,"byte_end":109159,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/                     // Write the data back","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109160,"byte_end":109206,"line_start":96,"line_end":96,"column_start":1,"column_end":47}},{"value":"/                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109207,"byte_end":109283,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"/                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109284,"byte_end":109365,"line_start":98,"line_end":98,"column_start":1,"column_end":82}},{"value":"/                         return;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109366,"byte_end":109401,"line_start":99,"line_end":99,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109402,"byte_end":109427,"line_start":100,"line_end":100,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109428,"byte_end":109449,"line_start":101,"line_end":101,"column_start":1,"column_end":22}},{"value":"/             });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109450,"byte_end":109469,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109470,"byte_end":109483,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109484,"byte_end":109494,"line_start":104,"line_end":104,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109495,"byte_end":109500,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109501,"byte_end":109508,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109509,"byte_end":109512,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ## Runtime Configurations","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109513,"byte_end":109542,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109543,"byte_end":109546,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ Tokio provides multiple task scheduling strategies, suitable for different","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109547,"byte_end":109625,"line_start":110,"line_end":110,"column_start":1,"column_end":79}},{"value":"/ applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109626,"byte_end":109702,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"/ used to select which scheduler to use.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109703,"byte_end":109745,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109746,"byte_end":109749,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ #### Basic Scheduler","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109750,"byte_end":109774,"line_start":114,"line_end":114,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109775,"byte_end":109778,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ The basic scheduler provides a _single-threaded_ future executor. All tasks","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109779,"byte_end":109858,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"/ will be created and executed on the current thread. The basic scheduler","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109859,"byte_end":109934,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"/ requires the `rt-core` feature flag, and can be selected using the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109935,"byte_end":110005,"line_start":118,"line_end":118,"column_start":1,"column_end":71}},{"value":"/ [`Builder::basic_scheduler`] method:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110006,"byte_end":110046,"line_start":119,"line_end":119,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110047,"byte_end":110054,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110055,"byte_end":110078,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110079,"byte_end":110082,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110083,"byte_end":110142,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/ let basic_rt = runtime::Builder::new()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110143,"byte_end":110185,"line_start":124,"line_end":124,"column_start":1,"column_end":43}},{"value":"/     .basic_scheduler()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110186,"byte_end":110212,"line_start":125,"line_end":125,"column_start":1,"column_end":27}},{"value":"/     .build()?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110213,"byte_end":110231,"line_start":126,"line_end":126,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110232,"byte_end":110246,"line_start":127,"line_end":127,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110247,"byte_end":110254,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110255,"byte_end":110258,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ If the `rt-core` feature is enabled and `rt-threaded` is not,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110259,"byte_end":110324,"line_start":130,"line_end":130,"column_start":1,"column_end":66}},{"value":"/ [`Runtime::new`] will return a basic scheduler runtime by default.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110325,"byte_end":110395,"line_start":131,"line_end":131,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110396,"byte_end":110399,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ #### Threaded Scheduler","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110400,"byte_end":110427,"line_start":133,"line_end":133,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110428,"byte_end":110431,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ The threaded scheduler executes futures on a _thread pool_, using a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110432,"byte_end":110503,"line_start":135,"line_end":135,"column_start":1,"column_end":72}},{"value":"/ work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110504,"byte_end":110582,"line_start":136,"line_end":136,"column_start":1,"column_end":79}},{"value":"/ CPU core available on the system. This tends to be the ideal configurations","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110583,"byte_end":110662,"line_start":137,"line_end":137,"column_start":1,"column_end":80}},{"value":"/ for most applications. The threaded scheduler requires the `rt-threaded` feature","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110663,"byte_end":110747,"line_start":138,"line_end":138,"column_start":1,"column_end":85}},{"value":"/ flag, and can be selected using the  [`Builder::threaded_scheduler`] method:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110748,"byte_end":110828,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110829,"byte_end":110836,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110837,"byte_end":110860,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110861,"byte_end":110864,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110865,"byte_end":110924,"line_start":143,"line_end":143,"column_start":1,"column_end":60}},{"value":"/ let threaded_rt = runtime::Builder::new()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110925,"byte_end":110970,"line_start":144,"line_end":144,"column_start":1,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110971,"byte_end":111000,"line_start":145,"line_end":145,"column_start":1,"column_end":30}},{"value":"/     .build()?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111001,"byte_end":111019,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111020,"byte_end":111034,"line_start":147,"line_end":147,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111035,"byte_end":111042,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111043,"byte_end":111046,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ If the `rt-threaded` feature flag is enabled, [`Runtime::new`] will return a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111047,"byte_end":111127,"line_start":150,"line_end":150,"column_start":1,"column_end":81}},{"value":"/ threaded scheduler runtime by default.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111128,"byte_end":111170,"line_start":151,"line_end":151,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111171,"byte_end":111174,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Most applications should use the threaded scheduler, except in some niche","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111175,"byte_end":111252,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"/ use-cases, such as when running only a single thread is required.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111253,"byte_end":111322,"line_start":154,"line_end":154,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111323,"byte_end":111326,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ #### Resource drivers","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111327,"byte_end":111352,"line_start":156,"line_end":156,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111353,"byte_end":111356,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111357,"byte_end":111431,"line_start":158,"line_end":158,"column_start":1,"column_end":75}},{"value":"/ default. In this case, attempting to use networking types or time types will","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111432,"byte_end":111512,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111513,"byte_end":111592,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111593,"byte_end":111672,"line_start":161,"line_end":161,"column_start":1,"column_end":80}},{"value":"/ shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111673,"byte_end":111742,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111743,"byte_end":111746,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ ## Lifetime of spawned threads","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111747,"byte_end":111781,"line_start":164,"line_end":164,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111782,"byte_end":111785,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111786,"byte_end":111865,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ threaded scheduler spawns threads to schedule tasks and calls to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111866,"byte_end":111934,"line_start":167,"line_end":167,"column_start":1,"column_end":69}},{"value":"/ `spawn_blocking` spawn threads to run blocking operations.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111935,"byte_end":111997,"line_start":168,"line_end":168,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111998,"byte_end":112001,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112002,"byte_end":112080,"line_start":170,"line_end":170,"column_start":1,"column_end":79}},{"value":"/ idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112081,"byte_end":112160,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"/ Any tasks that have not yet completed will be dropped.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112161,"byte_end":112219,"line_start":172,"line_end":172,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112220,"byte_end":112223,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112224,"byte_end":112248,"line_start":174,"line_end":174,"column_start":1,"column_end":25}},{"value":"/ [`Runtime`]: Runtime","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112249,"byte_end":112273,"line_start":175,"line_end":175,"column_start":1,"column_end":25}},{"value":"/ [`tokio::spawn`]: crate::spawn","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112274,"byte_end":112308,"line_start":176,"line_end":176,"column_start":1,"column_end":35}},{"value":"/ [`tokio::main`]: ../attr.main.html","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112309,"byte_end":112347,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112348,"byte_end":112394,"line_start":178,"line_end":178,"column_start":1,"column_end":47}},{"value":"/ [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112395,"byte_end":112445,"line_start":179,"line_end":179,"column_start":1,"column_end":51}},{"value":"/ [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112446,"byte_end":112520,"line_start":180,"line_end":180,"column_start":1,"column_end":75}},{"value":"/ [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112521,"byte_end":112601,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112602,"byte_end":112664,"line_start":182,"line_end":182,"column_start":1,"column_end":63}},{"value":"/ [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112665,"byte_end":112731,"line_start":183,"line_end":183,"column_start":1,"column_end":67}},{"value":"/ [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112732,"byte_end":112796,"line_start":184,"line_end":184,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":4996},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8704421,"byte_end":8704430,"line_start":8,"line_end":8,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::runtime::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":4997}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21701,"byte_end":21728,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4639},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8704606,"byte_end":8704615,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<JoinError>::cancelled","value":"pub fn cancelled() -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8704581,"byte_end":8704594,"line_start":20,"line_end":20,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4641},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8704833,"byte_end":8704838,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"name":"panic","qualname":"<JoinError>::panic","value":"pub fn panic(Box<Any + Send + 'static>) -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8704808,"byte_end":8704821,"line_start":32,"line_end":32,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4643},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8705168,"byte_end":8705180,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<JoinError>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task being cancelled\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task being cancelled","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8705088,"byte_end":8705156,"line_start":43,"line_end":43,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4644},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8705686,"byte_end":8705694,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"is_panic","qualname":"<JoinError>::is_panic","value":"pub fn is_panic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task panicking","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task panicking","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8705307,"byte_end":8705369,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8705374,"byte_end":8705377,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8705382,"byte_end":8705396,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8705401,"byte_end":8705404,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8705409,"byte_end":8705416,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use std::panic;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8705421,"byte_end":8705440,"line_start":56,"line_end":56,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8705445,"byte_end":8705448,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8705453,"byte_end":8705471,"line_start":58,"line_end":58,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8705476,"byte_end":8705497,"line_start":59,"line_end":59,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8705502,"byte_end":8705540,"line_start":60,"line_end":60,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8705545,"byte_end":8705572,"line_start":61,"line_end":61,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8705577,"byte_end":8705607,"line_start":62,"line_end":62,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8705612,"byte_end":8705615,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/     assert!(err.is_panic());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8705620,"byte_end":8705652,"line_start":64,"line_end":64,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8705657,"byte_end":8705662,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8705667,"byte_end":8705674,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4645},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8706601,"byte_end":8706611,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"into_panic","qualname":"<JoinError>::into_panic","value":"pub fn into_panic(Self) -> Box<Any + Send + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task panicked.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task panicked.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8705820,"byte_end":8705899,"line_start":74,"line_end":74,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8705904,"byte_end":8705907,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8705912,"byte_end":8705924,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8705929,"byte_end":8705932,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ `into_panic()` panics if the `Error` does not represent the underlying","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8705937,"byte_end":8706011,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ task terminating with a panic. Use `is_panic` to check the error reason","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8706016,"byte_end":8706091,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ or `try_into_panic` for a variant that does not panic.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8706096,"byte_end":8706154,"line_start":80,"line_end":80,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8706159,"byte_end":8706162,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8706167,"byte_end":8706181,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8706186,"byte_end":8706189,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8706194,"byte_end":8706213,"line_start":84,"line_end":84,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8706218,"byte_end":8706237,"line_start":85,"line_end":85,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8706242,"byte_end":8706245,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8706250,"byte_end":8706268,"line_start":87,"line_end":87,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8706273,"byte_end":8706294,"line_start":88,"line_end":88,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8706299,"byte_end":8706337,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8706342,"byte_end":8706369,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8706374,"byte_end":8706404,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8706409,"byte_end":8706412,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     if err.is_panic() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8706417,"byte_end":8706444,"line_start":93,"line_end":93,"column_start":5,"column_end":32}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8706449,"byte_end":8706497,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(err.into_panic());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8706502,"byte_end":8706553,"line_start":95,"line_end":95,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8706558,"byte_end":8706567,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8706572,"byte_end":8706577,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8706582,"byte_end":8706589,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4646},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8707376,"byte_end":8707390,"line_start":125,"line_end":125,"column_start":12,"column_end":26},"name":"try_into_panic","qualname":"<JoinError>::try_into_panic","value":"pub fn try_into_panic(Self) -> Result<Box<Any + Send + 'static>, JoinError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task\n panicked if the task terminated due to a panic. Otherwise, `self` is\n returned.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8706752,"byte_end":8706821,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ panicked if the task terminated due to a panic. Otherwise, `self` is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8706826,"byte_end":8706898,"line_start":105,"line_end":105,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8706903,"byte_end":8706916,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8706921,"byte_end":8706924,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8706929,"byte_end":8706943,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8706948,"byte_end":8706951,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8706956,"byte_end":8706975,"line_start":110,"line_end":110,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8706980,"byte_end":8706999,"line_start":111,"line_end":111,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8707004,"byte_end":8707007,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8707012,"byte_end":8707030,"line_start":113,"line_end":113,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8707035,"byte_end":8707056,"line_start":114,"line_end":114,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8707061,"byte_end":8707099,"line_start":115,"line_end":115,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8707104,"byte_end":8707131,"line_start":116,"line_end":116,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8707136,"byte_end":8707166,"line_start":117,"line_end":117,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8707171,"byte_end":8707174,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/     if let Ok(reason) = err.try_into_panic() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8707179,"byte_end":8707229,"line_start":119,"line_end":119,"column_start":5,"column_end":55}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8707234,"byte_end":8707282,"line_start":120,"line_end":120,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(reason);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8707287,"byte_end":8707328,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8707333,"byte_end":8707342,"line_start":122,"line_end":122,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8707347,"byte_end":8707352,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8707357,"byte_end":8707364,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4998},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8723756,"byte_end":8723766,"line_start":78,"line_end":78,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::runtime::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":5000},{"krate":0,"index":5001}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21701,"byte_end":21728,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":592},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128991,"byte_end":128998,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128163,"byte_end":128221,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128222,"byte_end":128225,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128226,"byte_end":128298,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128299,"byte_end":128347,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128348,"byte_end":128351,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128352,"byte_end":128417,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128418,"byte_end":128421,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128422,"byte_end":128499,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128500,"byte_end":128513,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128514,"byte_end":128517,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: method@Self::build","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128518,"byte_end":128551,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ [`Builder::new`]: method@Self::new","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128552,"byte_end":128590,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128591,"byte_end":128594,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128595,"byte_end":128609,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128610,"byte_end":128613,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128614,"byte_end":128621,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128622,"byte_end":128654,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128655,"byte_end":128658,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128659,"byte_end":128674,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128675,"byte_end":128699,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128700,"byte_end":128736,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/         .threaded_scheduler()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128737,"byte_end":128770,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/         .core_threads(4)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128771,"byte_end":128799,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128800,"byte_end":128842,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128843,"byte_end":128890,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128891,"byte_end":128911,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128912,"byte_end":128934,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128935,"byte_end":128938,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128939,"byte_end":128965,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128966,"byte_end":128971,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128972,"byte_end":128979,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130153,"byte_end":130156,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new runtime builder initialized with default configuration\n values.","sig":null,"attributes":[{"value":"/ Returns a new runtime builder initialized with default configuration","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":129979,"byte_end":130051,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"/ values.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130056,"byte_end":130067,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130072,"byte_end":130075,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130080,"byte_end":130141,"line_start":84,"line_end":84,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131360,"byte_end":131370,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"pub fn enable_all(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enables both I/O and time drivers.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130846,"byte_end":130884,"line_start":113,"line_end":113,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130889,"byte_end":130892,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130897,"byte_end":130968,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130973,"byte_end":131049,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131054,"byte_end":131108,"line_start":117,"line_end":117,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131113,"byte_end":131116,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131121,"byte_end":131135,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131140,"byte_end":131143,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131148,"byte_end":131155,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131160,"byte_end":131183,"line_start":122,"line_end":122,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131188,"byte_end":131191,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131196,"byte_end":131232,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131237,"byte_end":131266,"line_start":125,"line_end":125,"column_start":5,"column_end":34}},{"value":"/     .enable_all()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131271,"byte_end":131292,"line_start":126,"line_end":126,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131297,"byte_end":131313,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131318,"byte_end":131336,"line_start":128,"line_end":128,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131341,"byte_end":131348,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131925,"byte_end":131936,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"num_threads","qualname":"<Builder>::num_threads","value":"pub fn num_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"deprecated(note = \"In future will be replaced by core_threads method\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131547,"byte_end":131620,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/ Sets the maximum number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131625,"byte_end":131703,"line_start":140,"line_end":140,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131708,"byte_end":131711,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This must be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131716,"byte_end":131791,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ this value on the smaller side.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131796,"byte_end":131831,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131836,"byte_end":131839,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131844,"byte_end":131913,"line_start":145,"line_end":145,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132645,"byte_end":132657,"line_start":171,"line_end":171,"column_start":12,"column_end":24},"name":"core_threads","qualname":"<Builder>::core_threads","value":"pub fn core_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the core number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets the core number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132038,"byte_end":132113,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132118,"byte_end":132121,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This should be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132126,"byte_end":132203,"line_start":153,"line_end":153,"column_start":5,"column_end":82}},{"value":"/ this value on the smaller side.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132208,"byte_end":132243,"line_start":154,"line_end":154,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132248,"byte_end":132251,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132256,"byte_end":132325,"line_start":156,"line_end":156,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132330,"byte_end":132333,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ These threads will be always active and running.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132338,"byte_end":132390,"line_start":158,"line_end":158,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132395,"byte_end":132398,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132403,"byte_end":132417,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132422,"byte_end":132425,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132430,"byte_end":132437,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132442,"byte_end":132465,"line_start":163,"line_end":163,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132470,"byte_end":132473,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132478,"byte_end":132514,"line_start":165,"line_end":165,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132519,"byte_end":132548,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/     .core_threads(4)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132553,"byte_end":132577,"line_start":167,"line_end":167,"column_start":5,"column_end":29}},{"value":"/     .build()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132582,"byte_end":132598,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132603,"byte_end":132621,"line_start":169,"line_end":169,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132626,"byte_end":132633,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133536,"byte_end":133547,"line_start":191,"line_end":191,"column_start":12,"column_end":23},"name":"max_threads","qualname":"<Builder>::max_threads","value":"pub fn max_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies limit for threads, spawned by the Runtime.","sig":null,"attributes":[{"value":"/ Specifies limit for threads, spawned by the Runtime.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132818,"byte_end":132874,"line_start":177,"line_end":177,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132879,"byte_end":132882,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This is number of threads to be used by Runtime, including `core_threads`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132887,"byte_end":132964,"line_start":179,"line_end":179,"column_start":5,"column_end":82}},{"value":"/ Having `max_threads` less than `core_threads` results in invalid configuration","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132969,"byte_end":133051,"line_start":180,"line_end":180,"column_start":5,"column_end":87}},{"value":"/ when building multi-threaded `Runtime`, which would cause a panic.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133056,"byte_end":133126,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133131,"byte_end":133134,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Similarly to the `core_threads`, this number should be between 1 and 32,768.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133139,"byte_end":133219,"line_start":183,"line_end":183,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133224,"byte_end":133227,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133232,"byte_end":133261,"line_start":185,"line_end":185,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133266,"byte_end":133269,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ When multi-threaded runtime is not used, will act as limit on additional threads.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133274,"byte_end":133359,"line_start":187,"line_end":187,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133364,"byte_end":133367,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Otherwise as `core_threads` are always active, it limits additional threads (e.g. for","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133372,"byte_end":133461,"line_start":189,"line_end":189,"column_start":5,"column_end":94}},{"value":"/ blocking annotations) as `max_threads - core_threads`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133466,"byte_end":133524,"line_start":190,"line_end":190,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134071,"byte_end":134082,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"pub fn thread_name<impl Into<String>: Into<String>>(&mut Self,\n                                                    impl Into<String>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133701,"byte_end":133765,"line_start":197,"line_end":197,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133770,"byte_end":133773,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133778,"byte_end":133825,"line_start":199,"line_end":199,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133830,"byte_end":133833,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133838,"byte_end":133852,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133857,"byte_end":133860,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133865,"byte_end":133872,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133877,"byte_end":133902,"line_start":204,"line_end":204,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133907,"byte_end":133910,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133915,"byte_end":133936,"line_start":206,"line_end":206,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133941,"byte_end":133977,"line_start":207,"line_end":207,"column_start":5,"column_end":41}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133982,"byte_end":134013,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134018,"byte_end":134035,"line_start":209,"line_end":209,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134040,"byte_end":134047,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134052,"byte_end":134059,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134806,"byte_end":134823,"line_start":237,"line_end":237,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"pub fn thread_stack_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Sets the stack size (in bytes) for worker threads.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134196,"byte_end":134250,"line_start":217,"line_end":217,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134255,"byte_end":134258,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134263,"byte_end":134335,"line_start":219,"line_end":219,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134340,"byte_end":134373,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134378,"byte_end":134381,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134386,"byte_end":134454,"line_start":222,"line_end":222,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134459,"byte_end":134520,"line_start":223,"line_end":223,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134525,"byte_end":134528,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134533,"byte_end":134547,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134552,"byte_end":134555,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134560,"byte_end":134567,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134572,"byte_end":134597,"line_start":228,"line_end":228,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134602,"byte_end":134605,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134610,"byte_end":134631,"line_start":230,"line_end":230,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134636,"byte_end":134672,"line_start":231,"line_end":231,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134677,"byte_end":134706,"line_start":232,"line_end":232,"column_start":5,"column_end":34}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134711,"byte_end":134748,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134753,"byte_end":134770,"line_start":234,"line_end":234,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134775,"byte_end":134782,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134787,"byte_end":134794,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135464,"byte_end":135479,"line_start":262,"line_end":262,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"pub fn on_thread_start<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Executes function `f` after each thread is started but before it starts","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134930,"byte_end":135005,"line_start":242,"line_end":242,"column_start":5,"column_end":80}},{"value":"/ doing work.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135010,"byte_end":135025,"line_start":243,"line_end":243,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135030,"byte_end":135033,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135038,"byte_end":135100,"line_start":245,"line_end":245,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135105,"byte_end":135108,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135113,"byte_end":135127,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135132,"byte_end":135135,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135140,"byte_end":135147,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135152,"byte_end":135177,"line_start":250,"line_end":250,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135182,"byte_end":135185,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135190,"byte_end":135211,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135216,"byte_end":135257,"line_start":253,"line_end":253,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135262,"byte_end":135291,"line_start":254,"line_end":254,"column_start":5,"column_end":34}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135296,"byte_end":135325,"line_start":255,"line_end":255,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135330,"byte_end":135369,"line_start":256,"line_end":256,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135374,"byte_end":135384,"line_start":257,"line_end":257,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135389,"byte_end":135406,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135411,"byte_end":135418,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135423,"byte_end":135430,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135435,"byte_end":135452,"line_start":261,"line_end":261,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136130,"byte_end":136144,"line_start":289,"line_end":289,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"pub fn on_thread_stop<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Executes function `f` before each thread stops.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135640,"byte_end":135691,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135696,"byte_end":135699,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135704,"byte_end":135766,"line_start":272,"line_end":272,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135771,"byte_end":135774,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135779,"byte_end":135793,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135798,"byte_end":135801,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135806,"byte_end":135813,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135818,"byte_end":135843,"line_start":277,"line_end":277,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135848,"byte_end":135851,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135856,"byte_end":135877,"line_start":279,"line_end":279,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135882,"byte_end":135923,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135928,"byte_end":135957,"line_start":281,"line_end":281,"column_start":5,"column_end":34}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135962,"byte_end":135990,"line_start":282,"line_end":282,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135995,"byte_end":136035,"line_start":283,"line_end":283,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136040,"byte_end":136050,"line_start":284,"line_end":284,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136055,"byte_end":136072,"line_start":285,"line_end":285,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136077,"byte_end":136084,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136089,"byte_end":136096,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136101,"byte_end":136118,"line_start":288,"line_end":288,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136690,"byte_end":136695,"line_start":312,"line_end":312,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(&mut Self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Creates the configured `Runtime`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136305,"byte_end":136342,"line_start":297,"line_end":297,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136347,"byte_end":136350,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The returned `ThreadPool` instance is ready to spawn tasks.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136355,"byte_end":136418,"line_start":299,"line_end":299,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136423,"byte_end":136426,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136431,"byte_end":136445,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136450,"byte_end":136453,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136458,"byte_end":136465,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136470,"byte_end":136502,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136507,"byte_end":136510,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Builder::new().build().unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136515,"byte_end":136564,"line_start":306,"line_end":306,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136569,"byte_end":136572,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136577,"byte_end":136600,"line_start":308,"line_end":308,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136605,"byte_end":136654,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136659,"byte_end":136666,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136671,"byte_end":136678,"line_start":311,"line_end":311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5196},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138320,"byte_end":138329,"line_start":367,"line_end":367,"column_start":16,"column_end":25},"name":"enable_io","qualname":"<Builder>::enable_io","value":"pub fn enable_io(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the I/O driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5198},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138840,"byte_end":138851,"line_start":390,"line_end":390,"column_start":16,"column_end":27},"name":"enable_time","qualname":"<Builder>::enable_time","value":"pub fn enable_time(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the time driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5200},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":139464,"byte_end":139479,"line_start":409,"line_end":409,"column_start":16,"column_end":31},"name":"basic_scheduler","qualname":"<Builder>::basic_scheduler","value":"pub fn basic_scheduler(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets runtime to use a simpler scheduler that runs all tasks on the current-thread.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5206},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":141215,"byte_end":141233,"line_start":458,"line_end":458,"column_start":16,"column_end":34},"name":"threaded_scheduler","qualname":"<Builder>::threaded_scheduler","value":"pub fn threaded_scheduler(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets runtime to use a multi-threaded scheduler for executing tasks.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5265},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150461,"byte_end":150467,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":5266},{"krate":0,"index":5267},{"krate":0,"index":5268},{"krate":0,"index":5269},{"krate":0,"index":5270}],"decl_id":null,"docs":" Handle to the runtime.","sig":null,"attributes":[{"value":"/ Handle to the runtime.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150192,"byte_end":150218,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150219,"byte_end":150222,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The handle is internally reference-counted and can be freely cloned. A handle can be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150223,"byte_end":150311,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/ obtained using the [`Runtime::handle`] method.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150312,"byte_end":150362,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150363,"byte_end":150366,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::handle`]: crate::runtime::Runtime::handle()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150367,"byte_end":150425,"line_start":20,"line_end":20,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152004,"byte_end":152009,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"pub fn enter<F, R>(&Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150831,"byte_end":150906,"line_start":39,"line_end":39,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150911,"byte_end":150989,"line_start":40,"line_end":40,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150994,"byte_end":151062,"line_start":41,"line_end":41,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151067,"byte_end":151070,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Runtime::enter`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151075,"byte_end":151133,"line_start":43,"line_end":43,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151138,"byte_end":151141,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151146,"byte_end":151186,"line_start":45,"line_end":45,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151191,"byte_end":151238,"line_start":46,"line_end":46,"column_start":5,"column_end":52}},{"value":"/ [`Runtime::enter`]: fn@crate::runtime::Runtime::enter","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151243,"byte_end":151300,"line_start":47,"line_end":47,"column_start":5,"column_end":62}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151305,"byte_end":151342,"line_start":48,"line_end":48,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151347,"byte_end":151350,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151355,"byte_end":151368,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151373,"byte_end":151376,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151381,"byte_end":151388,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151393,"byte_end":151425,"line_start":53,"line_end":53,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151430,"byte_end":151433,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151438,"byte_end":151480,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `handle.enter` below, this would panic.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151485,"byte_end":151551,"line_start":56,"line_end":56,"column_start":5,"column_end":71}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151556,"byte_end":151589,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151594,"byte_end":151626,"line_start":58,"line_end":58,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151631,"byte_end":151642,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151647,"byte_end":151652,"line_start":60,"line_end":60,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151657,"byte_end":151660,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151665,"byte_end":151680,"line_start":62,"line_end":62,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151685,"byte_end":151726,"line_start":63,"line_end":63,"column_start":5,"column_end":46}},{"value":"/     let handle = rt.handle().clone();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151731,"byte_end":151772,"line_start":64,"line_end":64,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151777,"byte_end":151780,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151785,"byte_end":151828,"line_start":66,"line_end":66,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151833,"byte_end":151836,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151841,"byte_end":151916,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/     handle.enter(|| function_that_spawns(s));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151921,"byte_end":151970,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151975,"byte_end":151980,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151985,"byte_end":151992,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153479,"byte_end":153486,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"current","qualname":"<Handle>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Handle` view over the currently running `Runtime`","sig":null,"attributes":[{"value":"/ Returns a `Handle` view over the currently running `Runtime`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152127,"byte_end":152191,"line_start":79,"line_end":79,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152196,"byte_end":152199,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152204,"byte_end":152215,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152220,"byte_end":152223,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime. That means that you must","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152228,"byte_end":152322,"line_start":83,"line_end":83,"column_start":5,"column_end":99}},{"value":"/ call this on one of the threads **being run by the runtime**. Calling this from within a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152327,"byte_end":152419,"line_start":84,"line_end":84,"column_start":5,"column_end":97}},{"value":"/ thread created by `std::thread::spawn` (for example) will cause a panic.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152424,"byte_end":152500,"line_start":85,"line_end":85,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152505,"byte_end":152508,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152513,"byte_end":152527,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152532,"byte_end":152535,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This can be used to obtain the handle of the surrounding runtime from an async","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152540,"byte_end":152622,"line_start":89,"line_end":89,"column_start":5,"column_end":87}},{"value":"/ block or function running on that runtime.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152627,"byte_end":152673,"line_start":90,"line_end":90,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152678,"byte_end":152681,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152686,"byte_end":152693,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ # use std::thread;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152698,"byte_end":152720,"line_start":93,"line_end":93,"column_start":5,"column_end":27}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152725,"byte_end":152759,"line_start":94,"line_end":94,"column_start":5,"column_end":39}},{"value":"/ # fn dox() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152764,"byte_end":152780,"line_start":95,"line_end":95,"column_start":5,"column_end":21}},{"value":"/ # let rt = Runtime::new().unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152785,"byte_end":152824,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/ # rt.spawn(async {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152829,"byte_end":152851,"line_start":97,"line_end":97,"column_start":5,"column_end":27}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152856,"byte_end":152887,"line_start":98,"line_end":98,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152892,"byte_end":152895,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ // Inside an async block or function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152900,"byte_end":152941,"line_start":100,"line_end":100,"column_start":5,"column_end":46}},{"value":"/ let handle = Handle::current();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152946,"byte_end":152981,"line_start":101,"line_end":101,"column_start":5,"column_end":40}},{"value":"/ handle.spawn(async {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152986,"byte_end":153010,"line_start":102,"line_end":102,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running in the existing Runtime\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153015,"byte_end":153071,"line_start":103,"line_end":103,"column_start":5,"column_end":61}},{"value":"/ });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153076,"byte_end":153083,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153088,"byte_end":153091,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # let handle =","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153096,"byte_end":153114,"line_start":106,"line_end":106,"column_start":5,"column_end":23}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153119,"byte_end":153146,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/     // Notice that the handle is created outside of this thread and then moved in","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153151,"byte_end":153236,"line_start":108,"line_end":108,"column_start":5,"column_end":90}},{"value":"/     handle.block_on(async { /* ... */ })","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153241,"byte_end":153285,"line_start":109,"line_end":109,"column_start":5,"column_end":49}},{"value":"/     // This next line would cause a panic","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153290,"byte_end":153335,"line_start":110,"line_end":110,"column_start":5,"column_end":50}},{"value":"/     // let handle2 = Handle::current();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153340,"byte_end":153383,"line_start":111,"line_end":111,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153388,"byte_end":153395,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153400,"byte_end":153429,"line_start":113,"line_end":113,"column_start":5,"column_end":34}},{"value":"/ # });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153434,"byte_end":153443,"line_start":114,"line_end":114,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153448,"byte_end":153455,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153460,"byte_end":153467,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153784,"byte_end":153795,"line_start":126,"line_end":126,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Handle>::try_current","value":"pub fn try_current() -> Result<Self, TryCurrentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153591,"byte_end":153651,"line_start":121,"line_end":121,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153656,"byte_end":153659,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Returns an error if no Runtime has been started","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153664,"byte_end":153715,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153720,"byte_end":153723,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Contrary to `current`, this never panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153728,"byte_end":153772,"line_start":125,"line_end":125,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5276},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":155320,"byte_end":155325,"line_start":170,"line_end":170,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Handle>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future onto the Tokio runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5278},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":159444,"byte_end":159452,"line_start":274,"line_end":274,"column_start":16,"column_end":24},"name":"block_on","qualname":"<Handle>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime from a synchronous\n context.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5282},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":162841,"byte_end":162855,"line_start":344,"line_end":344,"column_start":16,"column_end":30},"name":"spawn_blocking","qualname":"<Handle>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":670},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163244,"byte_end":163259,"line_start":357,"line_end":357,"column_start":12,"column_end":27},"name":"TryCurrentError","qualname":"::runtime::handle::TryCurrentError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `try_current` when no Runtime has been started\n","sig":null,"attributes":[{"value":"/ Error returned by `try_current` when no Runtime has been started","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163164,"byte_end":163232,"line_start":356,"line_end":356,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":5695},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114701,"byte_end":114708,"line_start":275,"line_end":275,"column_start":12,"column_end":19},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":5696},{"krate":0,"index":5697},{"krate":0,"index":5698}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"/ The Tokio runtime.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113684,"byte_end":113706,"line_start":246,"line_end":246,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113707,"byte_end":113710,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ The runtime provides an I/O driver, task scheduler, [timer], and blocking","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113711,"byte_end":113788,"line_start":248,"line_end":248,"column_start":1,"column_end":78}},{"value":"/ pool, necessary for running asynchronous tasks.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113789,"byte_end":113840,"line_start":249,"line_end":249,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113841,"byte_end":113844,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ Instances of `Runtime` can be created using [`new`] or [`Builder`]. However,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113845,"byte_end":113925,"line_start":251,"line_end":251,"column_start":1,"column_end":81}},{"value":"/ most users will use the `#[tokio::main]` annotation on their entry point instead.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113926,"byte_end":114011,"line_start":252,"line_end":252,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114012,"byte_end":114015,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114016,"byte_end":114075,"line_start":254,"line_end":254,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114076,"byte_end":114079,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ # Shutdown","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114080,"byte_end":114094,"line_start":256,"line_end":256,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114095,"byte_end":114098,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ Shutting down the runtime is done by dropping the value. The current thread","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114099,"byte_end":114178,"line_start":258,"line_end":258,"column_start":1,"column_end":80}},{"value":"/ will block until the shut down operation has completed.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114179,"byte_end":114238,"line_start":259,"line_end":259,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114239,"byte_end":114242,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ * Drain any scheduled work queues.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114243,"byte_end":114281,"line_start":261,"line_end":261,"column_start":1,"column_end":39}},{"value":"/ * Drop any futures that have not yet completed.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114282,"byte_end":114333,"line_start":262,"line_end":262,"column_start":1,"column_end":52}},{"value":"/ * Drop the reactor.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114334,"byte_end":114357,"line_start":263,"line_end":263,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114358,"byte_end":114361,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ Once the reactor has dropped, any outstanding I/O resources bound to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114362,"byte_end":114434,"line_start":265,"line_end":265,"column_start":1,"column_end":73}},{"value":"/ that reactor will no longer function. Calling any method on them will","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114435,"byte_end":114508,"line_start":266,"line_end":266,"column_start":1,"column_end":74}},{"value":"/ result in an error.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114509,"byte_end":114532,"line_start":267,"line_end":267,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114533,"byte_end":114536,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ [timer]: crate::time","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114537,"byte_end":114561,"line_start":269,"line_end":269,"column_start":1,"column_end":25}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114562,"byte_end":114583,"line_start":270,"line_end":270,"column_start":1,"column_end":22}},{"value":"/ [`new`]: method@Self::new","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114584,"byte_end":114613,"line_start":271,"line_end":271,"column_start":1,"column_end":30}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114614,"byte_end":114645,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ [`tokio::run`]: fn@run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114646,"byte_end":114672,"line_start":273,"line_end":273,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116929,"byte_end":116932,"line_start":341,"line_end":341,"column_start":12,"column_end":15},"name":"new","qualname":"<Runtime>::new","value":"pub fn new() -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Create a new runtime instance with default configuration values.","sig":null,"attributes":[{"value":"/ Create a new runtime instance with default configuration values.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115522,"byte_end":115590,"line_start":306,"line_end":306,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115595,"byte_end":115598,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This results in a scheduler, I/O driver, and time driver being","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115603,"byte_end":115669,"line_start":308,"line_end":308,"column_start":5,"column_end":71}},{"value":"/ initialized. The type of scheduler used depends on what feature flags","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115674,"byte_end":115747,"line_start":309,"line_end":309,"column_start":5,"column_end":78}},{"value":"/ are enabled: if the `rt-threaded` feature is enabled, the [threaded","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115752,"byte_end":115823,"line_start":310,"line_end":310,"column_start":5,"column_end":76}},{"value":"/ scheduler] is used, while if only the `rt-core` feature is enabled, the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115828,"byte_end":115903,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ [basic scheduler] is used instead.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115908,"byte_end":115946,"line_start":312,"line_end":312,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115951,"byte_end":115954,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ If the threaded scheduler is selected, it will not spawn","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115959,"byte_end":116019,"line_start":314,"line_end":314,"column_start":5,"column_end":65}},{"value":"/ any worker threads until it needs to, i.e. tasks are scheduled to run.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116024,"byte_end":116098,"line_start":315,"line_end":315,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116103,"byte_end":116106,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Most applications will not need to call this function directly. Instead,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116111,"byte_end":116187,"line_start":317,"line_end":317,"column_start":5,"column_end":81}},{"value":"/ they will use the  [`#[tokio::main]` attribute][main]. When more complex","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116192,"byte_end":116268,"line_start":318,"line_end":318,"column_start":5,"column_end":81}},{"value":"/ configuration is necessary, the [runtime builder] may be used.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116273,"byte_end":116339,"line_start":319,"line_end":319,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116344,"byte_end":116347,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116352,"byte_end":116411,"line_start":321,"line_end":321,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116416,"byte_end":116419,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116424,"byte_end":116438,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116443,"byte_end":116446,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Creating a new `Runtime` with default configuration values.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116451,"byte_end":116514,"line_start":325,"line_end":325,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116519,"byte_end":116522,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116527,"byte_end":116534,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116539,"byte_end":116571,"line_start":328,"line_end":328,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116576,"byte_end":116579,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116584,"byte_end":116611,"line_start":330,"line_end":330,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116616,"byte_end":116634,"line_start":331,"line_end":331,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116639,"byte_end":116642,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ // Use the runtime...","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116647,"byte_end":116672,"line_start":333,"line_end":333,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116677,"byte_end":116684,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116689,"byte_end":116692,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116697,"byte_end":116718,"line_start":336,"line_end":336,"column_start":5,"column_end":26}},{"value":"/ [main]: ../attr.main.html","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116723,"byte_end":116752,"line_start":337,"line_end":337,"column_start":5,"column_end":34}},{"value":"/ [threaded scheduler]: index.html#threaded-scheduler","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116757,"byte_end":116812,"line_start":338,"line_end":338,"column_start":5,"column_end":60}},{"value":"/ [basic scheduler]: index.html#basic-scheduler","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116817,"byte_end":116866,"line_start":339,"line_end":339,"column_start":5,"column_end":54}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116871,"byte_end":116917,"line_start":340,"line_end":340,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118522,"byte_end":118527,"line_start":391,"line_end":391,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117342,"byte_end":117384,"line_start":354,"line_end":354,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117389,"byte_end":117392,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117397,"byte_end":117468,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117473,"byte_end":117548,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117553,"byte_end":117576,"line_start":358,"line_end":358,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117581,"byte_end":117584,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117589,"byte_end":117648,"line_start":360,"line_end":360,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117653,"byte_end":117656,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117661,"byte_end":117682,"line_start":362,"line_end":362,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117687,"byte_end":117690,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117695,"byte_end":117709,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117714,"byte_end":117717,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117722,"byte_end":117729,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117734,"byte_end":117766,"line_start":367,"line_end":367,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117771,"byte_end":117774,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117779,"byte_end":117795,"line_start":369,"line_end":369,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117800,"byte_end":117825,"line_start":370,"line_end":370,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117830,"byte_end":117867,"line_start":371,"line_end":371,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117872,"byte_end":117875,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117880,"byte_end":117918,"line_start":373,"line_end":373,"column_start":5,"column_end":43}},{"value":"/ rt.spawn(async {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117923,"byte_end":117943,"line_start":374,"line_end":374,"column_start":5,"column_end":25}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117948,"byte_end":117999,"line_start":375,"line_end":375,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118004,"byte_end":118011,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118016,"byte_end":118023,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118028,"byte_end":118035,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118040,"byte_end":118043,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118048,"byte_end":118060,"line_start":380,"line_end":380,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118065,"byte_end":118068,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ This function will not panic unless task execution is disabled on the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118073,"byte_end":118146,"line_start":382,"line_end":382,"column_start":5,"column_end":78}},{"value":"/ executor. This can only happen if the runtime was built using","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118151,"byte_end":118216,"line_start":383,"line_end":383,"column_start":5,"column_end":70}},{"value":"/ [`Builder`] without picking either [`basic_scheduler`] or","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118221,"byte_end":118282,"line_start":384,"line_end":384,"column_start":5,"column_end":66}},{"value":"/ [`threaded_scheduler`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118287,"byte_end":118314,"line_start":385,"line_end":385,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118319,"byte_end":118322,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118327,"byte_end":118358,"line_start":387,"line_end":387,"column_start":5,"column_end":36}},{"value":"/ [`threaded_scheduler`]: fn@Builder::threaded_scheduler","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118363,"byte_end":118421,"line_start":388,"line_end":388,"column_start":5,"column_end":63}},{"value":"/ [`basic_scheduler`]: fn@Builder::basic_scheduler","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118426,"byte_end":118478,"line_start":389,"line_end":389,"column_start":5,"column_end":57}},{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118483,"byte_end":118510,"line_start":390,"line_end":390,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120148,"byte_end":120156,"line_start":438,"line_end":438,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F: Future>(&mut Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime. This is the runtime's\n entry point.","sig":null,"attributes":[{"value":"/ Run a future to completion on the Tokio runtime. This is the runtime's","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118929,"byte_end":119003,"line_start":404,"line_end":404,"column_start":5,"column_end":79}},{"value":"/ entry point.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119008,"byte_end":119024,"line_start":405,"line_end":405,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119029,"byte_end":119032,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119037,"byte_end":119104,"line_start":407,"line_end":407,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119109,"byte_end":119182,"line_start":408,"line_end":408,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119187,"byte_end":119252,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119257,"byte_end":119260,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ `&mut` is required as calling `block_on` **may** result in advancing the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119265,"byte_end":119341,"line_start":411,"line_end":411,"column_start":5,"column_end":81}},{"value":"/ state of the runtime. The details depend on how the runtime is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119346,"byte_end":119412,"line_start":412,"line_end":412,"column_start":5,"column_end":71}},{"value":"/ configured. [`runtime::Handle::block_on`][handle] provides a version","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119417,"byte_end":119489,"line_start":413,"line_end":413,"column_start":5,"column_end":77}},{"value":"/ that takes `&self`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119494,"byte_end":119517,"line_start":414,"line_end":414,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119522,"byte_end":119525,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ This method may not be called from an asynchronous context.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119530,"byte_end":119593,"line_start":416,"line_end":416,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119598,"byte_end":119601,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119606,"byte_end":119618,"line_start":418,"line_end":418,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119623,"byte_end":119626,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This function panics if the provided future panics, or if called within an","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119631,"byte_end":119709,"line_start":420,"line_end":420,"column_start":5,"column_end":83}},{"value":"/ asynchronous execution context.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119714,"byte_end":119749,"line_start":421,"line_end":421,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119754,"byte_end":119757,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119762,"byte_end":119776,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119781,"byte_end":119784,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119789,"byte_end":119802,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119807,"byte_end":119839,"line_start":426,"line_end":426,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119844,"byte_end":119847,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ // Create the runtime","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119852,"byte_end":119877,"line_start":428,"line_end":428,"column_start":5,"column_end":30}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119882,"byte_end":119923,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119928,"byte_end":119931,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ // Execute the future, blocking the current thread until completion","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119936,"byte_end":120007,"line_start":431,"line_end":431,"column_start":5,"column_end":76}},{"value":"/ rt.block_on(async {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120012,"byte_end":120035,"line_start":432,"line_end":432,"column_start":5,"column_end":28}},{"value":"/     println!(\"hello\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120040,"byte_end":120066,"line_start":433,"line_end":433,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120071,"byte_end":120078,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120083,"byte_end":120090,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120095,"byte_end":120098,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ [handle]: fn@Handle::block_on","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120103,"byte_end":120136,"line_start":437,"line_end":437,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121678,"byte_end":121683,"line_start":482,"line_end":482,"column_start":12,"column_end":17},"name":"enter","qualname":"<Runtime>::enter","value":"pub fn enter<F, R>(&Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120562,"byte_end":120637,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120642,"byte_end":120720,"line_start":451,"line_end":451,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120725,"byte_end":120793,"line_start":452,"line_end":452,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120798,"byte_end":120801,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Handle::enter`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120806,"byte_end":120863,"line_start":454,"line_end":454,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120868,"byte_end":120871,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120876,"byte_end":120916,"line_start":456,"line_end":456,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120921,"byte_end":120968,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ [`Handle::enter`]: fn@crate::runtime::Handle::enter","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120973,"byte_end":121028,"line_start":458,"line_end":458,"column_start":5,"column_end":60}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121033,"byte_end":121070,"line_start":459,"line_end":459,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121075,"byte_end":121078,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121083,"byte_end":121096,"line_start":461,"line_end":461,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121101,"byte_end":121104,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121109,"byte_end":121116,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121121,"byte_end":121153,"line_start":464,"line_end":464,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121158,"byte_end":121161,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121166,"byte_end":121208,"line_start":466,"line_end":466,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `rt.enter` below, this would panic.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121213,"byte_end":121275,"line_start":467,"line_end":467,"column_start":5,"column_end":67}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121280,"byte_end":121313,"line_start":468,"line_end":468,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121318,"byte_end":121350,"line_start":469,"line_end":469,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121355,"byte_end":121366,"line_start":470,"line_end":470,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121371,"byte_end":121376,"line_start":471,"line_end":471,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121381,"byte_end":121384,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121389,"byte_end":121404,"line_start":473,"line_end":473,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121409,"byte_end":121450,"line_start":474,"line_end":474,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121455,"byte_end":121458,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121463,"byte_end":121506,"line_start":476,"line_end":476,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121511,"byte_end":121514,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121519,"byte_end":121594,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/     rt.enter(|| function_that_spawns(s));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121599,"byte_end":121644,"line_start":479,"line_end":479,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121649,"byte_end":121654,"line_start":480,"line_end":480,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121659,"byte_end":121666,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122270,"byte_end":122276,"line_start":506,"line_end":506,"column_start":12,"column_end":18},"name":"handle","qualname":"<Runtime>::handle","value":"pub fn handle(&Self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the runtime's spawner.","sig":null,"attributes":[{"value":"/ Return a handle to the runtime's spawner.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121790,"byte_end":121835,"line_start":489,"line_end":489,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121840,"byte_end":121843,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ The returned handle can be used to spawn tasks that run on this runtime, and can","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121848,"byte_end":121932,"line_start":491,"line_end":491,"column_start":5,"column_end":89}},{"value":"/ be cloned to allow moving the `Handle` to other threads.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121937,"byte_end":121997,"line_start":492,"line_end":492,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122002,"byte_end":122005,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122010,"byte_end":122024,"line_start":494,"line_end":494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122029,"byte_end":122032,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122037,"byte_end":122044,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122049,"byte_end":122081,"line_start":497,"line_end":497,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122086,"byte_end":122089,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122094,"byte_end":122121,"line_start":499,"line_end":499,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122126,"byte_end":122144,"line_start":500,"line_end":500,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122149,"byte_end":122152,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122157,"byte_end":122186,"line_start":502,"line_end":502,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122191,"byte_end":122194,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ handle.spawn(async { println!(\"hello\"); });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122199,"byte_end":122246,"line_start":504,"line_end":504,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122251,"byte_end":122258,"line_start":505,"line_end":505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123684,"byte_end":123700,"line_start":545,"line_end":545,"column_start":12,"column_end":28},"name":"shutdown_timeout","qualname":"<Runtime>::shutdown_timeout","value":"pub fn shutdown_timeout(Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, waiting for at most `duration` for all spawned\n task to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, waiting for at most `duration` for all spawned","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122329,"byte_end":122401,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ task to shutdown.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122406,"byte_end":122427,"line_start":511,"line_end":511,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122432,"byte_end":122435,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ Usually, dropping a `Runtime` handle is sufficient as tasks are able to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122440,"byte_end":122515,"line_start":513,"line_end":513,"column_start":5,"column_end":80}},{"value":"/ shutdown in a timely fashion. However, dropping a `Runtime` will wait","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122520,"byte_end":122593,"line_start":514,"line_end":514,"column_start":5,"column_end":78}},{"value":"/ indefinitely for all tasks to terminate, and there are cases where a long","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122598,"byte_end":122675,"line_start":515,"line_end":515,"column_start":5,"column_end":82}},{"value":"/ blocking task has been spawned, which can block dropping `Runtime`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122680,"byte_end":122751,"line_start":516,"line_end":516,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122756,"byte_end":122759,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ In this case, calling `shutdown_timeout` with an explicit wait timeout","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122764,"byte_end":122838,"line_start":518,"line_end":518,"column_start":5,"column_end":79}},{"value":"/ can work. The `shutdown_timeout` will signal all tasks to shutdown and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122843,"byte_end":122917,"line_start":519,"line_end":519,"column_start":5,"column_end":79}},{"value":"/ will wait for at most `duration` for all spawned tasks to terminate. If","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122922,"byte_end":122997,"line_start":520,"line_end":520,"column_start":5,"column_end":80}},{"value":"/ `timeout` elapses before all tasks are dropped, the function returns and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123002,"byte_end":123078,"line_start":521,"line_end":521,"column_start":5,"column_end":81}},{"value":"/ outstanding tasks are potentially leaked.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123083,"byte_end":123128,"line_start":522,"line_end":522,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123133,"byte_end":123136,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123141,"byte_end":123155,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123160,"byte_end":123163,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123168,"byte_end":123175,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123180,"byte_end":123212,"line_start":527,"line_end":527,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123217,"byte_end":123237,"line_start":528,"line_end":528,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123242,"byte_end":123245,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ use std::thread;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123250,"byte_end":123270,"line_start":530,"line_end":530,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123275,"byte_end":123303,"line_start":531,"line_end":531,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123308,"byte_end":123311,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123316,"byte_end":123331,"line_start":533,"line_end":533,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123336,"byte_end":123385,"line_start":534,"line_end":534,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123390,"byte_end":123393,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123398,"byte_end":123434,"line_start":536,"line_end":536,"column_start":5,"column_end":41}},{"value":"/        task::spawn_blocking(move || {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123439,"byte_end":123480,"line_start":537,"line_end":537,"column_start":5,"column_end":46}},{"value":"/            thread::sleep(Duration::from_secs(10_000));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123485,"byte_end":123543,"line_start":538,"line_end":538,"column_start":5,"column_end":63}},{"value":"/        });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123548,"byte_end":123562,"line_start":539,"line_end":539,"column_start":5,"column_end":19}},{"value":"/    });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123567,"byte_end":123577,"line_start":540,"line_end":540,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123582,"byte_end":123585,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/    runtime.shutdown_timeout(Duration::from_millis(100));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123590,"byte_end":123650,"line_start":542,"line_end":542,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123655,"byte_end":123660,"line_start":543,"line_end":543,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123665,"byte_end":123672,"line_start":544,"line_end":544,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124980,"byte_end":124999,"line_start":578,"line_end":578,"column_start":12,"column_end":31},"name":"shutdown_background","qualname":"<Runtime>::shutdown_background","value":"pub fn shutdown_background(Self)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, without waiting for any spawned tasks to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, without waiting for any spawned tasks to shutdown.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123862,"byte_end":123938,"line_start":552,"line_end":552,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123943,"byte_end":123946,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ This can be useful if you want to drop a runtime from within another runtime.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123951,"byte_end":124032,"line_start":554,"line_end":554,"column_start":5,"column_end":86}},{"value":"/ Normally, dropping a runtime will block indefinitely for spawned blocking tasks","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124037,"byte_end":124120,"line_start":555,"line_end":555,"column_start":5,"column_end":88}},{"value":"/ to complete, which would normally not be permitted within an asynchronous context.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124125,"byte_end":124211,"line_start":556,"line_end":556,"column_start":5,"column_end":91}},{"value":"/ By calling `shutdown_background()`, you can drop the runtime from such a context.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124216,"byte_end":124301,"line_start":557,"line_end":557,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124306,"byte_end":124309,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ Note however, that because we do not wait for any blocking tasks to complete, this","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124314,"byte_end":124400,"line_start":559,"line_end":559,"column_start":5,"column_end":91}},{"value":"/ may result in a resource leak (in that any blocking tasks are still running until they","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124405,"byte_end":124495,"line_start":560,"line_end":560,"column_start":5,"column_end":95}},{"value":"/ return.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124500,"byte_end":124511,"line_start":561,"line_end":561,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124516,"byte_end":124519,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `shutdown_timeout(Duration::of_nanos(0))`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124524,"byte_end":124609,"line_start":563,"line_end":563,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124614,"byte_end":124617,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124622,"byte_end":124629,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124634,"byte_end":124666,"line_start":566,"line_end":566,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124671,"byte_end":124674,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124679,"byte_end":124694,"line_start":568,"line_end":568,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124699,"byte_end":124748,"line_start":569,"line_end":569,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124753,"byte_end":124756,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124761,"byte_end":124797,"line_start":571,"line_end":571,"column_start":5,"column_end":41}},{"value":"/        let inner_runtime = Runtime::new().unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124802,"byte_end":124857,"line_start":572,"line_end":572,"column_start":5,"column_end":60}},{"value":"/        // ...","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124862,"byte_end":124879,"line_start":573,"line_end":573,"column_start":5,"column_end":22}},{"value":"/        inner_runtime.shutdown_background();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124884,"byte_end":124931,"line_start":574,"line_end":574,"column_start":5,"column_end":52}},{"value":"/    });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124936,"byte_end":124946,"line_start":575,"line_end":575,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124951,"byte_end":124956,"line_start":576,"line_end":576,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124961,"byte_end":124968,"line_start":577,"line_end":577,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":5750},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"signal","qualname":"::signal","value":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","parent":null,"children":[{"krate":0,"index":5751},{"krate":0,"index":5758},{"krate":0,"index":5759},{"krate":0,"index":5807},{"krate":0,"index":5811}],"decl_id":null,"docs":" Asynchronous signal handling for Tokio","sig":null,"attributes":[{"value":"cfg(feature = \"signal\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":20815,"byte_end":20841,"line_start":210,"line_end":210,"column_start":13,"column_end":39}},{"value":"cfg(not(loom))","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":20916,"byte_end":20933,"line_start":212,"line_end":212,"column_start":13,"column_end":30}},{"value":"/ Asynchronous signal handling for Tokio","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8824293,"byte_end":8824335,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8824336,"byte_end":8824339,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Note that signal handling is in general a very tricky topic and should be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8824340,"byte_end":8824417,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ used with great care. This crate attempts to implement 'best practice' for","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8824418,"byte_end":8824496,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ signal handling, but it should be evaluated for your own applications' needs","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8824497,"byte_end":8824577,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/ to see if it's suitable.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8824578,"byte_end":8824606,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8824607,"byte_end":8824610,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The are some fundamental limitations of this crate documented on the OS","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8824611,"byte_end":8824686,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ specific structures, as well.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8824687,"byte_end":8824720,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8824721,"byte_end":8824724,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8824725,"byte_end":8824739,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8824740,"byte_end":8824743,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Print on \"ctrl-c\" notification.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8824744,"byte_end":8824779,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8824780,"byte_end":8824783,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8824784,"byte_end":8824802,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8824803,"byte_end":8824825,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8824826,"byte_end":8824829,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8824830,"byte_end":8824848,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8824849,"byte_end":8824912,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/     signal::ctrl_c().await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8824913,"byte_end":8824945,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/     println!(\"ctrl-c received!\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8824946,"byte_end":8824983,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8824984,"byte_end":8824998,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8824999,"byte_end":8825004,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8825005,"byte_end":8825012,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8825013,"byte_end":8825016,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Wait for SIGHUP on Unix","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8825017,"byte_end":8825044,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8825045,"byte_end":8825048,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8825049,"byte_end":8825067,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # #[cfg(unix)] {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8825068,"byte_end":8825088,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8825089,"byte_end":8825139,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8825140,"byte_end":8825143,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8825144,"byte_end":8825162,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8825163,"byte_end":8825226,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8825227,"byte_end":8825275,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8825276,"byte_end":8825331,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8825332,"byte_end":8825335,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8825336,"byte_end":8825386,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"/     loop {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8825387,"byte_end":8825401,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/         stream.recv().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8825402,"byte_end":8825434,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8825435,"byte_end":8825474,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8825475,"byte_end":8825484,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8825485,"byte_end":8825490,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8825491,"byte_end":8825498,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8825499,"byte_end":8825506,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5755},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8827582,"byte_end":8827588,"line_start":50,"line_end":50,"column_start":14,"column_end":20},"name":"ctrl_c","qualname":"::signal::ctrl_c::ctrl_c","value":"pub async fn ctrl_c() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when a \"ctrl-c\" notification is sent to the process.","sig":null,"attributes":[{"value":"/ Completes when a \"ctrl-c\" notification is sent to the process.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8825880,"byte_end":8825946,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8825947,"byte_end":8825950,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ While signals are handled very differently between Unix and Windows, both","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8825951,"byte_end":8826028,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ platforms support receiving a signal on \"ctrl-c\". This function provides a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8826029,"byte_end":8826107,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ portable API for receiving this notification.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8826108,"byte_end":8826157,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8826158,"byte_end":8826161,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Once the returned future is polled, a listener is registered. The future","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8826162,"byte_end":8826238,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ will complete on the first received `ctrl-c` **after** the initial call to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8826239,"byte_end":8826317,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ either `Future::poll` or `.await`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8826318,"byte_end":8826356,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8826357,"byte_end":8826360,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8826361,"byte_end":8826374,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8826375,"byte_end":8826378,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ On Unix platforms, the first time that a `Signal` instance is registered for a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8826379,"byte_end":8826461,"line_start":20,"line_end":20,"column_start":1,"column_end":83}},{"value":"/ particular signal kind, an OS signal-handler is installed which replaces the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8826462,"byte_end":8826542,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ default platform behavior when that signal is received, **for the duration of","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8826543,"byte_end":8826624,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ the entire process**.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8826625,"byte_end":8826650,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8826651,"byte_end":8826654,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8826655,"byte_end":8826728,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ receives a signal generated by \"CTRL+C\" on the terminal. But, when a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8826729,"byte_end":8826801,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `ctrl_c` stream is created to listen for this signal, the time it arrives,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8826802,"byte_end":8826880,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ it will be translated to a stream event, and the process will continue to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8826881,"byte_end":8826958,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ execute.  **Even if this `Signal` instance is dropped, subsequent SIGINT","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8826959,"byte_end":8827035,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ deliveries will end up captured by Tokio, and the default platform behavior","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8827036,"byte_end":8827115,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ will NOT be reset**.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8827116,"byte_end":8827140,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8827141,"byte_end":8827144,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8827145,"byte_end":8827223,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8827224,"byte_end":8827284,"line_start":34,"line_end":34,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8827285,"byte_end":8827288,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8827289,"byte_end":8827303,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8827304,"byte_end":8827307,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8827308,"byte_end":8827326,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8827327,"byte_end":8827349,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8827350,"byte_end":8827353,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8827354,"byte_end":8827372,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8827373,"byte_end":8827394,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/     println!(\"waiting for ctrl-c\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8827395,"byte_end":8827434,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8827435,"byte_end":8827438,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     signal::ctrl_c().await.expect(\"failed to listen for event\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8827439,"byte_end":8827507,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8827508,"byte_end":8827511,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     println!(\"received ctrl-c event\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8827512,"byte_end":8827554,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8827555,"byte_end":8827560,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8827561,"byte_end":8827568,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":5811},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::signal::unix","value":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","parent":null,"children":[{"krate":0,"index":5812},{"krate":0,"index":5813},{"krate":0,"index":5814},{"krate":0,"index":5815},{"krate":0,"index":5816},{"krate":0,"index":5817},{"krate":0,"index":5818},{"krate":0,"index":5819},{"krate":0,"index":5820},{"krate":0,"index":5821},{"krate":0,"index":5822},{"krate":0,"index":5823},{"krate":0,"index":5824},{"krate":0,"index":5825},{"krate":0,"index":5826},{"krate":0,"index":5827},{"krate":0,"index":5828},{"krate":0,"index":5829},{"krate":0,"index":5830},{"krate":0,"index":5831},{"krate":0,"index":5832},{"krate":0,"index":5833},{"krate":0,"index":5834},{"krate":0,"index":5835},{"krate":0,"index":5836},{"krate":0,"index":5837},{"krate":0,"index":5838},{"krate":0,"index":5839},{"krate":0,"index":5840},{"krate":0,"index":5841},{"krate":0,"index":5842},{"krate":0,"index":5845},{"krate":0,"index":5906},{"krate":0,"index":5909},{"krate":0,"index":5852},{"krate":0,"index":5911},{"krate":0,"index":5917},{"krate":0,"index":5915},{"krate":0,"index":5914},{"krate":0,"index":5854},{"krate":0,"index":5867},{"krate":0,"index":5871},{"krate":0,"index":5873},{"krate":0,"index":5874},{"krate":0,"index":5919},{"krate":0,"index":5921},{"krate":0,"index":5878},{"krate":0,"index":5880},{"krate":0,"index":5923},{"krate":0,"index":5926},{"krate":0,"index":5884},{"krate":0,"index":5885},{"krate":0,"index":5928},{"krate":0,"index":5892}],"decl_id":null,"docs":" Unix-specific types for signal handling.","sig":null,"attributes":[{"value":"/ Unix-specific types for signal handling.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8837026,"byte_end":8837070,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8837071,"byte_end":8837074,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only defined on Unix platforms and contains the primary","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8837075,"byte_end":8837149,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ `Signal` type for receiving notifications of signals.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8837150,"byte_end":8837207,"line_start":4,"line_end":4,"column_start":1,"column_end":58}},{"value":"cfg(unix)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8837209,"byte_end":8837222,"line_start":6,"line_end":6,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5911},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8838537,"byte_end":8838547,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"SignalKind","qualname":"::signal::unix::SignalKind","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents the specific kind of signal to listen for.\n","sig":null,"attributes":[{"value":"/ Represents the specific kind of signal to listen for.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8838438,"byte_end":8838495,"line_start":59,"line_end":59,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5855},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8838946,"byte_end":8838954,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<SignalKind>::from_raw","value":"pub fn from_raw(c_int) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows for listening to any valid OS signal.","sig":null,"attributes":[{"value":"/ Allows for listening to any valid OS signal.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8838579,"byte_end":8838627,"line_start":64,"line_end":64,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8838632,"byte_end":8838635,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ For example, this can be used for listening for platform-specific","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8838640,"byte_end":8838709,"line_start":66,"line_end":66,"column_start":5,"column_end":74}},{"value":"/ signals.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8838714,"byte_end":8838726,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8838731,"byte_end":8838749,"line_start":68,"line_end":68,"column_start":5,"column_end":23}},{"value":"/ # use tokio::signal::unix::SignalKind;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8838754,"byte_end":8838796,"line_start":69,"line_end":69,"column_start":5,"column_end":47}},{"value":"/ # let signum = -1;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8838801,"byte_end":8838823,"line_start":70,"line_end":70,"column_start":5,"column_end":27}},{"value":"/ // let signum = libc::OS_SPECIFIC_SIGNAL;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8838828,"byte_end":8838873,"line_start":71,"line_end":71,"column_start":5,"column_end":50}},{"value":"/ let kind = SignalKind::from_raw(signum);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8838878,"byte_end":8838922,"line_start":72,"line_end":72,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8838927,"byte_end":8838934,"line_start":73,"line_end":73,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5856},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8839208,"byte_end":8839213,"line_start":82,"line_end":82,"column_start":12,"column_end":17},"name":"alarm","qualname":"<SignalKind>::alarm","value":"pub fn alarm() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGALRM signal.","sig":null,"attributes":[{"value":"/ Represents the SIGALRM signal.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8839012,"byte_end":8839046,"line_start":78,"line_end":78,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8839051,"byte_end":8839054,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when a real-time timer has expired.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8839059,"byte_end":8839134,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8839139,"byte_end":8839196,"line_start":81,"line_end":81,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5857},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8839455,"byte_end":8839460,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"child","qualname":"<SignalKind>::child","value":"pub fn child() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGCHLD signal.","sig":null,"attributes":[{"value":"/ Represents the SIGCHLD signal.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8839265,"byte_end":8839299,"line_start":86,"line_end":86,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8839304,"byte_end":8839307,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the status of a child process","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8839312,"byte_end":8839386,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ has changed. By default, this signal is ignored.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8839391,"byte_end":8839443,"line_start":89,"line_end":89,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5858},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8839706,"byte_end":8839712,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"hangup","qualname":"<SignalKind>::hangup","value":"pub fn hangup() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGHUP signal.","sig":null,"attributes":[{"value":"/ Represents the SIGHUP signal.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8839512,"byte_end":8839545,"line_start":94,"line_end":94,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8839550,"byte_end":8839553,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the terminal is disconnected.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8839558,"byte_end":8839632,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8839637,"byte_end":8839694,"line_start":97,"line_end":97,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5859},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8840365,"byte_end":8840374,"line_start":121,"line_end":121,"column_start":12,"column_end":21},"name":"interrupt","qualname":"<SignalKind>::interrupt","value":"pub fn interrupt() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGINT signal.","sig":null,"attributes":[{"value":"/ Represents the SIGINT signal.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8840182,"byte_end":8840215,"line_start":117,"line_end":117,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8840220,"byte_end":8840223,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to interrupt a program.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8840228,"byte_end":8840291,"line_start":119,"line_end":119,"column_start":5,"column_end":68}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8840296,"byte_end":8840353,"line_start":120,"line_end":120,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5860},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8840623,"byte_end":8840625,"line_start":129,"line_end":129,"column_start":12,"column_end":14},"name":"io","qualname":"<SignalKind>::io","value":"pub fn io() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGIO signal.","sig":null,"attributes":[{"value":"/ Represents the SIGIO signal.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8840425,"byte_end":8840457,"line_start":125,"line_end":125,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8840462,"byte_end":8840465,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when I/O operations are possible","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8840470,"byte_end":8840542,"line_start":127,"line_end":127,"column_start":5,"column_end":77}},{"value":"/ on some file descriptor. By default, this signal is ignored.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8840547,"byte_end":8840611,"line_start":128,"line_end":128,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":5861},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8840909,"byte_end":8840913,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"pipe","qualname":"<SignalKind>::pipe","value":"pub fn pipe() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGPIPE signal.","sig":null,"attributes":[{"value":"/ Represents the SIGPIPE signal.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8840675,"byte_end":8840709,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8840714,"byte_end":8840717,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the process attempts to write","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8840722,"byte_end":8840796,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ to a pipe which has no reader. By default, the process is terminated by","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8840801,"byte_end":8840876,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ this signal.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8840881,"byte_end":8840897,"line_start":137,"line_end":137,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":5862},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8841216,"byte_end":8841220,"line_start":147,"line_end":147,"column_start":12,"column_end":16},"name":"quit","qualname":"<SignalKind>::quit","value":"pub fn quit() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGQUIT signal.","sig":null,"attributes":[{"value":"/ Represents the SIGQUIT signal.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8840965,"byte_end":8840999,"line_start":142,"line_end":142,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8841004,"byte_end":8841007,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to issue a shutdown of the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8841012,"byte_end":8841078,"line_start":144,"line_end":144,"column_start":5,"column_end":71}},{"value":"/ process, after which the OS will dump the process core.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8841083,"byte_end":8841142,"line_start":145,"line_end":145,"column_start":5,"column_end":64}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8841147,"byte_end":8841204,"line_start":146,"line_end":146,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5863},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8841468,"byte_end":8841477,"line_start":155,"line_end":155,"column_start":12,"column_end":21},"name":"terminate","qualname":"<SignalKind>::terminate","value":"pub fn terminate() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGTERM signal.","sig":null,"attributes":[{"value":"/ Represents the SIGTERM signal.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8841272,"byte_end":8841306,"line_start":151,"line_end":151,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8841311,"byte_end":8841314,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to issue a shutdown of the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8841319,"byte_end":8841385,"line_start":153,"line_end":153,"column_start":5,"column_end":71}},{"value":"/ process. By default, the process is terminated by this signal.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8841390,"byte_end":8841456,"line_start":154,"line_end":154,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":5864},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8841700,"byte_end":8841713,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"name":"user_defined1","qualname":"<SignalKind>::user_defined1","value":"pub fn user_defined1() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGUSR1 signal.","sig":null,"attributes":[{"value":"/ Represents the SIGUSR1 signal.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8841529,"byte_end":8841563,"line_start":159,"line_end":159,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8841568,"byte_end":8841571,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this is a user defined signal.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8841576,"byte_end":8841626,"line_start":161,"line_end":161,"column_start":5,"column_end":55}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8841631,"byte_end":8841688,"line_start":162,"line_end":162,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5865},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8841936,"byte_end":8841949,"line_start":171,"line_end":171,"column_start":12,"column_end":25},"name":"user_defined2","qualname":"<SignalKind>::user_defined2","value":"pub fn user_defined2() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGUSR2 signal.","sig":null,"attributes":[{"value":"/ Represents the SIGUSR2 signal.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8841765,"byte_end":8841799,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8841804,"byte_end":8841807,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this is a user defined signal.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8841812,"byte_end":8841862,"line_start":169,"line_end":169,"column_start":5,"column_end":55}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8841867,"byte_end":8841924,"line_start":170,"line_end":170,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5866},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8842181,"byte_end":8842194,"line_start":179,"line_end":179,"column_start":12,"column_end":25},"name":"window_change","qualname":"<SignalKind>::window_change","value":"pub fn window_change() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGWINCH signal.","sig":null,"attributes":[{"value":"/ Represents the SIGWINCH signal.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8842001,"byte_end":8842036,"line_start":175,"line_end":175,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8842041,"byte_end":8842044,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the terminal window is resized.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8842049,"byte_end":8842125,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ By default, this signal is ignored.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8842130,"byte_end":8842169,"line_start":178,"line_end":178,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":5923},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8849617,"byte_end":8849623,"line_start":378,"line_end":378,"column_start":12,"column_end":18},"name":"Signal","qualname":"::signal::unix::Signal","value":"Signal {  }","parent":null,"children":[{"krate":0,"index":5924},{"krate":0,"index":5925}],"decl_id":null,"docs":" A stream of events for receiving a particular type of OS signal.","sig":null,"attributes":[{"value":"/ A stream of events for receiving a particular type of OS signal.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8846852,"byte_end":8846920,"line_start":314,"line_end":314,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8846921,"byte_end":8846924,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ In general signal handling on Unix is a pretty tricky topic, and this","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8846925,"byte_end":8846998,"line_start":316,"line_end":316,"column_start":1,"column_end":74}},{"value":"/ structure is no exception! There are some important limitations to keep in","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8846999,"byte_end":8847077,"line_start":317,"line_end":317,"column_start":1,"column_end":79}},{"value":"/ mind when using `Signal` streams:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8847078,"byte_end":8847115,"line_start":318,"line_end":318,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8847116,"byte_end":8847119,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ * Signals handling in Unix already necessitates coalescing signals","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8847120,"byte_end":8847190,"line_start":320,"line_end":320,"column_start":1,"column_end":71}},{"value":"/   together sometimes. This `Signal` stream is also no exception here in","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8847191,"byte_end":8847266,"line_start":321,"line_end":321,"column_start":1,"column_end":76}},{"value":"/   that it will also coalesce signals. That is, even if the signal handler","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8847267,"byte_end":8847344,"line_start":322,"line_end":322,"column_start":1,"column_end":78}},{"value":"/   for this process runs multiple times, the `Signal` stream may only return","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8847345,"byte_end":8847424,"line_start":323,"line_end":323,"column_start":1,"column_end":80}},{"value":"/   one signal notification. Specifically, before `poll` is called, all","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8847425,"byte_end":8847498,"line_start":324,"line_end":324,"column_start":1,"column_end":74}},{"value":"/   signal notifications are coalesced into one item returned from `poll`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8847499,"byte_end":8847575,"line_start":325,"line_end":325,"column_start":1,"column_end":77}},{"value":"/   Once `poll` has been called, however, a further signal is guaranteed to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8847576,"byte_end":8847653,"line_start":326,"line_end":326,"column_start":1,"column_end":78}},{"value":"/   be yielded as an item.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8847654,"byte_end":8847682,"line_start":327,"line_end":327,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8847683,"byte_end":8847686,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/   Put another way, any element pulled off the returned stream corresponds to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8847687,"byte_end":8847767,"line_start":329,"line_end":329,"column_start":1,"column_end":81}},{"value":"/   *at least one* signal, but possibly more.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8847768,"byte_end":8847815,"line_start":330,"line_end":330,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8847816,"byte_end":8847819,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ * Signal handling in general is relatively inefficient. Although some","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8847820,"byte_end":8847893,"line_start":332,"line_end":332,"column_start":1,"column_end":74}},{"value":"/   improvements are possible in this crate, it's recommended to not plan on","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8847894,"byte_end":8847972,"line_start":333,"line_end":333,"column_start":1,"column_end":79}},{"value":"/   having millions of signal channels open.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8847973,"byte_end":8848019,"line_start":334,"line_end":334,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8848020,"byte_end":8848023,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ If you've got any questions about this feel free to open an issue on the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8848024,"byte_end":8848100,"line_start":336,"line_end":336,"column_start":1,"column_end":77}},{"value":"/ repo! New approaches to alleviate some of these limitations are always","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8848101,"byte_end":8848175,"line_start":337,"line_end":337,"column_start":1,"column_end":75}},{"value":"/ appreciated!","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8848176,"byte_end":8848192,"line_start":338,"line_end":338,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8848193,"byte_end":8848196,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8848197,"byte_end":8848210,"line_start":340,"line_end":340,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8848211,"byte_end":8848214,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ The first time that a `Signal` instance is registered for a particular","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8848215,"byte_end":8848289,"line_start":342,"line_end":342,"column_start":1,"column_end":75}},{"value":"/ signal kind, an OS signal-handler is installed which replaces the default","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8848290,"byte_end":8848367,"line_start":343,"line_end":343,"column_start":1,"column_end":78}},{"value":"/ platform behavior when that signal is received, **for the duration of the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8848368,"byte_end":8848445,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/ entire process**.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8848446,"byte_end":8848467,"line_start":345,"line_end":345,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8848468,"byte_end":8848471,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8848472,"byte_end":8848545,"line_start":347,"line_end":347,"column_start":1,"column_end":74}},{"value":"/ receives SIGINT. But, when a `Signal` instance is created to listen for","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8848546,"byte_end":8848621,"line_start":348,"line_end":348,"column_start":1,"column_end":76}},{"value":"/ this signal, the next SIGINT that arrives will be translated to a stream","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8848622,"byte_end":8848698,"line_start":349,"line_end":349,"column_start":1,"column_end":77}},{"value":"/ event, and the process will continue to execute. **Even if this `Signal`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8848699,"byte_end":8848775,"line_start":350,"line_end":350,"column_start":1,"column_end":77}},{"value":"/ instance is dropped, subsequent SIGINT deliveries will end up captured by","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8848776,"byte_end":8848853,"line_start":351,"line_end":351,"column_start":1,"column_end":78}},{"value":"/ Tokio, and the default platform behavior will NOT be reset**.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8848854,"byte_end":8848919,"line_start":352,"line_end":352,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8848920,"byte_end":8848923,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8848924,"byte_end":8849002,"line_start":354,"line_end":354,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8849003,"byte_end":8849063,"line_start":355,"line_end":355,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8849064,"byte_end":8849067,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8849068,"byte_end":8849082,"line_start":357,"line_end":357,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8849083,"byte_end":8849086,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ Wait for SIGHUP","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8849087,"byte_end":8849106,"line_start":359,"line_end":359,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8849107,"byte_end":8849110,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8849111,"byte_end":8849129,"line_start":361,"line_end":361,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8849130,"byte_end":8849180,"line_start":362,"line_end":362,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8849181,"byte_end":8849184,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8849185,"byte_end":8849203,"line_start":364,"line_end":364,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8849204,"byte_end":8849267,"line_start":365,"line_end":365,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8849268,"byte_end":8849316,"line_start":366,"line_end":366,"column_start":1,"column_end":49}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8849317,"byte_end":8849372,"line_start":367,"line_end":367,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8849373,"byte_end":8849376,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8849377,"byte_end":8849427,"line_start":369,"line_end":369,"column_start":1,"column_end":51}},{"value":"/     loop {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8849428,"byte_end":8849442,"line_start":370,"line_end":370,"column_start":1,"column_end":15}},{"value":"/         stream.recv().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8849443,"byte_end":8849475,"line_start":371,"line_end":371,"column_start":1,"column_end":33}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8849476,"byte_end":8849515,"line_start":372,"line_end":372,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8849516,"byte_end":8849525,"line_start":373,"line_end":373,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8849526,"byte_end":8849531,"line_start":374,"line_end":374,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8849532,"byte_end":8849539,"line_start":375,"line_end":375,"column_start":1,"column_end":8}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8849540,"byte_end":8849588,"line_start":376,"line_end":376,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5884},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8850716,"byte_end":8850722,"line_start":405,"line_end":405,"column_start":8,"column_end":14},"name":"signal","qualname":"::signal::unix::signal","value":"pub fn signal(SignalKind) -> io::Result<Signal>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream which will receive notifications when the current\n process receives the specified signal `kind`.","sig":null,"attributes":[{"value":"/ Creates a new stream which will receive notifications when the current","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8849671,"byte_end":8849745,"line_start":383,"line_end":383,"column_start":1,"column_end":75}},{"value":"/ process receives the specified signal `kind`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8849746,"byte_end":8849795,"line_start":384,"line_end":384,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8849796,"byte_end":8849799,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ This function will create a new stream which binds to the default reactor.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8849800,"byte_end":8849878,"line_start":386,"line_end":386,"column_start":1,"column_end":79}},{"value":"/ The `Signal` stream is an infinite stream which will receive","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8849879,"byte_end":8849943,"line_start":387,"line_end":387,"column_start":1,"column_end":65}},{"value":"/ notifications whenever a signal is received. More documentation can be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8849944,"byte_end":8850018,"line_start":388,"line_end":388,"column_start":1,"column_end":75}},{"value":"/ found on `Signal` itself, but to reiterate:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8850019,"byte_end":8850066,"line_start":389,"line_end":389,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8850067,"byte_end":8850070,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ * Signals may be coalesced beyond what the kernel already does.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8850071,"byte_end":8850138,"line_start":391,"line_end":391,"column_start":1,"column_end":68}},{"value":"/ * Once a signal handler is registered with the process the underlying","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8850139,"byte_end":8850212,"line_start":392,"line_end":392,"column_start":1,"column_end":74}},{"value":"/   libc signal handler is never unregistered.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8850213,"byte_end":8850261,"line_start":393,"line_end":393,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8850262,"byte_end":8850265,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ A `Signal` stream can be created for a particular signal number","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8850266,"byte_end":8850333,"line_start":395,"line_end":395,"column_start":1,"column_end":68}},{"value":"/ multiple times. When a signal is received then all the associated","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8850334,"byte_end":8850403,"line_start":396,"line_end":396,"column_start":1,"column_end":70}},{"value":"/ channels will receive the signal notification.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8850404,"byte_end":8850454,"line_start":397,"line_end":397,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8850455,"byte_end":8850458,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8850459,"byte_end":8850471,"line_start":399,"line_end":399,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8850472,"byte_end":8850475,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ * If the lower-level C functions fail for some reason.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8850476,"byte_end":8850534,"line_start":401,"line_end":401,"column_start":1,"column_end":59}},{"value":"/ * If the previous initialization of this specific signal failed.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8850535,"byte_end":8850603,"line_start":402,"line_end":402,"column_start":1,"column_end":69}},{"value":"/ * If the signal is one of","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8850604,"byte_end":8850633,"line_start":403,"line_end":403,"column_start":1,"column_end":30}},{"value":"/   [`signal_hook::FORBIDDEN`](fn@signal_hook_registry::register#panics)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8850634,"byte_end":8850708,"line_start":404,"line_end":404,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":5886},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8851933,"byte_end":8851937,"line_start":447,"line_end":447,"column_start":18,"column_end":22},"name":"recv","qualname":"<Signal>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next signal notification event.","sig":null,"attributes":[{"value":"/ Receives the next signal notification event.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8851226,"byte_end":8851274,"line_start":424,"line_end":424,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8851279,"byte_end":8851282,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8851287,"byte_end":8851359,"line_start":426,"line_end":426,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8851364,"byte_end":8851367,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8851372,"byte_end":8851386,"line_start":428,"line_end":428,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8851391,"byte_end":8851394,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Wait for SIGHUP","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8851399,"byte_end":8851418,"line_start":430,"line_end":430,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8851423,"byte_end":8851426,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8851431,"byte_end":8851449,"line_start":432,"line_end":432,"column_start":5,"column_end":23}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8851454,"byte_end":8851504,"line_start":433,"line_end":433,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8851509,"byte_end":8851512,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8851517,"byte_end":8851535,"line_start":435,"line_end":435,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8851540,"byte_end":8851603,"line_start":436,"line_end":436,"column_start":5,"column_end":68}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8851608,"byte_end":8851656,"line_start":437,"line_end":437,"column_start":5,"column_end":53}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8851661,"byte_end":8851716,"line_start":438,"line_end":438,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8851721,"byte_end":8851724,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8851729,"byte_end":8851779,"line_start":440,"line_end":440,"column_start":5,"column_end":55}},{"value":"/     loop {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8851784,"byte_end":8851798,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/         stream.recv().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8851803,"byte_end":8851835,"line_start":442,"line_end":442,"column_start":5,"column_end":37}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8851840,"byte_end":8851879,"line_start":443,"line_end":443,"column_start":5,"column_end":44}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8851884,"byte_end":8851893,"line_start":444,"line_end":444,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8851898,"byte_end":8851903,"line_start":445,"line_end":445,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8851908,"byte_end":8851915,"line_start":446,"line_end":446,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5891},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8852886,"byte_end":8852895,"line_start":480,"line_end":480,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Signal>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next signal notification event, outside of an\n `async` context.","sig":null,"attributes":[{"value":"/ Polls to receive the next signal notification event, outside of an","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8852059,"byte_end":8852129,"line_start":452,"line_end":452,"column_start":5,"column_end":75}},{"value":"/ `async` context.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8852134,"byte_end":8852154,"line_start":453,"line_end":453,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8852159,"byte_end":8852162,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8852167,"byte_end":8852239,"line_start":455,"line_end":455,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8852244,"byte_end":8852247,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8852252,"byte_end":8852266,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8852271,"byte_end":8852274,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ Polling from a manually implemented future","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8852279,"byte_end":8852325,"line_start":459,"line_end":459,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8852330,"byte_end":8852333,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8852338,"byte_end":8852356,"line_start":461,"line_end":461,"column_start":5,"column_end":23}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8852361,"byte_end":8852383,"line_start":462,"line_end":462,"column_start":5,"column_end":27}},{"value":"/ use std::future::Future;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8852388,"byte_end":8852416,"line_start":463,"line_end":463,"column_start":5,"column_end":33}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8852421,"byte_end":8852456,"line_start":464,"line_end":464,"column_start":5,"column_end":40}},{"value":"/ use tokio::signal::unix::Signal;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8852461,"byte_end":8852497,"line_start":465,"line_end":465,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8852502,"byte_end":8852505,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ struct MyFuture {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8852510,"byte_end":8852531,"line_start":467,"line_end":467,"column_start":5,"column_end":26}},{"value":"/     signal: Signal,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8852536,"byte_end":8852559,"line_start":468,"line_end":468,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8852564,"byte_end":8852569,"line_start":469,"line_end":469,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8852574,"byte_end":8852577,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ impl Future for MyFuture {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8852582,"byte_end":8852612,"line_start":471,"line_end":471,"column_start":5,"column_end":35}},{"value":"/     type Output = Option<()>;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8852617,"byte_end":8852650,"line_start":472,"line_end":472,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8852655,"byte_end":8852658,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/     fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8852663,"byte_end":8852750,"line_start":474,"line_end":474,"column_start":5,"column_end":92}},{"value":"/         println!(\"polling MyFuture\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8852755,"byte_end":8852796,"line_start":475,"line_end":475,"column_start":5,"column_end":46}},{"value":"/         self.signal.poll_recv(cx)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8852801,"byte_end":8852838,"line_start":476,"line_end":476,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8852843,"byte_end":8852852,"line_start":477,"line_end":477,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8852857,"byte_end":8852862,"line_start":478,"line_end":478,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8852867,"byte_end":8852874,"line_start":479,"line_end":479,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":5931},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":5932},{"krate":0,"index":5952},{"krate":0,"index":5953},{"krate":0,"index":5973},{"krate":0,"index":5974},{"krate":0,"index":5994},{"krate":0,"index":5995},{"krate":0,"index":6086},{"krate":0,"index":6087},{"krate":0,"index":6088},{"krate":0,"index":6108},{"krate":0,"index":6109},{"krate":0,"index":6110},{"krate":0,"index":6111},{"krate":0,"index":6133},{"krate":0,"index":6134},{"krate":0,"index":6157},{"krate":0,"index":6158},{"krate":0,"index":6177},{"krate":0,"index":6178},{"krate":0,"index":6193},{"krate":0,"index":6194},{"krate":0,"index":6209},{"krate":0,"index":6210},{"krate":0,"index":6211},{"krate":0,"index":6212},{"krate":0,"index":6237},{"krate":0,"index":6238},{"krate":0,"index":6261},{"krate":0,"index":6262},{"krate":0,"index":6279},{"krate":0,"index":6280},{"krate":0,"index":6299},{"krate":0,"index":6300},{"krate":0,"index":6301},{"krate":0,"index":6302},{"krate":0,"index":6322},{"krate":0,"index":6323},{"krate":0,"index":6324},{"krate":0,"index":6325},{"krate":0,"index":6367},{"krate":0,"index":6368},{"krate":0,"index":6388},{"krate":0,"index":6389},{"krate":0,"index":6411},{"krate":0,"index":6412},{"krate":0,"index":6433},{"krate":0,"index":6434},{"krate":0,"index":6455},{"krate":0,"index":6456},{"krate":0,"index":6480},{"krate":0,"index":6595},{"krate":0,"index":6618},{"krate":0,"index":6619},{"krate":0,"index":6481},{"krate":0,"index":6482},{"krate":0,"index":6516},{"krate":0,"index":6518}],"decl_id":null,"docs":" Stream utilities for Tokio.","sig":null,"attributes":[{"value":"cfg(feature = \"stream\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21047,"byte_end":21073,"line_start":221,"line_end":221,"column_start":13,"column_end":39}},{"value":"/ Stream utilities for Tokio.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8862065,"byte_end":8862096,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8862097,"byte_end":8862100,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A `Stream` is an asynchronous sequence of values. It can be thought of as an asynchronous version of the standard library's `Iterator` trait.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8862101,"byte_end":8862246,"line_start":3,"line_end":3,"column_start":1,"column_end":146}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8862247,"byte_end":8862250,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module provides helpers to work with them.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8862251,"byte_end":8862302,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":6519},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":8887983,"byte_end":8887992,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AllFuture","qualname":"::stream::all::AllFuture","value":"AllFuture {  }","parent":null,"children":[{"krate":0,"index":6523},{"krate":0,"index":6524}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`all`](super::StreamExt::all) method.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":8887829,"byte_end":8887886,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":8887904,"byte_end":8887971,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6530},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":8889146,"byte_end":8889155,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AnyFuture","qualname":"::stream::any::AnyFuture","value":"AnyFuture {  }","parent":null,"children":[{"krate":0,"index":6534},{"krate":0,"index":6535}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`any`](super::StreamExt::any) method.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":8888992,"byte_end":8889049,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":8889067,"byte_end":8889134,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10287},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/chain.rs","byte_start":8890275,"byte_end":8890280,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":10290},{"krate":0,"index":10291}],"decl_id":null,"docs":" Stream returned by the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10249},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8891513,"byte_end":8891520,"line_start":15,"line_end":15,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":10252},{"krate":0,"index":10253}],"decl_id":null,"docs":" Future returned by the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":7985170,"byte_end":7985179,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":6009},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8892085,"byte_end":8892095,"line_start":36,"line_end":36,"column_start":11,"column_end":21},"name":"FromStream","qualname":"::stream::collect::FromStream","value":"FromStream<T>: sealed::FromStreamPriv<T>","parent":null,"children":[],"decl_id":null,"docs":" Convert from a [`Stream`](crate::stream::Stream).","sig":null,"attributes":[{"value":"/ Convert from a [`Stream`](crate::stream::Stream).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8891672,"byte_end":8891725,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8891726,"byte_end":8891729,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait is not intended to be used directly. Instead, call","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8891730,"byte_end":8891795,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/ [`StreamExt::collect()`](super::StreamExt::collect).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8891796,"byte_end":8891852,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8891853,"byte_end":8891856,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Implementing","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8891857,"byte_end":8891875,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8891876,"byte_end":8891879,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait may not be implemented by third parties. The trait is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8891880,"byte_end":8891959,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ sealed in order to make changes in the future. Stabilization is pending","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8891960,"byte_end":8892035,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ enhancements to the Rust language.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8892036,"byte_end":8892074,"line_start":35,"line_end":35,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":6080},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8896996,"byte_end":8897010,"line_start":231,"line_end":231,"column_start":15,"column_end":29},"name":"FromStreamPriv","qualname":"::stream::collect::sealed::FromStreamPriv","value":"FromStreamPriv<T>","parent":null,"children":[{"krate":0,"index":6082},{"krate":0,"index":6083},{"krate":0,"index":6084},{"krate":0,"index":6085}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6082},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8897090,"byte_end":8897100,"line_start":233,"line_end":233,"column_start":14,"column_end":24},"name":"Collection","qualname":"::stream::collect::sealed::FromStreamPriv::Collection","value":"type Collection;","parent":{"krate":0,"index":6080},"children":[],"decl_id":null,"docs":" Intermediate type used during collection process\n","sig":null,"attributes":[{"value":"/ Intermediate type used during collection process","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8897024,"byte_end":8897076,"line_start":232,"line_end":232,"column_start":9,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":6083},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8897152,"byte_end":8897162,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"initialize","qualname":"::stream::collect::sealed::FromStreamPriv::initialize","value":"pub fn initialize(usize, Option<usize>) -> Self::Collection","parent":{"krate":0,"index":6080},"children":[],"decl_id":null,"docs":" Initialize the collection\n","sig":null,"attributes":[{"value":"/ Initialize the collection","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8897111,"byte_end":8897140,"line_start":235,"line_end":235,"column_start":9,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6084},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8897379,"byte_end":8897385,"line_start":241,"line_end":241,"column_start":12,"column_end":18},"name":"extend","qualname":"::stream::collect::sealed::FromStreamPriv::extend","value":"pub fn extend(&mut Self::Collection, T) -> bool","parent":{"krate":0,"index":6080},"children":[],"decl_id":null,"docs":" Extend the collection with the received item","sig":null,"attributes":[{"value":"/ Extend the collection with the received item","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8897229,"byte_end":8897277,"line_start":238,"line_end":238,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8897286,"byte_end":8897289,"line_start":239,"line_end":239,"column_start":9,"column_end":12}},{"value":"/ Return `true` to continue streaming, `false` complete collection.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8897298,"byte_end":8897367,"line_start":240,"line_end":240,"column_start":9,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":6085},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8897501,"byte_end":8897509,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"finalize","qualname":"::stream::collect::sealed::FromStreamPriv::finalize","value":"pub fn finalize(&mut Self::Collection) -> Self","parent":{"krate":0,"index":6080},"children":[],"decl_id":null,"docs":" Finalize collection into target type.\n","sig":null,"attributes":[{"value":"/ Finalize collection into target type.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8897448,"byte_end":8897489,"line_start":243,"line_end":243,"column_start":9,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":6541},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8897802,"byte_end":8897807,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`empty`](fn@empty) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`](fn@empty) function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8897676,"byte_end":8897724,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8897742,"byte_end":8897790,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6101},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8898397,"byte_end":8898402,"line_start":36,"line_end":36,"column_start":14,"column_end":19},"name":"empty","qualname":"::stream::empty::empty","value":"pub const fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields nothing.","sig":null,"attributes":[{"value":"/ Creates a stream that yields nothing.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8897932,"byte_end":8897973,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8897974,"byte_end":8897977,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and returns `None`. Use","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8897978,"byte_end":8898046,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ [`stream::pending()`](super::pending()) to obtain a stream that is never","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8898047,"byte_end":8898123,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8898124,"byte_end":8898134,"line_start":20,"line_end":20,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8898135,"byte_end":8898138,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8898139,"byte_end":8898153,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8898154,"byte_end":8898157,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8898158,"byte_end":8898174,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8898175,"byte_end":8898178,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8898179,"byte_end":8898186,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8898187,"byte_end":8898228,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8898229,"byte_end":8898232,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8898233,"byte_end":8898251,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8898252,"byte_end":8898273,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/     let mut none = stream::empty::<i32>();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8898274,"byte_end":8898320,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8898321,"byte_end":8898324,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(None, none.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8898325,"byte_end":8898369,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8898370,"byte_end":8898375,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8898376,"byte_end":8898383,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10193},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":8898985,"byte_end":8898991,"line_start":11,"line_end":11,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":10196},{"krate":0,"index":10197}],"decl_id":null,"docs":" Stream returned by the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":7985170,"byte_end":7985179,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10148},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":8900423,"byte_end":8900432,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":10151},{"krate":0,"index":10152}],"decl_id":null,"docs":" Stream returned by the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":7985170,"byte_end":7985179,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10099},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fold.rs","byte_start":8901849,"byte_end":8901859,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"FoldFuture","qualname":"::stream::fold::FoldFuture","value":"FoldFuture {  }","parent":null,"children":[{"krate":0,"index":10103},{"krate":0,"index":10104},{"krate":0,"index":10105}],"decl_id":null,"docs":" Future returned by the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10059},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fuse.rs","byte_start":8903015,"byte_end":8903019,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":10061}],"decl_id":null,"docs":" Stream returned by [`fuse()`][super::StreamExt::fuse].\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6548},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8904151,"byte_end":8904155,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6550}],"decl_id":null,"docs":" Stream for the [`iter`](fn@iter) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`](fn@iter) function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8904027,"byte_end":8904073,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8904091,"byte_end":8904139,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6202},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8904729,"byte_end":8904733,"line_start":32,"line_end":32,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8904207,"byte_end":8904271,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8904272,"byte_end":8904300,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8904301,"byte_end":8904304,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8904305,"byte_end":8904378,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8904379,"byte_end":8904434,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8904435,"byte_end":8904438,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8904439,"byte_end":8904446,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8904447,"byte_end":8904469,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8904470,"byte_end":8904511,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8904512,"byte_end":8904515,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8904516,"byte_end":8904564,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8904565,"byte_end":8904568,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(stream.next().await, Some(17));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8904569,"byte_end":8904615,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, Some(19));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8904616,"byte_end":8904662,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8904663,"byte_end":8904705,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8904706,"byte_end":8904713,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8904714,"byte_end":8904721,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10005},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":8905513,"byte_end":8905516,"line_start":11,"line_end":11,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":10008},{"krate":0,"index":10009}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":7985170,"byte_end":7985179,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9956},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/merge.rs","byte_start":8906586,"byte_end":8906591,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Merge","qualname":"::stream::merge::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":9959},{"krate":0,"index":9960},{"krate":0,"index":9961}],"decl_id":null,"docs":" Stream returned by the [`merge`](super::StreamExt::merge) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6554},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":8908466,"byte_end":8908470,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":6557}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":8908310,"byte_end":8908369,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":8908387,"byte_end":8908454,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6562},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8909166,"byte_end":8909170,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":6564}],"decl_id":null,"docs":" Stream for the [`once`](fn@once) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`once`](fn@once) function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8909042,"byte_end":8909088,"line_start":7,"line_end":7,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8909106,"byte_end":8909154,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6292},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8909742,"byte_end":8909746,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<T>(T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that emits an element exactly once.","sig":null,"attributes":[{"value":"/ Creates a stream that emits an element exactly once.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8909246,"byte_end":8909302,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8909303,"byte_end":8909306,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and emits the provided value once.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8909307,"byte_end":8909386,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8909387,"byte_end":8909390,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8909391,"byte_end":8909405,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8909406,"byte_end":8909409,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8909410,"byte_end":8909417,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8909418,"byte_end":8909459,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8909460,"byte_end":8909463,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8909464,"byte_end":8909482,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8909483,"byte_end":8909504,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     // one is the loneliest number","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8909505,"byte_end":8909543,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/     let mut one = stream::once(1);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8909544,"byte_end":8909582,"line_start":28,"line_end":28,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8909583,"byte_end":8909586,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(Some(1), one.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8909587,"byte_end":8909633,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8909634,"byte_end":8909637,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     // just one, that's all we get","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8909638,"byte_end":8909676,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(None, one.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8909677,"byte_end":8909720,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8909721,"byte_end":8909726,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8909727,"byte_end":8909734,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6568},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8910369,"byte_end":8910376,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`pending`](fn@pending) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending`](fn@pending) function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8910239,"byte_end":8910291,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8910309,"byte_end":8910357,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6315},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8911116,"byte_end":8911123,"line_start":40,"line_end":40,"column_start":14,"column_end":21},"name":"pending","qualname":"::stream::pending::pending","value":"pub const fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that is never ready","sig":null,"attributes":[{"value":"/ Creates a stream that is never ready","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8910507,"byte_end":8910547,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8910548,"byte_end":8910551,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is never ready. Attempting to call","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8910552,"byte_end":8910610,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/ [`next()`](crate::stream::StreamExt::next) will never complete. Use","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8910611,"byte_end":8910682,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ [`stream::empty()`](super::empty()) to obtain a stream that is is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8910683,"byte_end":8910752,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ immediately empty but returns no values.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8910753,"byte_end":8910797,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8910798,"byte_end":8910801,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8910802,"byte_end":8910816,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8910817,"byte_end":8910820,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8910821,"byte_end":8910837,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8910838,"byte_end":8910841,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8910842,"byte_end":8910855,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8910856,"byte_end":8910897,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8910898,"byte_end":8910901,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8910902,"byte_end":8910920,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8910921,"byte_end":8910942,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/     let mut never = stream::pending::<i32>();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8910943,"byte_end":8910992,"line_start":32,"line_end":32,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8910993,"byte_end":8910996,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     // This will never complete","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8910997,"byte_end":8911032,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/     never.next().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8911033,"byte_end":8911060,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8911061,"byte_end":8911064,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     unreachable!();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8911065,"byte_end":8911088,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8911089,"byte_end":8911094,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8911095,"byte_end":8911102,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6575},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8916772,"byte_end":8916781,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"StreamMap","qualname":"::stream::stream_map::StreamMap","value":"StreamMap {  }","parent":null,"children":[{"krate":0,"index":6578}],"decl_id":null,"docs":" Combine many streams into one, indexing each source stream with a unique\n key.","sig":null,"attributes":[{"value":"/ Combine many streams into one, indexing each source stream with a unique","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8911540,"byte_end":8911616,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ key.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8911617,"byte_end":8911625,"line_start":9,"line_end":9,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8911626,"byte_end":8911629,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is similar to [`StreamExt::merge`] in that it combines source","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8911630,"byte_end":8911707,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ streams into a single merged stream that yields values in the order that","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8911708,"byte_end":8911784,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ they arrive from the source streams. However, `StreamMap` has a lot more","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8911785,"byte_end":8911861,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ flexibility in usage patterns.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8911862,"byte_end":8911896,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8911897,"byte_end":8911900,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` can:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8911901,"byte_end":8911921,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8911922,"byte_end":8911925,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * Merge an arbitrary number of streams.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8911926,"byte_end":8911969,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ * Track which source stream the value was received from.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8911970,"byte_end":8912030,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/ * Handle inserting and removing streams from the set of managed streams at","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8912031,"byte_end":8912109,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/   any point during iteration.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8912110,"byte_end":8912143,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8912144,"byte_end":8912147,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ All source streams held by `StreamMap` are indexed using a key. This key is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8912148,"byte_end":8912227,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ included with the value when a source stream yields a value. The key is also","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8912228,"byte_end":8912308,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ used to remove the stream from the `StreamMap` before the stream has","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8912309,"byte_end":8912381,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ completed streaming.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8912382,"byte_end":8912406,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8912407,"byte_end":8912410,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # `Unpin`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8912411,"byte_end":8912424,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8912425,"byte_end":8912428,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Because the `StreamMap` API moves streams during runtime, both streams and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8912429,"byte_end":8912507,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ keys must be `Unpin`. In order to insert a `!Unpin` stream into a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8912508,"byte_end":8912577,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/ `StreamMap`, use [`pin!`] to pin the stream to the stack or [`Box::pin`] to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8912578,"byte_end":8912657,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ pin the stream in the heap.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8912658,"byte_end":8912689,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8912690,"byte_end":8912693,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8912694,"byte_end":8912714,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8912715,"byte_end":8912718,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is backed by a `Vec<(K, V)>`. There is no guarantee that this","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8912719,"byte_end":8912796,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ internal implementation detail will persist in future versions, but it is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8912797,"byte_end":8912874,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ important to know the runtime implications. In general, `StreamMap` works","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8912875,"byte_end":8912952,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ best with a \"smallish\" number of streams as all entries are scanned on","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8912953,"byte_end":8913027,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ insert, remove, and polling. In cases where a large number of streams need","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913028,"byte_end":8913106,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ to be merged, it may be advisable to use tasks sending values on a shared","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913107,"byte_end":8913184,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ [`mpsc`] channel.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913185,"byte_end":8913206,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913207,"byte_end":8913210,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`StreamExt::merge`]: crate::stream::StreamExt::merge","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913211,"byte_end":8913268,"line_start":45,"line_end":45,"column_start":1,"column_end":58}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913269,"byte_end":8913300,"line_start":46,"line_end":46,"column_start":1,"column_end":32}},{"value":"/ [`pin!`]: macro@pin","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913301,"byte_end":8913324,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"/ [`Box::pin`]: std::boxed::Box::pin","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913325,"byte_end":8913363,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913364,"byte_end":8913367,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913368,"byte_end":8913382,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913383,"byte_end":8913386,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Merging two streams, then remove them after receiving the first value","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913387,"byte_end":8913460,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913461,"byte_end":8913464,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913465,"byte_end":8913472,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{StreamExt, StreamMap};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913473,"byte_end":8913519,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913520,"byte_end":8913546,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913547,"byte_end":8913550,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913551,"byte_end":8913569,"line_start":58,"line_end":58,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913570,"byte_end":8913591,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913592,"byte_end":8913639,"line_start":60,"line_end":60,"column_start":1,"column_end":48}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913640,"byte_end":8913687,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913688,"byte_end":8913691,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913692,"byte_end":8913725,"line_start":63,"line_end":63,"column_start":1,"column_end":34}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913726,"byte_end":8913765,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913766,"byte_end":8913769,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/         // This value will never be received. The send may or may not return","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913770,"byte_end":8913850,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/         // `Err` depending on if the remote end closed first or not.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913851,"byte_end":8913923,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/         let _ = tx1.send(2).await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913924,"byte_end":8913962,"line_start":68,"line_end":68,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913963,"byte_end":8913974,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913975,"byte_end":8913978,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8913979,"byte_end":8914012,"line_start":71,"line_end":71,"column_start":1,"column_end":34}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914013,"byte_end":8914052,"line_start":72,"line_end":72,"column_start":1,"column_end":40}},{"value":"/         let _ = tx2.send(4).await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914053,"byte_end":8914091,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914092,"byte_end":8914103,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914104,"byte_end":8914107,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     let mut map = StreamMap::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914108,"byte_end":8914147,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914148,"byte_end":8914151,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     // Insert both streams","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914152,"byte_end":8914182,"line_start":78,"line_end":78,"column_start":1,"column_end":31}},{"value":"/     map.insert(\"one\", rx1);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914183,"byte_end":8914214,"line_start":79,"line_end":79,"column_start":1,"column_end":32}},{"value":"/     map.insert(\"two\", rx2);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914215,"byte_end":8914246,"line_start":80,"line_end":80,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914247,"byte_end":8914250,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     // Read twice","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914251,"byte_end":8914272,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     for _ in 0..2 {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914273,"byte_end":8914296,"line_start":83,"line_end":83,"column_start":1,"column_end":24}},{"value":"/         let (key, val) = map.next().await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914297,"byte_end":8914352,"line_start":84,"line_end":84,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914353,"byte_end":8914356,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/         if key == \"one\" {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914357,"byte_end":8914386,"line_start":86,"line_end":86,"column_start":1,"column_end":30}},{"value":"/             assert_eq!(val, 1);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914387,"byte_end":8914422,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/         } else {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914423,"byte_end":8914443,"line_start":88,"line_end":88,"column_start":1,"column_end":21}},{"value":"/             assert_eq!(val, 3);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914444,"byte_end":8914479,"line_start":89,"line_end":89,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914480,"byte_end":8914493,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914494,"byte_end":8914497,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/         // Remove the stream to prevent reading the next value","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914498,"byte_end":8914564,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/         map.remove(key);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914565,"byte_end":8914593,"line_start":93,"line_end":93,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914594,"byte_end":8914603,"line_start":94,"line_end":94,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914604,"byte_end":8914609,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914610,"byte_end":8914617,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914618,"byte_end":8914621,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This example models a read-only client to a chat system with channels. The","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914622,"byte_end":8914700,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ client sends commands to join and leave channels. `StreamMap` is used to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914701,"byte_end":8914777,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ manage active channel subscriptions.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914778,"byte_end":8914818,"line_start":100,"line_end":100,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914819,"byte_end":8914822,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ For simplicity, messages are displayed with `println!`, but they could be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914823,"byte_end":8914900,"line_start":102,"line_end":102,"column_start":1,"column_end":78}},{"value":"/ sent to the client over a socket.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914901,"byte_end":8914938,"line_start":103,"line_end":103,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914939,"byte_end":8914942,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914943,"byte_end":8914956,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{Stream, StreamExt, StreamMap};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8914957,"byte_end":8915011,"line_start":106,"line_end":106,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915012,"byte_end":8915015,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915016,"byte_end":8915034,"line_start":108,"line_end":108,"column_start":1,"column_end":19}},{"value":"/     Join(String),","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915035,"byte_end":8915056,"line_start":109,"line_end":109,"column_start":1,"column_end":22}},{"value":"/     Leave(String),","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915057,"byte_end":8915079,"line_start":110,"line_end":110,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915080,"byte_end":8915085,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915086,"byte_end":8915089,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ fn commands() -> impl Stream<Item = Command> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915090,"byte_end":8915140,"line_start":113,"line_end":113,"column_start":1,"column_end":51}},{"value":"/     // Streams in user commands by parsing `stdin`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915141,"byte_end":8915196,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915197,"byte_end":8915227,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915228,"byte_end":8915233,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915234,"byte_end":8915237,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ // Join a channel, returns a stream of messages received on the channel.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915238,"byte_end":8915314,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ fn join(channel: &str) -> impl Stream<Item = String> + Unpin {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915315,"byte_end":8915381,"line_start":119,"line_end":119,"column_start":1,"column_end":67}},{"value":"/     // left as an exercise to the reader","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915382,"byte_end":8915426,"line_start":120,"line_end":120,"column_start":1,"column_end":45}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915427,"byte_end":8915457,"line_start":121,"line_end":121,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915458,"byte_end":8915463,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915464,"byte_end":8915467,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915468,"byte_end":8915486,"line_start":124,"line_end":124,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915487,"byte_end":8915508,"line_start":125,"line_end":125,"column_start":1,"column_end":22}},{"value":"/     let mut channels = StreamMap::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915509,"byte_end":8915553,"line_start":126,"line_end":126,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915554,"byte_end":8915557,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/     // Input commands (join / leave channels).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915558,"byte_end":8915608,"line_start":128,"line_end":128,"column_start":1,"column_end":51}},{"value":"/     let cmds = commands();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915609,"byte_end":8915639,"line_start":129,"line_end":129,"column_start":1,"column_end":31}},{"value":"/     tokio::pin!(cmds);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915640,"byte_end":8915666,"line_start":130,"line_end":130,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915667,"byte_end":8915670,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915671,"byte_end":8915685,"line_start":132,"line_end":132,"column_start":1,"column_end":15}},{"value":"/         tokio::select! {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915686,"byte_end":8915714,"line_start":133,"line_end":133,"column_start":1,"column_end":29}},{"value":"/             Some(cmd) = cmds.next() => {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915715,"byte_end":8915759,"line_start":134,"line_end":134,"column_start":1,"column_end":45}},{"value":"/                 match cmd {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915760,"byte_end":8915791,"line_start":135,"line_end":135,"column_start":1,"column_end":32}},{"value":"/                     Command::Join(chan) => {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915792,"byte_end":8915840,"line_start":136,"line_end":136,"column_start":1,"column_end":49}},{"value":"/                         // Join the channel and add it to the `channels`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915841,"byte_end":8915917,"line_start":137,"line_end":137,"column_start":1,"column_end":77}},{"value":"/                         // stream map","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915918,"byte_end":8915959,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/                         let msgs = join(&chan);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8915960,"byte_end":8916011,"line_start":139,"line_end":139,"column_start":1,"column_end":52}},{"value":"/                         channels.insert(chan, msgs);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8916012,"byte_end":8916068,"line_start":140,"line_end":140,"column_start":1,"column_end":57}},{"value":"/                     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8916069,"byte_end":8916094,"line_start":141,"line_end":141,"column_start":1,"column_end":26}},{"value":"/                     Command::Leave(chan) => {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8916095,"byte_end":8916144,"line_start":142,"line_end":142,"column_start":1,"column_end":50}},{"value":"/                         channels.remove(&chan);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8916145,"byte_end":8916196,"line_start":143,"line_end":143,"column_start":1,"column_end":52}},{"value":"/                     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8916197,"byte_end":8916222,"line_start":144,"line_end":144,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8916223,"byte_end":8916244,"line_start":145,"line_end":145,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8916245,"byte_end":8916262,"line_start":146,"line_end":146,"column_start":1,"column_end":18}},{"value":"/             Some((chan, msg)) = channels.next() => {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8916263,"byte_end":8916319,"line_start":147,"line_end":147,"column_start":1,"column_end":57}},{"value":"/                 // Received a message, display it on stdout with the channel","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8916320,"byte_end":8916400,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/                 // it originated from.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8916401,"byte_end":8916443,"line_start":149,"line_end":149,"column_start":1,"column_end":43}},{"value":"/                 println!(\"{}: {}\", chan, msg);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8916444,"byte_end":8916494,"line_start":150,"line_end":150,"column_start":1,"column_end":51}},{"value":"/             }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8916495,"byte_end":8916512,"line_start":151,"line_end":151,"column_start":1,"column_end":18}},{"value":"/             // Both the `commands` stream and the `channels` stream are","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8916513,"byte_end":8916588,"line_start":152,"line_end":152,"column_start":1,"column_end":76}},{"value":"/             // complete. There is no more work to do, so leave the loop.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8916589,"byte_end":8916665,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/             else => break,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8916666,"byte_end":8916696,"line_start":154,"line_end":154,"column_start":1,"column_end":31}},{"value":"/         }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8916697,"byte_end":8916710,"line_start":155,"line_end":155,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8916711,"byte_end":8916720,"line_start":156,"line_end":156,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8916721,"byte_end":8916726,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8916727,"byte_end":8916734,"line_start":158,"line_end":158,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6336},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8917254,"byte_end":8917257,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamMap<K, V>>::new","value":"pub fn new() -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap`.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8916886,"byte_end":8916919,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8916924,"byte_end":8916927,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The stream map is initially created with a capacity of `0`, so it will","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8916932,"byte_end":8917006,"line_start":168,"line_end":168,"column_start":5,"column_end":79}},{"value":"/ not allocate until it is first inserted into.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8917011,"byte_end":8917060,"line_start":169,"line_end":169,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8917065,"byte_end":8917068,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8917073,"byte_end":8917087,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8917092,"byte_end":8917095,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8917100,"byte_end":8917107,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8917112,"byte_end":8917156,"line_start":174,"line_end":174,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8917161,"byte_end":8917164,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8917169,"byte_end":8917230,"line_start":176,"line_end":176,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8917235,"byte_end":8917242,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6337},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8917762,"byte_end":8917775,"line_start":194,"line_end":194,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<StreamMap<K, V>>::with_capacity","value":"pub fn with_capacity(usize) -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap` with the specified capacity.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8917330,"byte_end":8917391,"line_start":182,"line_end":182,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8917396,"byte_end":8917399,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The stream map will be able to hold at least `capacity` elements without","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8917404,"byte_end":8917480,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ reallocating. If `capacity` is 0, the stream map will not allocate.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8917485,"byte_end":8917556,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8917561,"byte_end":8917564,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8917569,"byte_end":8917583,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8917588,"byte_end":8917591,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8917596,"byte_end":8917603,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8917608,"byte_end":8917652,"line_start":190,"line_end":190,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8917657,"byte_end":8917660,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::with_capacity(10);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8917665,"byte_end":8917738,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8917743,"byte_end":8917750,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6338},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918393,"byte_end":8918397,"line_start":219,"line_end":219,"column_start":12,"column_end":16},"name":"keys","qualname":"<StreamMap<K, V>>::keys","value":"pub fn keys(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all keys in arbitrary order.","sig":null,"attributes":[{"value":"/ Returns an iterator visiting all keys in arbitrary order.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8917906,"byte_end":8917967,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8917972,"byte_end":8917975,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a K.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8917980,"byte_end":8918019,"line_start":202,"line_end":202,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918024,"byte_end":8918027,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918032,"byte_end":8918046,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918051,"byte_end":8918054,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918059,"byte_end":8918066,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918071,"byte_end":8918115,"line_start":207,"line_end":207,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918120,"byte_end":8918123,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918128,"byte_end":8918163,"line_start":209,"line_end":209,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918168,"byte_end":8918171,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918176,"byte_end":8918214,"line_start":211,"line_end":211,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918219,"byte_end":8918250,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918255,"byte_end":8918286,"line_start":213,"line_end":213,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918291,"byte_end":8918294,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918299,"byte_end":8918326,"line_start":215,"line_end":215,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918331,"byte_end":8918359,"line_start":216,"line_end":216,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918364,"byte_end":8918369,"line_start":217,"line_end":217,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918374,"byte_end":8918381,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6341},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918981,"byte_end":8918987,"line_start":242,"line_end":242,"column_start":12,"column_end":18},"name":"values","qualname":"<StreamMap<K, V>>::values","value":"pub fn values(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values in arbitrary order.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918490,"byte_end":8918545,"line_start":223,"line_end":223,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918550,"byte_end":8918553,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a V.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918558,"byte_end":8918597,"line_start":225,"line_end":225,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918602,"byte_end":8918605,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918610,"byte_end":8918624,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918629,"byte_end":8918632,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918637,"byte_end":8918644,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918649,"byte_end":8918693,"line_start":230,"line_end":230,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918698,"byte_end":8918701,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918706,"byte_end":8918741,"line_start":232,"line_end":232,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918746,"byte_end":8918749,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918754,"byte_end":8918792,"line_start":234,"line_end":234,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918797,"byte_end":8918828,"line_start":235,"line_end":235,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918833,"byte_end":8918864,"line_start":236,"line_end":236,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918869,"byte_end":8918872,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918877,"byte_end":8918909,"line_start":238,"line_end":238,"column_start":5,"column_end":37}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918914,"byte_end":8918947,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918952,"byte_end":8918957,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8918962,"byte_end":8918969,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6344},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8919587,"byte_end":8919597,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<StreamMap<K, V>>::values_mut","value":"pub fn values_mut(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably in arbitrary order.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8919080,"byte_end":8919143,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8919148,"byte_end":8919151,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a mut V.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8919156,"byte_end":8919199,"line_start":248,"line_end":248,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8919204,"byte_end":8919207,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8919212,"byte_end":8919226,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8919231,"byte_end":8919234,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8919239,"byte_end":8919246,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8919251,"byte_end":8919295,"line_start":253,"line_end":253,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8919300,"byte_end":8919303,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8919308,"byte_end":8919343,"line_start":255,"line_end":255,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8919348,"byte_end":8919351,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8919356,"byte_end":8919394,"line_start":257,"line_end":257,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8919399,"byte_end":8919430,"line_start":258,"line_end":258,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8919435,"byte_end":8919466,"line_start":259,"line_end":259,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8919471,"byte_end":8919474,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values_mut() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8919479,"byte_end":8919515,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8919520,"byte_end":8919553,"line_start":262,"line_end":262,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8919558,"byte_end":8919563,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8919568,"byte_end":8919575,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6347},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920175,"byte_end":8920183,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"capacity","qualname":"<StreamMap<K, V>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams the map can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of streams the map can hold without reallocating.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8919702,"byte_end":8919774,"line_start":269,"line_end":269,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8919779,"byte_end":8919782,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This number is a lower bound; the `StreamMap` might be able to hold","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8919787,"byte_end":8919858,"line_start":271,"line_end":271,"column_start":5,"column_end":76}},{"value":"/ more, but is guaranteed to be able to hold at least this many.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8919863,"byte_end":8919929,"line_start":272,"line_end":272,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8919934,"byte_end":8919937,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8919942,"byte_end":8919956,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8919961,"byte_end":8919964,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8919969,"byte_end":8919976,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8919981,"byte_end":8920025,"line_start":277,"line_end":277,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920030,"byte_end":8920033,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<i32, Pending<()>> = StreamMap::with_capacity(100);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920038,"byte_end":8920111,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920116,"byte_end":8920151,"line_start":280,"line_end":280,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920156,"byte_end":8920163,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6348},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920559,"byte_end":8920562,"line_start":298,"line_end":298,"column_start":12,"column_end":15},"name":"len","qualname":"<StreamMap<K, V>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams in the map.","sig":null,"attributes":[{"value":"/ Returns the number of streams in the map.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920245,"byte_end":8920290,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920295,"byte_end":8920298,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920303,"byte_end":8920317,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920322,"byte_end":8920325,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920330,"byte_end":8920337,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920342,"byte_end":8920386,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920391,"byte_end":8920394,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920399,"byte_end":8920432,"line_start":293,"line_end":293,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920437,"byte_end":8920464,"line_start":294,"line_end":294,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920469,"byte_end":8920503,"line_start":295,"line_end":295,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920508,"byte_end":8920535,"line_start":296,"line_end":296,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920540,"byte_end":8920547,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6349},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920913,"byte_end":8920921,"line_start":314,"line_end":314,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<StreamMap<K, V>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920619,"byte_end":8920670,"line_start":302,"line_end":302,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920675,"byte_end":8920678,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920683,"byte_end":8920697,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920702,"byte_end":8920705,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920710,"byte_end":8920717,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920722,"byte_end":8920756,"line_start":307,"line_end":307,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920761,"byte_end":8920764,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920769,"byte_end":8920800,"line_start":309,"line_end":309,"column_start":5,"column_end":36}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920805,"byte_end":8920831,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920836,"byte_end":8920857,"line_start":311,"line_end":311,"column_start":5,"column_end":26}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920862,"byte_end":8920889,"line_start":312,"line_end":312,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920894,"byte_end":8920901,"line_start":313,"line_end":313,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6350},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921333,"byte_end":8921338,"line_start":331,"line_end":331,"column_start":12,"column_end":17},"name":"clear","qualname":"<StreamMap<K, V>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-stream pairs. Keeps the allocated\n memory for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-stream pairs. Keeps the allocated","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8920982,"byte_end":8921052,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ memory for reuse.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921057,"byte_end":8921078,"line_start":319,"line_end":319,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921083,"byte_end":8921086,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921091,"byte_end":8921105,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921110,"byte_end":8921113,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921118,"byte_end":8921125,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921130,"byte_end":8921174,"line_start":324,"line_end":324,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921179,"byte_end":8921182,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921187,"byte_end":8921220,"line_start":326,"line_end":326,"column_start":5,"column_end":38}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921225,"byte_end":8921259,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ a.clear();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921264,"byte_end":8921278,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921283,"byte_end":8921309,"line_start":329,"line_end":329,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921314,"byte_end":8921321,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6351},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8922013,"byte_end":8922019,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"insert","qualname":"<StreamMap<K, V>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V> where K: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-stream pair into the map.","sig":null,"attributes":[{"value":"/ Insert a key-stream pair into the map.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921393,"byte_end":8921435,"line_start":335,"line_end":335,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921440,"byte_end":8921443,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, `None` is returned.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921448,"byte_end":8921513,"line_start":337,"line_end":337,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921518,"byte_end":8921521,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the new `stream` replaces the old","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921526,"byte_end":8921601,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ one and the old stream is returned.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921606,"byte_end":8921645,"line_start":340,"line_end":340,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921650,"byte_end":8921653,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921658,"byte_end":8921672,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921677,"byte_end":8921680,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921685,"byte_end":8921692,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921697,"byte_end":8921741,"line_start":345,"line_end":345,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921746,"byte_end":8921749,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921754,"byte_end":8921789,"line_start":347,"line_end":347,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921794,"byte_end":8921797,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ assert!(map.insert(37, pending::<i32>()).is_none());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921802,"byte_end":8921858,"line_start":349,"line_end":349,"column_start":5,"column_end":61}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921863,"byte_end":8921892,"line_start":350,"line_end":350,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921897,"byte_end":8921900,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, pending());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921905,"byte_end":8921935,"line_start":352,"line_end":352,"column_start":5,"column_end":35}},{"value":"/ assert!(map.insert(37, pending()).is_some());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921940,"byte_end":8921989,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8921994,"byte_end":8922001,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6352},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8922750,"byte_end":8922756,"line_start":380,"line_end":380,"column_start":12,"column_end":18},"name":"remove","qualname":"<StreamMap<K, V>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the stream at the key if the key was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the stream at the key if the key was previously in the map.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8922198,"byte_end":8922299,"line_start":365,"line_end":365,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8922304,"byte_end":8922307,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8922312,"byte_end":8922386,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8922391,"byte_end":8922455,"line_start":368,"line_end":368,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8922460,"byte_end":8922463,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8922468,"byte_end":8922482,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8922487,"byte_end":8922490,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8922495,"byte_end":8922502,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8922507,"byte_end":8922551,"line_start":373,"line_end":373,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8922556,"byte_end":8922559,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8922564,"byte_end":8922599,"line_start":375,"line_end":375,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8922604,"byte_end":8922640,"line_start":376,"line_end":376,"column_start":5,"column_end":41}},{"value":"/ assert!(map.remove(&1).is_some());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8922645,"byte_end":8922683,"line_start":377,"line_end":377,"column_start":5,"column_end":43}},{"value":"/ assert!(map.remove(&1).is_none());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8922688,"byte_end":8922726,"line_start":378,"line_end":378,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8922731,"byte_end":8922738,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6354},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8923590,"byte_end":8923602,"line_start":409,"line_end":409,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<StreamMap<K, V>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a stream for the specified key.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains a stream for the specified key.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8923058,"byte_end":8923128,"line_start":394,"line_end":394,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8923133,"byte_end":8923136,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8923141,"byte_end":8923215,"line_start":396,"line_end":396,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8923220,"byte_end":8923284,"line_start":397,"line_end":397,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8923289,"byte_end":8923292,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8923297,"byte_end":8923311,"line_start":399,"line_end":399,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8923316,"byte_end":8923319,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8923324,"byte_end":8923331,"line_start":401,"line_end":401,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8923336,"byte_end":8923380,"line_start":402,"line_end":402,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8923385,"byte_end":8923388,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8923393,"byte_end":8923428,"line_start":404,"line_end":404,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8923433,"byte_end":8923469,"line_start":405,"line_end":405,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8923474,"byte_end":8923517,"line_start":406,"line_end":406,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8923522,"byte_end":8923566,"line_start":407,"line_end":407,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8923571,"byte_end":8923578,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9919},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":8926542,"byte_end":8926546,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":9921},{"krate":0,"index":9922}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":7985170,"byte_end":7985179,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9874},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":8928108,"byte_end":8928117,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":9877},{"krate":0,"index":9878}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":7985170,"byte_end":7985179,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6587},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":8929921,"byte_end":8929928,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":6590}],"decl_id":null,"docs":" Future for the [`try_next`](super::StreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::StreamExt::try_next) method.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":8929757,"byte_end":8929824,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":8929842,"byte_end":8929909,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":9837},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":8930777,"byte_end":8930781,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":9839},{"krate":0,"index":9840}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":7985170,"byte_end":7985179,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9788},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":8932624,"byte_end":8932633,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":9791},{"krate":0,"index":9792},{"krate":0,"index":9793}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":7985170,"byte_end":7985179,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9749},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/timeout.rs","byte_start":8965021,"byte_end":8965028,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::stream::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":9751},{"krate":0,"index":9752},{"krate":0,"index":9753},{"krate":0,"index":9754}],"decl_id":null,"docs":" Stream returned by the [`timeout`](super::StreamExt::timeout) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":7985170,"byte_end":7985179,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":6482},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8863306,"byte_end":8863315,"line_start":81,"line_end":81,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":6483},{"krate":0,"index":6484},{"krate":0,"index":6487},{"krate":0,"index":6490},{"krate":0,"index":6492},{"krate":0,"index":6494},{"krate":0,"index":6497},{"krate":0,"index":6498},{"krate":0,"index":6499},{"krate":0,"index":6501},{"krate":0,"index":6502},{"krate":0,"index":6504},{"krate":0,"index":6506},{"krate":0,"index":6508},{"krate":0,"index":6510},{"krate":0,"index":6513},{"krate":0,"index":6515}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8863195,"byte_end":8863269,"line_start":79,"line_end":79,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8863270,"byte_end":8863295,"line_start":80,"line_end":80,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":6483},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8864385,"byte_end":8864389,"line_start":113,"line_end":113,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Consumes and returns the next value in the stream or `None` if the\n stream is finished.","sig":null,"attributes":[{"value":"/ Consumes and returns the next value in the stream or `None` if the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8863330,"byte_end":8863400,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ stream is finished.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8863405,"byte_end":8863428,"line_start":83,"line_end":83,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8863433,"byte_end":8863436,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8863441,"byte_end":8863459,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8863464,"byte_end":8863467,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8863472,"byte_end":8863485,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ async fn next(&mut self) -> Option<Self::Item>;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8863490,"byte_end":8863541,"line_start":88,"line_end":88,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8863546,"byte_end":8863553,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8863558,"byte_end":8863561,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8863566,"byte_end":8863634,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8863639,"byte_end":8863714,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8863719,"byte_end":8863794,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8863799,"byte_end":8863853,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8863858,"byte_end":8863933,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8863938,"byte_end":8863948,"line_start":96,"line_end":96,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8863953,"byte_end":8863956,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8863961,"byte_end":8863975,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8863980,"byte_end":8863983,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8863988,"byte_end":8863995,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8864000,"byte_end":8864020,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8864025,"byte_end":8864048,"line_start":102,"line_end":102,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8864053,"byte_end":8864094,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8864099,"byte_end":8864102,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8864107,"byte_end":8864148,"line_start":105,"line_end":105,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8864153,"byte_end":8864156,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8864161,"byte_end":8864206,"line_start":107,"line_end":107,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8864211,"byte_end":8864256,"line_start":108,"line_end":108,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8864261,"byte_end":8864306,"line_start":109,"line_end":109,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8864311,"byte_end":8864353,"line_start":110,"line_end":110,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8864358,"byte_end":8864365,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8864370,"byte_end":8864377,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6484},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8865460,"byte_end":8865468,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::StreamExt::try_next","value":"pub fn try_next<T, E>(&mut Self) -> TryNext<, Self> where Self: Stream<Item =\nResult<T, E>> + Unpin","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Consumes and returns the next item in the stream. If an error is\n encountered before the next item, the error is returned instead.","sig":null,"attributes":[{"value":"/ Consumes and returns the next item in the stream. If an error is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8864491,"byte_end":8864559,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ encountered before the next item, the error is returned instead.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8864564,"byte_end":8864632,"line_start":121,"line_end":121,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8864637,"byte_end":8864640,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8864645,"byte_end":8864663,"line_start":123,"line_end":123,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8864668,"byte_end":8864671,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8864676,"byte_end":8864689,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/ async fn try_next(&mut self) -> Result<Option<T>, E>;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8864694,"byte_end":8864751,"line_start":126,"line_end":126,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8864756,"byte_end":8864763,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8864768,"byte_end":8864771,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`](StreamExt::next) combinator,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8864776,"byte_end":8864840,"line_start":129,"line_end":129,"column_start":5,"column_end":69}},{"value":"/ but returns a [`Result<Option<T>, E>`](Result) rather than","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8864845,"byte_end":8864907,"line_start":130,"line_end":130,"column_start":5,"column_end":67}},{"value":"/ an [`Option<Result<T, E>>`](Option), making for easy use","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8864912,"byte_end":8864972,"line_start":131,"line_end":131,"column_start":5,"column_end":65}},{"value":"/ with the [`?`](std::ops::Try) operator.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8864977,"byte_end":8865020,"line_start":132,"line_end":132,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8865025,"byte_end":8865028,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8865033,"byte_end":8865047,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8865052,"byte_end":8865055,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8865060,"byte_end":8865067,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8865072,"byte_end":8865092,"line_start":137,"line_end":137,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8865097,"byte_end":8865120,"line_start":138,"line_end":138,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8865125,"byte_end":8865166,"line_start":139,"line_end":139,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8865171,"byte_end":8865174,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(1), Ok(2), Err(\"nope\")]);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8865179,"byte_end":8865246,"line_start":141,"line_end":141,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8865251,"byte_end":8865254,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8865259,"byte_end":8865312,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8865317,"byte_end":8865370,"line_start":144,"line_end":144,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(\"nope\"));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8865375,"byte_end":8865428,"line_start":145,"line_end":145,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8865433,"byte_end":8865440,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8865445,"byte_end":8865452,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6487},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8866536,"byte_end":8866539,"line_start":181,"line_end":181,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8865612,"byte_end":8865687,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8865692,"byte_end":8865715,"line_start":156,"line_end":156,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8865720,"byte_end":8865723,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8865728,"byte_end":8865800,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8865805,"byte_end":8865869,"line_start":159,"line_end":159,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8865874,"byte_end":8865911,"line_start":160,"line_end":160,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8865916,"byte_end":8865919,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8865924,"byte_end":8866000,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8866005,"byte_end":8866076,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8866081,"byte_end":8866102,"line_start":164,"line_end":164,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8866107,"byte_end":8866110,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8866115,"byte_end":8866129,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8866134,"byte_end":8866137,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8866142,"byte_end":8866149,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8866154,"byte_end":8866174,"line_start":169,"line_end":169,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8866179,"byte_end":8866202,"line_start":170,"line_end":170,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8866207,"byte_end":8866248,"line_start":171,"line_end":171,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8866253,"byte_end":8866256,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8866261,"byte_end":8866298,"line_start":173,"line_end":173,"column_start":5,"column_end":42}},{"value":"/ let mut stream = stream.map(|x| x + 3);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8866303,"byte_end":8866346,"line_start":174,"line_end":174,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8866351,"byte_end":8866354,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8866359,"byte_end":8866404,"line_start":176,"line_end":176,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(5));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8866409,"byte_end":8866454,"line_start":177,"line_end":177,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(6));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8866459,"byte_end":8866504,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8866509,"byte_end":8866516,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8866521,"byte_end":8866528,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6490},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8869149,"byte_end":8869154,"line_start":259,"line_end":259,"column_start":8,"column_end":13},"name":"merge","qualname":"::stream::StreamExt::merge","value":"pub fn merge<U>(Self, U) -> Merge<Self, U> where U: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Combine two streams into one by interleaving the output of both as it\n is produced.","sig":null,"attributes":[{"value":"/ Combine two streams into one by interleaving the output of both as it","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8866683,"byte_end":8866756,"line_start":189,"line_end":189,"column_start":5,"column_end":78}},{"value":"/ is produced.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8866761,"byte_end":8866777,"line_start":190,"line_end":190,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8866782,"byte_end":8866785,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Values are produced from the merged stream in the order they arrive from","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8866790,"byte_end":8866866,"line_start":192,"line_end":192,"column_start":5,"column_end":81}},{"value":"/ the two source streams. If both source streams provide values","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8866871,"byte_end":8866936,"line_start":193,"line_end":193,"column_start":5,"column_end":70}},{"value":"/ simultaneously, the merge stream alternates between them. This provides","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8866941,"byte_end":8867016,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ some level of fairness. You should not chain calls to `merge`, as this","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867021,"byte_end":8867095,"line_start":195,"line_end":195,"column_start":5,"column_end":79}},{"value":"/ will break the fairness of the merging.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867100,"byte_end":8867143,"line_start":196,"line_end":196,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867148,"byte_end":8867151,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ The merged stream completes once **both** source streams complete. When","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867156,"byte_end":8867231,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/ one source stream completes before the other, the merge stream","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867236,"byte_end":8867302,"line_start":199,"line_end":199,"column_start":5,"column_end":71}},{"value":"/ exclusively polls the remaining stream.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867307,"byte_end":8867350,"line_start":200,"line_end":200,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867355,"byte_end":8867358,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ For merging multiple streams, consider using [`StreamMap`] instead.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867363,"byte_end":8867434,"line_start":202,"line_end":202,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867439,"byte_end":8867442,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ [`StreamMap`]: crate::stream::StreamMap","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867447,"byte_end":8867490,"line_start":204,"line_end":204,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867495,"byte_end":8867498,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867503,"byte_end":8867517,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867522,"byte_end":8867525,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867530,"byte_end":8867537,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867542,"byte_end":8867575,"line_start":209,"line_end":209,"column_start":5,"column_end":38}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867580,"byte_end":8867606,"line_start":210,"line_end":210,"column_start":5,"column_end":31}},{"value":"/ use tokio::time;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867611,"byte_end":8867631,"line_start":211,"line_end":211,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867636,"byte_end":8867639,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867644,"byte_end":8867672,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867677,"byte_end":8867680,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # /*","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867685,"byte_end":8867693,"line_start":215,"line_end":215,"column_start":5,"column_end":13}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867698,"byte_end":8867716,"line_start":216,"line_end":216,"column_start":5,"column_end":23}},{"value":"/ # */","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867721,"byte_end":8867729,"line_start":217,"line_end":217,"column_start":5,"column_end":13}},{"value":"/ # #[tokio::main(basic_scheduler)]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867734,"byte_end":8867771,"line_start":218,"line_end":218,"column_start":5,"column_end":42}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867776,"byte_end":8867797,"line_start":219,"line_end":219,"column_start":5,"column_end":26}},{"value":"/ # time::pause();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867802,"byte_end":8867822,"line_start":220,"line_end":220,"column_start":5,"column_end":25}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867827,"byte_end":8867874,"line_start":221,"line_end":221,"column_start":5,"column_end":52}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867879,"byte_end":8867926,"line_start":222,"line_end":222,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867931,"byte_end":8867934,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/     let mut rx = rx1.merge(rx2);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867939,"byte_end":8867975,"line_start":224,"line_end":224,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867980,"byte_end":8867983,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8867988,"byte_end":8868021,"line_start":226,"line_end":226,"column_start":5,"column_end":38}},{"value":"/         // Send some values immediately","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8868026,"byte_end":8868069,"line_start":227,"line_end":227,"column_start":5,"column_end":48}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8868074,"byte_end":8868113,"line_start":228,"line_end":228,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8868118,"byte_end":8868157,"line_start":229,"line_end":229,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8868162,"byte_end":8868165,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/         // Let the other task send values","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8868170,"byte_end":8868215,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/         time::delay_for(Duration::from_millis(20)).await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8868220,"byte_end":8868281,"line_start":232,"line_end":232,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8868286,"byte_end":8868289,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/         tx1.send(4).await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8868294,"byte_end":8868333,"line_start":234,"line_end":234,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8868338,"byte_end":8868349,"line_start":235,"line_end":235,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8868354,"byte_end":8868357,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8868362,"byte_end":8868395,"line_start":237,"line_end":237,"column_start":5,"column_end":38}},{"value":"/         // Wait for the first task to send values","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8868400,"byte_end":8868453,"line_start":238,"line_end":238,"column_start":5,"column_end":58}},{"value":"/         time::delay_for(Duration::from_millis(5)).await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8868458,"byte_end":8868518,"line_start":239,"line_end":239,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8868523,"byte_end":8868526,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8868531,"byte_end":8868570,"line_start":241,"line_end":241,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8868575,"byte_end":8868578,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/         time::delay_for(Duration::from_millis(25)).await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8868583,"byte_end":8868644,"line_start":243,"line_end":243,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8868649,"byte_end":8868652,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/         // Send the final value","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8868657,"byte_end":8868692,"line_start":245,"line_end":245,"column_start":5,"column_end":40}},{"value":"/         tx2.send(5).await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8868697,"byte_end":8868736,"line_start":246,"line_end":246,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8868741,"byte_end":8868752,"line_start":247,"line_end":247,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8868757,"byte_end":8868760,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/    assert_eq!(1, rx.next().await.unwrap());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8868765,"byte_end":8868812,"line_start":249,"line_end":249,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(2, rx.next().await.unwrap());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8868817,"byte_end":8868864,"line_start":250,"line_end":250,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(3, rx.next().await.unwrap());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8868869,"byte_end":8868916,"line_start":251,"line_end":251,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(4, rx.next().await.unwrap());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8868921,"byte_end":8868968,"line_start":252,"line_end":252,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(5, rx.next().await.unwrap());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8868973,"byte_end":8869020,"line_start":253,"line_end":253,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8869025,"byte_end":8869028,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/    // The merged stream is consumed","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8869033,"byte_end":8869072,"line_start":255,"line_end":255,"column_start":5,"column_end":44}},{"value":"/    assert!(rx.next().await.is_none());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8869077,"byte_end":8869119,"line_start":256,"line_end":256,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8869124,"byte_end":8869129,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8869134,"byte_end":8869141,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6492},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8870459,"byte_end":8870465,"line_start":297,"line_end":297,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::StreamExt::filter","value":"pub fn filter<F>(Self, F) -> Filter<Self, F> where F: FnMut(&Self::Item) ->\nbool, Self: Sized","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8869310,"byte_end":8869382,"line_start":267,"line_end":267,"column_start":5,"column_end":77}},{"value":"/ predicate.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8869387,"byte_end":8869401,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8869406,"byte_end":8869409,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8869414,"byte_end":8869489,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8869494,"byte_end":8869540,"line_start":271,"line_end":271,"column_start":5,"column_end":51}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8869545,"byte_end":8869617,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/ predicate resolves to `false`, then the value","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8869622,"byte_end":8869671,"line_start":273,"line_end":273,"column_start":5,"column_end":54}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8869676,"byte_end":8869734,"line_start":274,"line_end":274,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8869739,"byte_end":8869742,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8869747,"byte_end":8869823,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter`] method in the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8869828,"byte_end":8869900,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/ standard library.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8869905,"byte_end":8869926,"line_start":278,"line_end":278,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8869931,"byte_end":8869934,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8869939,"byte_end":8869953,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8869958,"byte_end":8869961,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8869966,"byte_end":8869973,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8869978,"byte_end":8869998,"line_start":283,"line_end":283,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8870003,"byte_end":8870026,"line_start":284,"line_end":284,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8870031,"byte_end":8870072,"line_start":285,"line_end":285,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8870077,"byte_end":8870080,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8870085,"byte_end":8870122,"line_start":287,"line_end":287,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter(|x| x % 2 == 0);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8870127,"byte_end":8870177,"line_start":288,"line_end":288,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8870182,"byte_end":8870185,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(2), evens.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8870190,"byte_end":8870234,"line_start":290,"line_end":290,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(4), evens.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8870239,"byte_end":8870283,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(6), evens.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8870288,"byte_end":8870332,"line_start":292,"line_end":292,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(8), evens.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8870337,"byte_end":8870381,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8870386,"byte_end":8870427,"line_start":294,"line_end":294,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8870432,"byte_end":8870439,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8870444,"byte_end":8870451,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6494},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8871832,"byte_end":8871842,"line_start":335,"line_end":335,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::StreamExt::filter_map","value":"pub fn filter_map<T, F>(Self, F) -> FilterMap<Self, F> where\nF: FnMut(Self::Item) -> Option<T>, Self: Sized","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8870616,"byte_end":8870691,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided closure.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8870696,"byte_end":8870759,"line_start":306,"line_end":306,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8870764,"byte_end":8870767,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8870772,"byte_end":8870847,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the predicate `f` resolves to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8870852,"byte_end":8870904,"line_start":309,"line_end":309,"column_start":5,"column_end":57}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8870909,"byte_end":8870985,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`], then the value will be skipped.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8870990,"byte_end":8871050,"line_start":311,"line_end":311,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8871055,"byte_end":8871058,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8871063,"byte_end":8871139,"line_start":313,"line_end":313,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter_map`] method in the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8871144,"byte_end":8871220,"line_start":314,"line_end":314,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8871225,"byte_end":8871246,"line_start":315,"line_end":315,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8871251,"byte_end":8871254,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8871259,"byte_end":8871273,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8871278,"byte_end":8871285,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8871290,"byte_end":8871310,"line_start":319,"line_end":319,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8871315,"byte_end":8871338,"line_start":320,"line_end":320,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8871343,"byte_end":8871384,"line_start":321,"line_end":321,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8871389,"byte_end":8871392,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8871397,"byte_end":8871434,"line_start":323,"line_end":323,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter_map(|x| {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8871439,"byte_end":8871482,"line_start":324,"line_end":324,"column_start":5,"column_end":48}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8871487,"byte_end":8871538,"line_start":325,"line_end":325,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8871543,"byte_end":8871550,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8871555,"byte_end":8871558,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), evens.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8871563,"byte_end":8871607,"line_start":328,"line_end":328,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(5), evens.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8871612,"byte_end":8871656,"line_start":329,"line_end":329,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(7), evens.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8871661,"byte_end":8871705,"line_start":330,"line_end":330,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(9), evens.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8871710,"byte_end":8871754,"line_start":331,"line_end":331,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8871759,"byte_end":8871800,"line_start":332,"line_end":332,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8871805,"byte_end":8871812,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8871817,"byte_end":8871824,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6497},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8873974,"byte_end":8873978,"line_start":401,"line_end":401,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Creates a stream which ends after the first `None`.","sig":null,"attributes":[{"value":"/ Creates a stream which ends after the first `None`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872006,"byte_end":8872061,"line_start":343,"line_end":343,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872066,"byte_end":8872069,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ After a stream returns `None`, behavior is undefined. Future calls to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872074,"byte_end":8872147,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ `poll_next` may or may not return `Some(T)` again or they may panic.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872152,"byte_end":8872224,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/ `fuse()` adapts a stream, ensuring that after `None` is given, it will","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872229,"byte_end":8872303,"line_start":347,"line_end":347,"column_start":5,"column_end":79}},{"value":"/ return `None` forever.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872308,"byte_end":8872334,"line_start":348,"line_end":348,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872339,"byte_end":8872342,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872347,"byte_end":8872361,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872366,"byte_end":8872369,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872374,"byte_end":8872381,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{Stream, StreamExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872386,"byte_end":8872429,"line_start":353,"line_end":353,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872434,"byte_end":8872437,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872442,"byte_end":8872464,"line_start":355,"line_end":355,"column_start":5,"column_end":27}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872469,"byte_end":8872504,"line_start":356,"line_end":356,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872509,"byte_end":8872512,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ // a stream which alternates between Some and None","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872517,"byte_end":8872571,"line_start":358,"line_end":358,"column_start":5,"column_end":59}},{"value":"/ struct Alternate {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872576,"byte_end":8872598,"line_start":359,"line_end":359,"column_start":5,"column_end":27}},{"value":"/     state: i32,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872603,"byte_end":8872622,"line_start":360,"line_end":360,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872627,"byte_end":8872632,"line_start":361,"line_end":361,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872637,"byte_end":8872640,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ impl Stream for Alternate {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872645,"byte_end":8872676,"line_start":363,"line_end":363,"column_start":5,"column_end":36}},{"value":"/     type Item = i32;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872681,"byte_end":8872705,"line_start":364,"line_end":364,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872710,"byte_end":8872713,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     fn poll_next(mut self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Option<i32>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872718,"byte_end":8872810,"line_start":366,"line_end":366,"column_start":5,"column_end":97}},{"value":"/         let val = self.state;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872815,"byte_end":8872848,"line_start":367,"line_end":367,"column_start":5,"column_end":38}},{"value":"/         self.state = self.state + 1;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872853,"byte_end":8872893,"line_start":368,"line_end":368,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872898,"byte_end":8872901,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/         // if it's even, Some(i32), else None","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872906,"byte_end":8872955,"line_start":370,"line_end":370,"column_start":5,"column_end":54}},{"value":"/         if val % 2 == 0 {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872960,"byte_end":8872989,"line_start":371,"line_end":371,"column_start":5,"column_end":34}},{"value":"/             Poll::Ready(Some(val))","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8872994,"byte_end":8873032,"line_start":372,"line_end":372,"column_start":5,"column_end":43}},{"value":"/         } else {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8873037,"byte_end":8873057,"line_start":373,"line_end":373,"column_start":5,"column_end":25}},{"value":"/             Poll::Ready(None)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8873062,"byte_end":8873095,"line_start":374,"line_end":374,"column_start":5,"column_end":38}},{"value":"/         }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8873100,"byte_end":8873113,"line_start":375,"line_end":375,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8873118,"byte_end":8873127,"line_start":376,"line_end":376,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8873132,"byte_end":8873137,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8873142,"byte_end":8873145,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8873150,"byte_end":8873168,"line_start":379,"line_end":379,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8873173,"byte_end":8873194,"line_start":380,"line_end":380,"column_start":5,"column_end":26}},{"value":"/     let mut stream = Alternate { state: 0 };","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8873199,"byte_end":8873247,"line_start":381,"line_end":381,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8873252,"byte_end":8873255,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/     // the stream goes back and forth","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8873260,"byte_end":8873301,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(stream.next().await, Some(0));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8873306,"byte_end":8873355,"line_start":384,"line_end":384,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8873360,"byte_end":8873406,"line_start":385,"line_end":385,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8873411,"byte_end":8873460,"line_start":386,"line_end":386,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8873465,"byte_end":8873511,"line_start":387,"line_end":387,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8873516,"byte_end":8873519,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     // however, once it is fused","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8873524,"byte_end":8873560,"line_start":389,"line_end":389,"column_start":5,"column_end":41}},{"value":"/     let mut stream = stream.fuse();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8873565,"byte_end":8873604,"line_start":390,"line_end":390,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8873609,"byte_end":8873612,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8873617,"byte_end":8873666,"line_start":392,"line_end":392,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8873671,"byte_end":8873717,"line_start":393,"line_end":393,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8873722,"byte_end":8873725,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     // it will always return `None` after the first time.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8873730,"byte_end":8873791,"line_start":395,"line_end":395,"column_start":5,"column_end":66}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8873796,"byte_end":8873842,"line_start":396,"line_end":396,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8873847,"byte_end":8873893,"line_start":397,"line_end":397,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8873898,"byte_end":8873944,"line_start":398,"line_end":398,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8873949,"byte_end":8873954,"line_start":399,"line_end":399,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8873959,"byte_end":8873966,"line_start":400,"line_end":400,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6498},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8874714,"byte_end":8874718,"line_start":428,"line_end":428,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8874071,"byte_end":8874142,"line_start":408,"line_end":408,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8874147,"byte_end":8874150,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8874155,"byte_end":8874228,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8874233,"byte_end":8874268,"line_start":411,"line_end":411,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8874273,"byte_end":8874276,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8874281,"byte_end":8874295,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8874300,"byte_end":8874303,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8874308,"byte_end":8874315,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8874320,"byte_end":8874340,"line_start":416,"line_end":416,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8874345,"byte_end":8874368,"line_start":417,"line_end":417,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8874373,"byte_end":8874414,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8874419,"byte_end":8874422,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take(3);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8874427,"byte_end":8874477,"line_start":420,"line_end":420,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8874482,"byte_end":8874485,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8874490,"byte_end":8874535,"line_start":422,"line_end":422,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8874540,"byte_end":8874585,"line_start":423,"line_end":423,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8874590,"byte_end":8874635,"line_start":424,"line_end":424,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8874640,"byte_end":8874682,"line_start":425,"line_end":425,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8874687,"byte_end":8874694,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8874699,"byte_end":8874706,"line_start":427,"line_end":427,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6499},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8875611,"byte_end":8875621,"line_start":457,"line_end":457,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::StreamExt::take_while","value":"pub fn take_while<F>(Self, F) -> TakeWhile<Self, F> where\nF: FnMut(&Self::Item) -> bool, Self: Sized","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided predicate","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8874824,"byte_end":8874887,"line_start":435,"line_end":435,"column_start":5,"column_end":68}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8874892,"byte_end":8874915,"line_start":436,"line_end":436,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8874920,"byte_end":8874923,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8874928,"byte_end":8875003,"line_start":438,"line_end":438,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8875008,"byte_end":8875080,"line_start":439,"line_end":439,"column_start":5,"column_end":77}},{"value":"/ returns false it will always return that the stream is done.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8875085,"byte_end":8875149,"line_start":440,"line_end":440,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8875154,"byte_end":8875157,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8875162,"byte_end":8875176,"line_start":442,"line_end":442,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8875181,"byte_end":8875184,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8875189,"byte_end":8875196,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8875201,"byte_end":8875221,"line_start":445,"line_end":445,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8875226,"byte_end":8875249,"line_start":446,"line_end":446,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8875254,"byte_end":8875295,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8875300,"byte_end":8875303,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take_while(|x| *x <= 3);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8875308,"byte_end":8875374,"line_start":449,"line_end":449,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8875379,"byte_end":8875382,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8875387,"byte_end":8875432,"line_start":451,"line_end":451,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8875437,"byte_end":8875482,"line_start":452,"line_end":452,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8875487,"byte_end":8875532,"line_start":453,"line_end":453,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8875537,"byte_end":8875579,"line_start":454,"line_end":454,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8875584,"byte_end":8875591,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8875596,"byte_end":8875603,"line_start":456,"line_end":456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6501},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8876318,"byte_end":8876322,"line_start":483,"line_end":483,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Creates a new stream that will skip the `n` first items of the\n underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream that will skip the `n` first items of the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8875778,"byte_end":8875844,"line_start":465,"line_end":465,"column_start":5,"column_end":71}},{"value":"/ underlying stream.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8875849,"byte_end":8875871,"line_start":466,"line_end":466,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8875876,"byte_end":8875879,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8875884,"byte_end":8875898,"line_start":468,"line_end":468,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8875903,"byte_end":8875906,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8875911,"byte_end":8875918,"line_start":470,"line_end":470,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8875923,"byte_end":8875943,"line_start":471,"line_end":471,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8875948,"byte_end":8875971,"line_start":472,"line_end":472,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8875976,"byte_end":8876017,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8876022,"byte_end":8876025,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).skip(7);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8876030,"byte_end":8876080,"line_start":475,"line_end":475,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8876085,"byte_end":8876088,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(8), stream.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8876093,"byte_end":8876138,"line_start":477,"line_end":477,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(9), stream.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8876143,"byte_end":8876188,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(10), stream.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8876193,"byte_end":8876239,"line_start":479,"line_end":479,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8876244,"byte_end":8876286,"line_start":480,"line_end":480,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8876291,"byte_end":8876298,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8876303,"byte_end":8876310,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6502},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8877300,"byte_end":8877310,"line_start":513,"line_end":513,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::StreamExt::skip_while","value":"pub fn skip_while<F>(Self, F) -> SkipWhile<Self, F> where\nF: FnMut(&Self::Item) -> bool, Self: Sized","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Skip elements from the underlying stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements from the underlying stream while the provided predicate","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8876428,"byte_end":8876501,"line_start":490,"line_end":490,"column_start":5,"column_end":78}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8876506,"byte_end":8876529,"line_start":491,"line_end":491,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8876534,"byte_end":8876537,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This function, like [`Iterator::skip_while`], will ignore elemets from the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8876542,"byte_end":8876620,"line_start":493,"line_end":493,"column_start":5,"column_end":83}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8876625,"byte_end":8876697,"line_start":494,"line_end":494,"column_start":5,"column_end":77}},{"value":"/ returns false, the rest of the elements will be yielded.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8876702,"byte_end":8876762,"line_start":495,"line_end":495,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8876767,"byte_end":8876770,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ [`Iterator::skip_while`]: std::iter::Iterator::skip_while()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8876775,"byte_end":8876838,"line_start":497,"line_end":497,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8876843,"byte_end":8876846,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8876851,"byte_end":8876865,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8876870,"byte_end":8876873,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8876878,"byte_end":8876885,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8876890,"byte_end":8876910,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8876915,"byte_end":8876938,"line_start":503,"line_end":503,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8876943,"byte_end":8876984,"line_start":504,"line_end":504,"column_start":5,"column_end":46}},{"value":"/ let mut stream = stream::iter(vec![1,2,3,4,1]).skip_while(|x| *x < 3);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8876989,"byte_end":8877063,"line_start":505,"line_end":505,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8877068,"byte_end":8877071,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8877076,"byte_end":8877121,"line_start":507,"line_end":507,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(4), stream.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8877126,"byte_end":8877171,"line_start":508,"line_end":508,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8877176,"byte_end":8877221,"line_start":509,"line_end":509,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8877226,"byte_end":8877268,"line_start":510,"line_end":510,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8877273,"byte_end":8877280,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8877285,"byte_end":8877292,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6504},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878889,"byte_end":8878892,"line_start":568,"line_end":568,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::StreamExt::all","value":"pub fn all<F>(&mut Self, F) -> AllFuture<, Self, F> where Self: Unpin,\nF: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Tests if every element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if every element of the stream matches a predicate.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8877467,"byte_end":8877528,"line_start":521,"line_end":521,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8877533,"byte_end":8877536,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ `all()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8877541,"byte_end":8877611,"line_start":523,"line_end":523,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if they all return","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8877616,"byte_end":8877686,"line_start":524,"line_end":524,"column_start":5,"column_end":75}},{"value":"/ `true`, then so does `all`. If any of them return `false`, it","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8877691,"byte_end":8877756,"line_start":525,"line_end":525,"column_start":5,"column_end":70}},{"value":"/ returns `false`. An empty stream returns `true`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8877761,"byte_end":8877813,"line_start":526,"line_end":526,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8877818,"byte_end":8877821,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ `all()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8877826,"byte_end":8877898,"line_start":528,"line_end":528,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `false`, given that no matter what else happens,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8877903,"byte_end":8877977,"line_start":529,"line_end":529,"column_start":5,"column_end":79}},{"value":"/ the result will also be `false`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8877982,"byte_end":8878018,"line_start":530,"line_end":530,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878023,"byte_end":8878026,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `true`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878031,"byte_end":8878066,"line_start":532,"line_end":532,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878071,"byte_end":8878074,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878079,"byte_end":8878093,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878098,"byte_end":8878101,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878106,"byte_end":8878122,"line_start":536,"line_end":536,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878127,"byte_end":8878130,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878135,"byte_end":8878142,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878147,"byte_end":8878167,"line_start":539,"line_end":539,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878172,"byte_end":8878195,"line_start":540,"line_end":540,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878200,"byte_end":8878241,"line_start":541,"line_end":541,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878246,"byte_end":8878249,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878254,"byte_end":8878276,"line_start":543,"line_end":543,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878281,"byte_end":8878284,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).all(|&x| x > 0).await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878289,"byte_end":8878341,"line_start":545,"line_end":545,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878346,"byte_end":8878349,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).all(|&x| x > 2).await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878354,"byte_end":8878407,"line_start":547,"line_end":547,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878412,"byte_end":8878419,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878424,"byte_end":8878431,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878436,"byte_end":8878439,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `false`:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878444,"byte_end":8878478,"line_start":551,"line_end":551,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878483,"byte_end":8878486,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878491,"byte_end":8878498,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878503,"byte_end":8878523,"line_start":554,"line_end":554,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878528,"byte_end":8878551,"line_start":555,"line_end":555,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878556,"byte_end":8878597,"line_start":556,"line_end":556,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878602,"byte_end":8878605,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878610,"byte_end":8878632,"line_start":558,"line_end":558,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878637,"byte_end":8878640,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878645,"byte_end":8878681,"line_start":560,"line_end":560,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878686,"byte_end":8878689,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ assert!(!iter.all(|&x| x != 2).await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878694,"byte_end":8878736,"line_start":562,"line_end":562,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878741,"byte_end":8878744,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878749,"byte_end":8878808,"line_start":564,"line_end":564,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&3));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878813,"byte_end":8878857,"line_start":565,"line_end":565,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878862,"byte_end":8878869,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8878874,"byte_end":8878881,"line_start":567,"line_end":567,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6506},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880417,"byte_end":8880420,"line_start":621,"line_end":621,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::StreamExt::any","value":"pub fn any<F>(&mut Self, F) -> AnyFuture<, Self, F> where Self: Unpin,\nF: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Tests if any element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if any element of the stream matches a predicate.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8879057,"byte_end":8879116,"line_start":576,"line_end":576,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8879121,"byte_end":8879124,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ `any()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8879129,"byte_end":8879199,"line_start":578,"line_end":578,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if any of them return","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8879204,"byte_end":8879277,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/ `true`, then so does `any()`. If they all return `false`, it","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8879282,"byte_end":8879346,"line_start":580,"line_end":580,"column_start":5,"column_end":69}},{"value":"/ returns `false`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8879351,"byte_end":8879371,"line_start":581,"line_end":581,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8879376,"byte_end":8879379,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ `any()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8879384,"byte_end":8879456,"line_start":583,"line_end":583,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `true`, given that no matter what else happens,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8879461,"byte_end":8879534,"line_start":584,"line_end":584,"column_start":5,"column_end":78}},{"value":"/ the result will also be `true`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8879539,"byte_end":8879574,"line_start":585,"line_end":585,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8879579,"byte_end":8879582,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `false`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8879587,"byte_end":8879623,"line_start":587,"line_end":587,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8879628,"byte_end":8879631,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8879636,"byte_end":8879652,"line_start":589,"line_end":589,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8879657,"byte_end":8879660,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8879665,"byte_end":8879672,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8879677,"byte_end":8879697,"line_start":592,"line_end":592,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8879702,"byte_end":8879725,"line_start":593,"line_end":593,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8879730,"byte_end":8879771,"line_start":594,"line_end":594,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8879776,"byte_end":8879779,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8879784,"byte_end":8879806,"line_start":596,"line_end":596,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8879811,"byte_end":8879814,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).any(|&x| x > 0).await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8879819,"byte_end":8879871,"line_start":598,"line_end":598,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8879876,"byte_end":8879879,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).any(|&x| x > 5).await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8879884,"byte_end":8879937,"line_start":600,"line_end":600,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8879942,"byte_end":8879949,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8879954,"byte_end":8879961,"line_start":602,"line_end":602,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8879966,"byte_end":8879969,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `true`:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8879974,"byte_end":8880007,"line_start":604,"line_end":604,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880012,"byte_end":8880015,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880020,"byte_end":8880027,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880032,"byte_end":8880052,"line_start":607,"line_end":607,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880057,"byte_end":8880080,"line_start":608,"line_end":608,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880085,"byte_end":8880126,"line_start":609,"line_end":609,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880131,"byte_end":8880134,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880139,"byte_end":8880161,"line_start":611,"line_end":611,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880166,"byte_end":8880169,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880174,"byte_end":8880210,"line_start":613,"line_end":613,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880215,"byte_end":8880218,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ assert!(iter.any(|&x| x != 2).await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880223,"byte_end":8880264,"line_start":615,"line_end":615,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880269,"byte_end":8880272,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880277,"byte_end":8880336,"line_start":617,"line_end":617,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&2));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880341,"byte_end":8880385,"line_start":618,"line_end":618,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880390,"byte_end":8880397,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880402,"byte_end":8880409,"line_start":620,"line_end":620,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6508},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8881563,"byte_end":8881568,"line_start":656,"line_end":656,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::StreamExt::chain","value":"pub fn chain<U>(Self, U) -> Chain<Self, U> where U: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Combine two streams into one by first returning all values from the\n first stream then all values from the second stream.","sig":null,"attributes":[{"value":"/ Combine two streams into one by first returning all values from the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880585,"byte_end":8880656,"line_start":629,"line_end":629,"column_start":5,"column_end":76}},{"value":"/ first stream then all values from the second stream.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880661,"byte_end":8880717,"line_start":630,"line_end":630,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880722,"byte_end":8880725,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ As long as `self` still has values to emit, no values from `other` are","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880730,"byte_end":8880804,"line_start":632,"line_end":632,"column_start":5,"column_end":79}},{"value":"/ emitted, even if some are ready.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880809,"byte_end":8880845,"line_start":633,"line_end":633,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880850,"byte_end":8880853,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880858,"byte_end":8880872,"line_start":635,"line_end":635,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880877,"byte_end":8880880,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880885,"byte_end":8880892,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880897,"byte_end":8880938,"line_start":638,"line_end":638,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880943,"byte_end":8880946,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880951,"byte_end":8880969,"line_start":640,"line_end":640,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8880974,"byte_end":8880995,"line_start":641,"line_end":641,"column_start":5,"column_end":26}},{"value":"/     let one = stream::iter(vec![1, 2, 3]);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8881000,"byte_end":8881046,"line_start":642,"line_end":642,"column_start":5,"column_end":51}},{"value":"/     let two = stream::iter(vec![4, 5, 6]);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8881051,"byte_end":8881097,"line_start":643,"line_end":643,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8881102,"byte_end":8881105,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/     let mut stream = one.chain(two);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8881110,"byte_end":8881150,"line_start":645,"line_end":645,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8881155,"byte_end":8881158,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8881163,"byte_end":8881212,"line_start":647,"line_end":647,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8881217,"byte_end":8881266,"line_start":648,"line_end":648,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8881271,"byte_end":8881320,"line_start":649,"line_end":649,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8881325,"byte_end":8881374,"line_start":650,"line_end":650,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(5));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8881379,"byte_end":8881428,"line_start":651,"line_end":651,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(6));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8881433,"byte_end":8881482,"line_start":652,"line_end":652,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8881487,"byte_end":8881533,"line_start":653,"line_end":653,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8881538,"byte_end":8881543,"line_start":654,"line_end":654,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8881548,"byte_end":8881555,"line_start":655,"line_end":655,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6510},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8882161,"byte_end":8882165,"line_start":680,"line_end":680,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::StreamExt::fold","value":"pub fn fold<B, F>(Self, B, F) -> FoldFuture<Self, B, F> where Self: Sized,\nF: FnMut(B, Self::Item) -> B","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" A combinator that applies a function to every element in a stream\n producing a single, final value.","sig":null,"attributes":[{"value":"/ A combinator that applies a function to every element in a stream","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8881724,"byte_end":8881793,"line_start":664,"line_end":664,"column_start":5,"column_end":74}},{"value":"/ producing a single, final value.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8881798,"byte_end":8881834,"line_start":665,"line_end":665,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8881839,"byte_end":8881842,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8881847,"byte_end":8881861,"line_start":667,"line_end":667,"column_start":5,"column_end":19}},{"value":"/ Basic usage:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8881866,"byte_end":8881882,"line_start":668,"line_end":668,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8881887,"byte_end":8881894,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8881899,"byte_end":8881919,"line_start":670,"line_end":670,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8881924,"byte_end":8881947,"line_start":671,"line_end":671,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, *};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8881952,"byte_end":8881985,"line_start":672,"line_end":672,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8881990,"byte_end":8881993,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ let s = stream::iter(vec![1u8, 2, 3]);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8881998,"byte_end":8882040,"line_start":674,"line_end":674,"column_start":5,"column_end":47}},{"value":"/ let sum = s.fold(0, |acc, x| acc + x).await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8882045,"byte_end":8882093,"line_start":675,"line_end":675,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8882098,"byte_end":8882101,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, 6);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8882106,"byte_end":8882129,"line_start":677,"line_end":677,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8882134,"byte_end":8882141,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8882146,"byte_end":8882153,"line_start":679,"line_end":679,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6513},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8884478,"byte_end":8884485,"line_start":752,"line_end":752,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::StreamExt::collect","value":"pub fn collect<T>(Self) -> Collect<Self, T> where T: FromStream<Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Drain stream pushing all emitted values into a collection.","sig":null,"attributes":[{"value":"/ Drain stream pushing all emitted values into a collection.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8882344,"byte_end":8882406,"line_start":688,"line_end":688,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8882411,"byte_end":8882414,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ `collect` streams all values, awaiting as needed. Values are pushed into","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8882419,"byte_end":8882495,"line_start":690,"line_end":690,"column_start":5,"column_end":81}},{"value":"/ a collection. A number of different target collection types are","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8882500,"byte_end":8882567,"line_start":691,"line_end":691,"column_start":5,"column_end":72}},{"value":"/ supported, including [`Vec`](std::vec::Vec),","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8882572,"byte_end":8882620,"line_start":692,"line_end":692,"column_start":5,"column_end":53}},{"value":"/ [`String`](std::string::String), and [`Bytes`](bytes::Bytes).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8882625,"byte_end":8882690,"line_start":693,"line_end":693,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8882695,"byte_end":8882698,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # `Result`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8882703,"byte_end":8882717,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8882722,"byte_end":8882725,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ `collect()` can also be used with streams of type `Result<T, E>` where","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8882730,"byte_end":8882804,"line_start":697,"line_end":697,"column_start":5,"column_end":79}},{"value":"/ `T: FromStream<_>`. In this case, `collect()` will stream as long as","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8882809,"byte_end":8882881,"line_start":698,"line_end":698,"column_start":5,"column_end":77}},{"value":"/ values yielded from the stream are `Ok(_)`. If `Err(_)` is encountered,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8882886,"byte_end":8882961,"line_start":699,"line_end":699,"column_start":5,"column_end":80}},{"value":"/ streaming is terminated and `collect()` returns the `Err`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8882966,"byte_end":8883028,"line_start":700,"line_end":700,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883033,"byte_end":8883036,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883041,"byte_end":8883052,"line_start":702,"line_end":702,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883057,"byte_end":8883060,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ `FromStream` is currently a sealed trait. Stabilization is pending","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883065,"byte_end":8883135,"line_start":704,"line_end":704,"column_start":5,"column_end":75}},{"value":"/ enhancements to the Rust language.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883140,"byte_end":8883178,"line_start":705,"line_end":705,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883183,"byte_end":8883186,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883191,"byte_end":8883205,"line_start":707,"line_end":707,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883210,"byte_end":8883213,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883218,"byte_end":8883234,"line_start":709,"line_end":709,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883239,"byte_end":8883242,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883247,"byte_end":8883254,"line_start":711,"line_end":711,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883259,"byte_end":8883300,"line_start":712,"line_end":712,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883305,"byte_end":8883308,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883313,"byte_end":8883331,"line_start":714,"line_end":714,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883336,"byte_end":8883357,"line_start":715,"line_end":715,"column_start":5,"column_end":26}},{"value":"/     let doubled: Vec<i32> =","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883362,"byte_end":8883393,"line_start":716,"line_end":716,"column_start":5,"column_end":36}},{"value":"/         stream::iter(vec![1, 2, 3])","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883398,"byte_end":8883437,"line_start":717,"line_end":717,"column_start":5,"column_end":44}},{"value":"/             .map(|x| x * 2)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883442,"byte_end":8883473,"line_start":718,"line_end":718,"column_start":5,"column_end":36}},{"value":"/             .collect()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883478,"byte_end":8883504,"line_start":719,"line_end":719,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883509,"byte_end":8883532,"line_start":720,"line_end":720,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883537,"byte_end":8883540,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(vec![2, 4, 6], doubled);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883545,"byte_end":8883588,"line_start":722,"line_end":722,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883593,"byte_end":8883598,"line_start":723,"line_end":723,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883603,"byte_end":8883610,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883615,"byte_end":8883618,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ Collecting a stream of `Result` values","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883623,"byte_end":8883665,"line_start":726,"line_end":726,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883670,"byte_end":8883673,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883678,"byte_end":8883685,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883690,"byte_end":8883731,"line_start":729,"line_end":729,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883736,"byte_end":8883739,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883744,"byte_end":8883762,"line_start":731,"line_end":731,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883767,"byte_end":8883788,"line_start":732,"line_end":732,"column_start":5,"column_end":26}},{"value":"/     // A stream containing only `Ok` values will be collected","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883793,"byte_end":8883858,"line_start":733,"line_end":733,"column_start":5,"column_end":70}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883863,"byte_end":8883907,"line_start":734,"line_end":734,"column_start":5,"column_end":49}},{"value":"/         stream::iter(vec![Ok(1), Ok(2), Ok(3)])","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883912,"byte_end":8883963,"line_start":735,"line_end":735,"column_start":5,"column_end":56}},{"value":"/             .collect()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883968,"byte_end":8883994,"line_start":736,"line_end":736,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8883999,"byte_end":8884022,"line_start":737,"line_end":737,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8884027,"byte_end":8884030,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(vec![1, 2, 3]), values);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8884035,"byte_end":8884081,"line_start":739,"line_end":739,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8884086,"byte_end":8884089,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/     // A stream containing `Err` values will return the first error.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8884094,"byte_end":8884166,"line_start":741,"line_end":741,"column_start":5,"column_end":77}},{"value":"/     let results = vec![Ok(1), Err(\"no\"), Ok(2), Ok(3), Err(\"nein\")];","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8884171,"byte_end":8884243,"line_start":742,"line_end":742,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8884248,"byte_end":8884251,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8884256,"byte_end":8884300,"line_start":744,"line_end":744,"column_start":5,"column_end":49}},{"value":"/         stream::iter(results)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8884305,"byte_end":8884338,"line_start":745,"line_end":745,"column_start":5,"column_end":38}},{"value":"/             .collect()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8884343,"byte_end":8884369,"line_start":746,"line_end":746,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8884374,"byte_end":8884397,"line_start":747,"line_end":747,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8884402,"byte_end":8884405,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Err(\"no\"), values);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8884410,"byte_end":8884448,"line_start":749,"line_end":749,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8884453,"byte_end":8884458,"line_start":750,"line_end":750,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8884463,"byte_end":8884470,"line_start":751,"line_end":751,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6515},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8887140,"byte_end":8887147,"line_start":816,"line_end":816,"column_start":8,"column_end":15},"name":"timeout","qualname":"::stream::StreamExt::timeout","value":"pub fn timeout(Self, Duration) -> Timeout<Self> where Self: Sized","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Applies a per-item timeout to the passed stream.","sig":null,"attributes":[{"value":"/ Applies a per-item timeout to the passed stream.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8884625,"byte_end":8884677,"line_start":760,"line_end":760,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8884682,"byte_end":8884685,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ `timeout()` takes a `Duration` that represents the maximum amount of","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8884690,"byte_end":8884762,"line_start":762,"line_end":762,"column_start":5,"column_end":77}},{"value":"/ time each element of the stream has to complete before timing out.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8884767,"byte_end":8884837,"line_start":763,"line_end":763,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8884842,"byte_end":8884845,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ If the wrapped stream yields a value before the deadline is reached, the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8884850,"byte_end":8884926,"line_start":765,"line_end":765,"column_start":5,"column_end":81}},{"value":"/ value is returned. Otherwise, an error is returned. The caller may decide","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8884931,"byte_end":8885008,"line_start":766,"line_end":766,"column_start":5,"column_end":82}},{"value":"/ to continue consuming the stream and will eventually get the next source","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8885013,"byte_end":8885089,"line_start":767,"line_end":767,"column_start":5,"column_end":81}},{"value":"/ stream value once it becomes available.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8885094,"byte_end":8885137,"line_start":768,"line_end":768,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8885142,"byte_end":8885145,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8885150,"byte_end":8885161,"line_start":770,"line_end":770,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8885166,"byte_end":8885169,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ This function consumes the stream passed into it and returns a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8885174,"byte_end":8885240,"line_start":772,"line_end":772,"column_start":5,"column_end":71}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8885245,"byte_end":8885271,"line_start":773,"line_end":773,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8885276,"byte_end":8885279,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ Polling the returned stream will continue to poll the inner stream even","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8885284,"byte_end":8885359,"line_start":775,"line_end":775,"column_start":5,"column_end":80}},{"value":"/ if one or more items time out.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8885364,"byte_end":8885398,"line_start":776,"line_end":776,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8885403,"byte_end":8885406,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8885411,"byte_end":8885425,"line_start":778,"line_end":778,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8885430,"byte_end":8885433,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ Suppose we have a stream `int_stream` that yields 3 numbers (1, 2, 3):","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8885438,"byte_end":8885512,"line_start":780,"line_end":780,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8885517,"byte_end":8885520,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8885525,"byte_end":8885532,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8885537,"byte_end":8885557,"line_start":783,"line_end":783,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8885562,"byte_end":8885585,"line_start":784,"line_end":784,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8885590,"byte_end":8885631,"line_start":785,"line_end":785,"column_start":5,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8885636,"byte_end":8885664,"line_start":786,"line_end":786,"column_start":5,"column_end":33}},{"value":"/ # let int_stream = stream::iter(1..=3);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8885669,"byte_end":8885712,"line_start":787,"line_end":787,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8885717,"byte_end":8885720,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ let mut int_stream = int_stream.timeout(Duration::from_secs(1));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8885725,"byte_end":8885793,"line_start":789,"line_end":789,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8885798,"byte_end":8885801,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ // When no items time out, we get the 3 elements in succession:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8885806,"byte_end":8885873,"line_start":791,"line_end":791,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8885878,"byte_end":8885935,"line_start":792,"line_end":792,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8885940,"byte_end":8885997,"line_start":793,"line_end":793,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8886002,"byte_end":8886059,"line_start":794,"line_end":794,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8886064,"byte_end":8886118,"line_start":795,"line_end":795,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8886123,"byte_end":8886126,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ // If the second item times out, we get an error and continue polling the stream:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8886131,"byte_end":8886216,"line_start":797,"line_end":797,"column_start":5,"column_end":90}},{"value":"/ # let mut int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8886221,"byte_end":8886297,"line_start":798,"line_end":798,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8886302,"byte_end":8886359,"line_start":799,"line_end":799,"column_start":5,"column_end":62}},{"value":"/ assert!(int_stream.try_next().await.is_err());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8886364,"byte_end":8886414,"line_start":800,"line_end":800,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8886419,"byte_end":8886476,"line_start":801,"line_end":801,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8886481,"byte_end":8886538,"line_start":802,"line_end":802,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8886543,"byte_end":8886597,"line_start":803,"line_end":803,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8886602,"byte_end":8886605,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ // If we want to stop consuming the source stream the first time an","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8886610,"byte_end":8886681,"line_start":805,"line_end":805,"column_start":5,"column_end":76}},{"value":"/ // element times out, we can use the `take_while` operator:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8886686,"byte_end":8886749,"line_start":806,"line_end":806,"column_start":5,"column_end":68}},{"value":"/ # let int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8886754,"byte_end":8886826,"line_start":807,"line_end":807,"column_start":5,"column_end":77}},{"value":"/ let mut int_stream = int_stream.take_while(Result::is_ok);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8886831,"byte_end":8886893,"line_start":808,"line_end":808,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8886898,"byte_end":8886901,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8886906,"byte_end":8886963,"line_start":810,"line_end":810,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8886968,"byte_end":8887022,"line_start":811,"line_end":811,"column_start":5,"column_end":59}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8887027,"byte_end":8887034,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8887039,"byte_end":8887046,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"time\"))","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8887051,"byte_end":8887080,"line_start":814,"line_end":814,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":6620},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":6621},{"krate":0,"index":6631},{"krate":0,"index":6632},{"krate":0,"index":6633},{"krate":0,"index":6634},{"krate":0,"index":6821},{"krate":0,"index":7248},{"krate":0,"index":7329},{"krate":0,"index":7330},{"krate":0,"index":7331},{"krate":0,"index":7332},{"krate":0,"index":7333},{"krate":0,"index":7334},{"krate":0,"index":7383},{"krate":0,"index":7384},{"krate":0,"index":7503},{"krate":0,"index":7594},{"krate":0,"index":7732},{"krate":0,"index":7757},{"krate":0,"index":7758},{"krate":0,"index":7759},{"krate":0,"index":7760},{"krate":0,"index":7761},{"krate":0,"index":7814},{"krate":0,"index":7815},{"krate":0,"index":7816},{"krate":0,"index":7817},{"krate":0,"index":7818},{"krate":0,"index":7863},{"krate":0,"index":7864}],"decl_id":null,"docs":" Synchronization primitives for use in asynchronous contexts.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21247,"byte_end":21271,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ Synchronization primitives for use in asynchronous contexts.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8966567,"byte_end":8966631,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8966632,"byte_end":8966635,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Tokio programs tend to be organized as a set of [tasks] where each task","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8966636,"byte_end":8966711,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ operates independently and may be executed on separate physical threads. The","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8966712,"byte_end":8966792,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ synchronization primitives provided in this module permit these independent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8966793,"byte_end":8966872,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ tasks to communicate together.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8966873,"byte_end":8966907,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8966908,"byte_end":8966911,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8966912,"byte_end":8966936,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8966937,"byte_end":8966940,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Message passing","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8966941,"byte_end":8966962,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8966963,"byte_end":8966966,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The most common form of synchronization in a Tokio program is message","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8966967,"byte_end":8967040,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ passing. Two tasks operate independently and send messages to each other to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8967041,"byte_end":8967120,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ synchronize. Doing so has the advantage of avoiding shared state.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8967121,"byte_end":8967190,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8967191,"byte_end":8967194,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Message passing is implemented using channels. A channel supports sending a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8967195,"byte_end":8967274,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ message from one producer task to one or more consumer tasks. There are a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8967275,"byte_end":8967352,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ few flavors of channels provided by Tokio. Each channel flavor supports","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8967353,"byte_end":8967428,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ different message passing patterns. When a channel supports multiple","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8967429,"byte_end":8967501,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ producers, many separate tasks may **send** messages. When a channel","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8967502,"byte_end":8967574,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ supports muliple consumers, many different separate tasks may **receive**","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8967575,"byte_end":8967652,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ messages.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8967653,"byte_end":8967666,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8967667,"byte_end":8967670,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Tokio provides many different channel flavors as different message passing","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8967671,"byte_end":8967749,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ patterns are best handled with different implementations.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8967750,"byte_end":8967811,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8967812,"byte_end":8967815,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## `oneshot` channel","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8967816,"byte_end":8967840,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8967841,"byte_end":8967844,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The [`oneshot` channel][oneshot] supports sending a **single** value from a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8967845,"byte_end":8967924,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ single producer to a single consumer. This channel is usually used to send","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8967925,"byte_end":8968003,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ the result of a computation to a waiter.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968004,"byte_end":8968048,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968049,"byte_end":8968052,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ **Example:** using a [`oneshot` channel][oneshot] to receive the result of a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968053,"byte_end":8968133,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ computation.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968134,"byte_end":8968150,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968151,"byte_end":8968154,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968155,"byte_end":8968162,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968163,"byte_end":8968192,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968193,"byte_end":8968196,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968197,"byte_end":8968240,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/     \"represents the result of the computation\".to_string()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968241,"byte_end":8968303,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968304,"byte_end":8968309,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968310,"byte_end":8968313,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968314,"byte_end":8968332,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968333,"byte_end":8968354,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968355,"byte_end":8968397,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968398,"byte_end":8968401,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968402,"byte_end":8968435,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         let res = some_computation().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968436,"byte_end":8968483,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/         tx.send(res).unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968484,"byte_end":8968518,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968519,"byte_end":8968530,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968531,"byte_end":8968534,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968535,"byte_end":8968612,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968613,"byte_end":8968616,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968617,"byte_end":8968659,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/     let res = rx.await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968660,"byte_end":8968696,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968697,"byte_end":8968702,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968703,"byte_end":8968710,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968711,"byte_end":8968714,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Note, if the task produces a computation result as its final","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968715,"byte_end":8968779,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"/ action before terminating, the [`JoinHandle`] can be used to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968780,"byte_end":8968844,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"/ receive that value instead of allocating resources for the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968845,"byte_end":8968907,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"/ `oneshot` channel. Awaiting on [`JoinHandle`] returns `Result`. If","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968908,"byte_end":8968978,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ the task panics, the `Joinhandle` yields `Err` with the panic","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8968979,"byte_end":8969044,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ cause.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969045,"byte_end":8969055,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969056,"byte_end":8969059,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ **Example:**","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969060,"byte_end":8969076,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969077,"byte_end":8969080,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969081,"byte_end":8969088,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969089,"byte_end":8969132,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/     \"the result of the computation\".to_string()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969133,"byte_end":8969184,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969185,"byte_end":8969190,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969191,"byte_end":8969194,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969195,"byte_end":8969213,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969214,"byte_end":8969235,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969236,"byte_end":8969287,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/         some_computation().await","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969288,"byte_end":8969324,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969325,"byte_end":8969336,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969337,"byte_end":8969340,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969341,"byte_end":8969418,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969419,"byte_end":8969422,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969423,"byte_end":8969465,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/     let res = join_handle.await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969466,"byte_end":8969511,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969512,"byte_end":8969517,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969518,"byte_end":8969525,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969526,"byte_end":8969529,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [oneshot]: oneshot","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969530,"byte_end":8969552,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969553,"byte_end":8969596,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969597,"byte_end":8969600,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ## `mpsc` channel","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969601,"byte_end":8969622,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969623,"byte_end":8969626,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc` channel][mpsc] supports sending **many** values from **many**","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969627,"byte_end":8969704,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/ producers to a single consumer. This channel is often used to send work to a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969705,"byte_end":8969785,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ task or to receive the result of many computations.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969786,"byte_end":8969841,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969842,"byte_end":8969845,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ **Example:** using an mpsc to incrementally stream the results of a series","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969846,"byte_end":8969924,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ of computations.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969925,"byte_end":8969945,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969946,"byte_end":8969949,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969950,"byte_end":8969957,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969958,"byte_end":8969984,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969985,"byte_end":8969988,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation(input: u32) -> String {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8969989,"byte_end":8970042,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"/     format!(\"the result of computation {}\", input)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8970043,"byte_end":8970097,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8970098,"byte_end":8970103,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8970104,"byte_end":8970107,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8970108,"byte_end":8970126,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8970127,"byte_end":8970148,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8970149,"byte_end":8970199,"line_start":109,"line_end":109,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8970200,"byte_end":8970203,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8970204,"byte_end":8970237,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8970238,"byte_end":8970266,"line_start":112,"line_end":112,"column_start":1,"column_end":29}},{"value":"/             let res = some_computation(i).await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8970267,"byte_end":8970319,"line_start":113,"line_end":113,"column_start":1,"column_end":53}},{"value":"/             tx.send(res).await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8970320,"byte_end":8970364,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"/         }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8970365,"byte_end":8970378,"line_start":115,"line_end":115,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8970379,"byte_end":8970390,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8970391,"byte_end":8970394,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8970395,"byte_end":8970442,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/         println!(\"got = {}\", res);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8970443,"byte_end":8970481,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8970482,"byte_end":8970491,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8970492,"byte_end":8970497,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8970498,"byte_end":8970505,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8970506,"byte_end":8970509,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The argument to `mpsc::channel` is the channel capacity. This is the maximum","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8970510,"byte_end":8970590,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/ number of values that can be stored in the channel pending receipt at any","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8970591,"byte_end":8970668,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ given time. Properly setting this value is key in implementing robust","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8970669,"byte_end":8970742,"line_start":126,"line_end":126,"column_start":1,"column_end":74}},{"value":"/ programs as the channel capacity plays a critical part in handling back","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8970743,"byte_end":8970818,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ pressure.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8970819,"byte_end":8970832,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8970833,"byte_end":8970836,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ A common concurrency pattern for resource management is to spawn a task","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8970837,"byte_end":8970912,"line_start":130,"line_end":130,"column_start":1,"column_end":76}},{"value":"/ dedicated to managing that resource and using message passing between other","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8970913,"byte_end":8970992,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ tasks to interact with the resource. The resource may be anything that may","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8970993,"byte_end":8971071,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ not be concurrently used. Some examples include a socket and program state.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8971072,"byte_end":8971151,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ For example, if multiple tasks need to send data over a single socket, spawn","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8971152,"byte_end":8971232,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"/ a task to manage the socket and use a channel to synchronize.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8971233,"byte_end":8971298,"line_start":135,"line_end":135,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8971299,"byte_end":8971302,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ **Example:** sending data from many tasks over a single socket using message","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8971303,"byte_end":8971383,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ passing.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8971384,"byte_end":8971396,"line_start":138,"line_end":138,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8971397,"byte_end":8971400,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8971401,"byte_end":8971414,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncWriteExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8971415,"byte_end":8971456,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8971457,"byte_end":8971487,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8971488,"byte_end":8971514,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8971515,"byte_end":8971518,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8971519,"byte_end":8971537,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8971538,"byte_end":8971577,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"/     let mut socket = TcpStream::connect(\"www.example.com:1234\").await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8971578,"byte_end":8971653,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8971654,"byte_end":8971700,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8971701,"byte_end":8971704,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..10 {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8971705,"byte_end":8971729,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"/         // Each task needs its own `tx` handle. This is done by cloning the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8971730,"byte_end":8971809,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/         // original handle.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8971810,"byte_end":8971841,"line_start":152,"line_end":152,"column_start":1,"column_end":32}},{"value":"/         let mut tx = tx.clone();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8971842,"byte_end":8971878,"line_start":153,"line_end":153,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8971879,"byte_end":8971882,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8971883,"byte_end":8971920,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"/             tx.send(&b\"data to write\"[..]).await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8971921,"byte_end":8971983,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"/         });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8971984,"byte_end":8971999,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8972000,"byte_end":8972009,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8972010,"byte_end":8972013,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/     // The `rx` half of the channel returns `None` once **all** `tx` clones","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8972014,"byte_end":8972093,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/     // drop. To ensure `None` is returned, drop the handle owned by the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8972094,"byte_end":8972169,"line_start":161,"line_end":161,"column_start":1,"column_end":76}},{"value":"/     // current task. If this `tx` handle is not dropped, there will always","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8972170,"byte_end":8972248,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/     // be a single outstanding `tx` handle.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8972249,"byte_end":8972296,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"/     drop(tx);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8972297,"byte_end":8972314,"line_start":164,"line_end":164,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8972315,"byte_end":8972318,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8972319,"byte_end":8972366,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/         socket.write_all(res).await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8972367,"byte_end":8972408,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8972409,"byte_end":8972418,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8972419,"byte_end":8972422,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8972423,"byte_end":8972437,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8972438,"byte_end":8972443,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8972444,"byte_end":8972451,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8972452,"byte_end":8972455,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc`][mpsc] and [`oneshot`][oneshot] channels can be combined to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8972456,"byte_end":8972531,"line_start":174,"line_end":174,"column_start":1,"column_end":76}},{"value":"/ provide a request / response type synchronization pattern with a shared","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8972532,"byte_end":8972607,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"/ resource. A task is spawned to synchronize a resource and waits on commands","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8972608,"byte_end":8972687,"line_start":176,"line_end":176,"column_start":1,"column_end":80}},{"value":"/ received on a [`mpsc`][mpsc] channel. Each command includes a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8972688,"byte_end":8972753,"line_start":177,"line_end":177,"column_start":1,"column_end":66}},{"value":"/ [`oneshot`][oneshot] `Sender` on which the result of the command is sent.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8972754,"byte_end":8972831,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8972832,"byte_end":8972835,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a task to synchronize a `u64` counter. Each task sends an","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8972836,"byte_end":8972914,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"/ \"fetch and increment\" command. The counter value **before** the increment is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8972915,"byte_end":8972995,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ sent over the provided `oneshot` channel.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8972996,"byte_end":8973041,"line_start":182,"line_end":182,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973042,"byte_end":8973045,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973046,"byte_end":8973053,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::{oneshot, mpsc};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973054,"byte_end":8973091,"line_start":185,"line_end":185,"column_start":1,"column_end":38}},{"value":"/ use Command::Increment;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973092,"byte_end":8973119,"line_start":186,"line_end":186,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973120,"byte_end":8973123,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973124,"byte_end":8973142,"line_start":188,"line_end":188,"column_start":1,"column_end":19}},{"value":"/     Increment,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973143,"byte_end":8973161,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/     // Other commands can be added here","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973162,"byte_end":8973205,"line_start":190,"line_end":190,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973206,"byte_end":8973211,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973212,"byte_end":8973215,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973216,"byte_end":8973234,"line_start":193,"line_end":193,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973235,"byte_end":8973256,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"/     let (cmd_tx, mut cmd_rx) = mpsc::channel::<(Command, oneshot::Sender<u64>)>(100);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973257,"byte_end":8973346,"line_start":195,"line_end":195,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973347,"byte_end":8973350,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to manage the counter","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973351,"byte_end":8973396,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973397,"byte_end":8973430,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"/         let mut counter: u64 = 0;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973431,"byte_end":8973468,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973469,"byte_end":8973472,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/         while let Some((cmd, response)) = cmd_rx.recv().await {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973473,"byte_end":8973540,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"/             match cmd {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973541,"byte_end":8973568,"line_start":202,"line_end":202,"column_start":1,"column_end":28}},{"value":"/                 Increment => {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973569,"byte_end":8973603,"line_start":203,"line_end":203,"column_start":1,"column_end":35}},{"value":"/                     let prev = counter;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973604,"byte_end":8973647,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"/                     counter += 1;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973648,"byte_end":8973685,"line_start":205,"line_end":205,"column_start":1,"column_end":38}},{"value":"/                     response.send(prev).unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973686,"byte_end":8973739,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"/                 }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973740,"byte_end":8973761,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973762,"byte_end":8973779,"line_start":208,"line_end":208,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973780,"byte_end":8973793,"line_start":209,"line_end":209,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973794,"byte_end":8973805,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973806,"byte_end":8973809,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/     let mut join_handles = vec![];","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973810,"byte_end":8973848,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973849,"byte_end":8973852,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that will send the increment command.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973853,"byte_end":8973913,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"/     for _ in 0..10 {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973914,"byte_end":8973938,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"/         let mut cmd_tx = cmd_tx.clone();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973939,"byte_end":8973983,"line_start":216,"line_end":216,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973984,"byte_end":8973987,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8973988,"byte_end":8974043,"line_start":218,"line_end":218,"column_start":1,"column_end":56}},{"value":"/             let (resp_tx, resp_rx) = oneshot::channel();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974044,"byte_end":8974104,"line_start":219,"line_end":219,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974105,"byte_end":8974108,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/             cmd_tx.send((Increment, resp_tx)).await.ok().unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974109,"byte_end":8974179,"line_start":221,"line_end":221,"column_start":1,"column_end":71}},{"value":"/             let res = resp_rx.await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974180,"byte_end":8974229,"line_start":222,"line_end":222,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974230,"byte_end":8974233,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/             println!(\"previous value = {}\", res);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974234,"byte_end":8974287,"line_start":224,"line_end":224,"column_start":1,"column_end":54}},{"value":"/         }));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974288,"byte_end":8974304,"line_start":225,"line_end":225,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974305,"byte_end":8974314,"line_start":226,"line_end":226,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974315,"byte_end":8974318,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/     // Wait for all tasks to complete","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974319,"byte_end":8974360,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/     for join_handle in join_handles.drain(..) {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974361,"byte_end":8974412,"line_start":229,"line_end":229,"column_start":1,"column_end":52}},{"value":"/         join_handle.await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974413,"byte_end":8974452,"line_start":230,"line_end":230,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974453,"byte_end":8974462,"line_start":231,"line_end":231,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974463,"byte_end":8974468,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974469,"byte_end":8974476,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974477,"byte_end":8974480,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [mpsc]: mpsc","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974481,"byte_end":8974497,"line_start":235,"line_end":235,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974498,"byte_end":8974501,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ## `broadcast` channel","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974502,"byte_end":8974528,"line_start":237,"line_end":237,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974529,"byte_end":8974532,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The [`broadcast` channel] supports sending **many** values from","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974533,"byte_end":8974600,"line_start":239,"line_end":239,"column_start":1,"column_end":68}},{"value":"/ **many** producers to **many** consumers. Each consumer will receive","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974601,"byte_end":8974673,"line_start":240,"line_end":240,"column_start":1,"column_end":73}},{"value":"/ **each** value. This channel can be used to implement \"fan out\" style","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974674,"byte_end":8974747,"line_start":241,"line_end":241,"column_start":1,"column_end":74}},{"value":"/ patterns common with pub / sub or \"chat\" systems.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974748,"byte_end":8974801,"line_start":242,"line_end":242,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974802,"byte_end":8974805,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ This channel tends to be used less often than `oneshot` and `mpsc` but still","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974806,"byte_end":8974886,"line_start":244,"line_end":244,"column_start":1,"column_end":81}},{"value":"/ has its use cases.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974887,"byte_end":8974909,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974910,"byte_end":8974913,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974914,"byte_end":8974929,"line_start":247,"line_end":247,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974930,"byte_end":8974933,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974934,"byte_end":8974941,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974942,"byte_end":8974973,"line_start":250,"line_end":250,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974974,"byte_end":8974977,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974978,"byte_end":8974996,"line_start":252,"line_end":252,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8974997,"byte_end":8975018,"line_start":253,"line_end":253,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975019,"byte_end":8975070,"line_start":254,"line_end":254,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975071,"byte_end":8975108,"line_start":255,"line_end":255,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975109,"byte_end":8975112,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975113,"byte_end":8975146,"line_start":257,"line_end":257,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975147,"byte_end":8975201,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975202,"byte_end":8975256,"line_start":259,"line_end":259,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975257,"byte_end":8975268,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975269,"byte_end":8975272,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975273,"byte_end":8975306,"line_start":262,"line_end":262,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975307,"byte_end":8975361,"line_start":263,"line_end":263,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975362,"byte_end":8975416,"line_start":264,"line_end":264,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975417,"byte_end":8975428,"line_start":265,"line_end":265,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975429,"byte_end":8975432,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975433,"byte_end":8975462,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975463,"byte_end":8975492,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975493,"byte_end":8975498,"line_start":269,"line_end":269,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975499,"byte_end":8975506,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975507,"byte_end":8975510,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975511,"byte_end":8975560,"line_start":272,"line_end":272,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975561,"byte_end":8975564,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ ## `watch` channel","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975565,"byte_end":8975587,"line_start":274,"line_end":274,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975588,"byte_end":8975591,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] supports sending **many** values from a **single**","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975592,"byte_end":8975668,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"/ producer to **many** consumers. However, only the **most recent** value is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975669,"byte_end":8975747,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"/ stored in the channel. Consumers are notified when a new value is sent, but","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975748,"byte_end":8975827,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ there is no guarantee that consumers will see **all** values.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975828,"byte_end":8975893,"line_start":279,"line_end":279,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975894,"byte_end":8975897,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] is similar to a [`broadcast` channel] with capacity 1.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975898,"byte_end":8975978,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975979,"byte_end":8975982,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ Use cases for the [`watch` channel] include broadcasting configuration","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8975983,"byte_end":8976057,"line_start":283,"line_end":283,"column_start":1,"column_end":75}},{"value":"/ changes or signalling program state changes, such as transitioning to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976058,"byte_end":8976131,"line_start":284,"line_end":284,"column_start":1,"column_end":74}},{"value":"/ shutdown.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976132,"byte_end":8976145,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976146,"byte_end":8976149,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a [`watch` channel] to notify tasks of configuration","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976150,"byte_end":8976223,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"/ changes. In this example, a configuration file is checked periodically. When","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976224,"byte_end":8976304,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/ the file changes, the configuration changes are signalled to consumers.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976305,"byte_end":8976380,"line_start":289,"line_end":289,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976381,"byte_end":8976384,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976385,"byte_end":8976392,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976393,"byte_end":8976420,"line_start":292,"line_end":292,"column_start":1,"column_end":28}},{"value":"/ use tokio::time::{self, Duration, Instant};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976421,"byte_end":8976468,"line_start":293,"line_end":293,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976469,"byte_end":8976472,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976473,"byte_end":8976489,"line_start":295,"line_end":295,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976490,"byte_end":8976493,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Clone, Eq, PartialEq)]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976494,"byte_end":8976536,"line_start":297,"line_end":297,"column_start":1,"column_end":43}},{"value":"/ struct Config {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976537,"byte_end":8976556,"line_start":298,"line_end":298,"column_start":1,"column_end":20}},{"value":"/     timeout: Duration,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976557,"byte_end":8976583,"line_start":299,"line_end":299,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976584,"byte_end":8976589,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976590,"byte_end":8976593,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ impl Config {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976594,"byte_end":8976611,"line_start":302,"line_end":302,"column_start":1,"column_end":18}},{"value":"/     async fn load_from_file() -> io::Result<Config> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976612,"byte_end":8976669,"line_start":303,"line_end":303,"column_start":1,"column_end":58}},{"value":"/         // file loading and deserialization logic here","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976670,"byte_end":8976728,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"/ # Ok(Config { timeout: Duration::from_secs(1) })","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976729,"byte_end":8976781,"line_start":305,"line_end":305,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976782,"byte_end":8976791,"line_start":306,"line_end":306,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976792,"byte_end":8976797,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976798,"byte_end":8976801,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ async fn my_async_operation() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976802,"byte_end":8976837,"line_start":309,"line_end":309,"column_start":1,"column_end":36}},{"value":"/     // Do something here","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976838,"byte_end":8976866,"line_start":310,"line_end":310,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976867,"byte_end":8976872,"line_start":311,"line_end":311,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976873,"byte_end":8976876,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976877,"byte_end":8976895,"line_start":313,"line_end":313,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976896,"byte_end":8976917,"line_start":314,"line_end":314,"column_start":1,"column_end":22}},{"value":"/     // Load initial configuration value","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976918,"byte_end":8976961,"line_start":315,"line_end":315,"column_start":1,"column_end":44}},{"value":"/     let mut config = Config::load_from_file().await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8976962,"byte_end":8977027,"line_start":316,"line_end":316,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8977028,"byte_end":8977031,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/     // Create the watch channel, initialized with the loaded configuration","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8977032,"byte_end":8977110,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"/     let (tx, rx) = watch::channel(config.clone());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8977111,"byte_end":8977165,"line_start":319,"line_end":319,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8977166,"byte_end":8977169,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to monitor the file.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8977170,"byte_end":8977214,"line_start":321,"line_end":321,"column_start":1,"column_end":45}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8977215,"byte_end":8977248,"line_start":322,"line_end":322,"column_start":1,"column_end":34}},{"value":"/         loop {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8977249,"byte_end":8977267,"line_start":323,"line_end":323,"column_start":1,"column_end":19}},{"value":"/             // Wait 10 seconds between checks","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8977268,"byte_end":8977317,"line_start":324,"line_end":324,"column_start":1,"column_end":50}},{"value":"/             time::delay_for(Duration::from_secs(10)).await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8977318,"byte_end":8977381,"line_start":325,"line_end":325,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8977382,"byte_end":8977385,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/             // Load the configuration file","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8977386,"byte_end":8977432,"line_start":327,"line_end":327,"column_start":1,"column_end":47}},{"value":"/             let new_config = Config::load_from_file().await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8977433,"byte_end":8977506,"line_start":328,"line_end":328,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8977507,"byte_end":8977510,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/             // If the configuration changed, send the new config value","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8977511,"byte_end":8977585,"line_start":330,"line_end":330,"column_start":1,"column_end":75}},{"value":"/             // on the watch channel.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8977586,"byte_end":8977626,"line_start":331,"line_end":331,"column_start":1,"column_end":41}},{"value":"/             if new_config != config {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8977627,"byte_end":8977668,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"/                 tx.broadcast(new_config.clone()).unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8977669,"byte_end":8977731,"line_start":333,"line_end":333,"column_start":1,"column_end":63}},{"value":"/                 config = new_config;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8977732,"byte_end":8977772,"line_start":334,"line_end":334,"column_start":1,"column_end":41}},{"value":"/             }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8977773,"byte_end":8977790,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8977791,"byte_end":8977804,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8977805,"byte_end":8977816,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8977817,"byte_end":8977820,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/     let mut handles = vec![];","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8977821,"byte_end":8977854,"line_start":339,"line_end":339,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8977855,"byte_end":8977858,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that runs the async operation for at most `timeout`. If","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8977859,"byte_end":8977937,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"/     // the timeout elapses, restart the operation.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8977938,"byte_end":8977992,"line_start":342,"line_end":342,"column_start":1,"column_end":55}},{"value":"/     //","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8977993,"byte_end":8978003,"line_start":343,"line_end":343,"column_start":1,"column_end":11}},{"value":"/     // The task simultaneously watches the `Config` for changes. When the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8978004,"byte_end":8978081,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/     // timeout duration changes, the timeout is updated without restarting","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8978082,"byte_end":8978160,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"/     // the in-flight operation.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8978161,"byte_end":8978196,"line_start":346,"line_end":346,"column_start":1,"column_end":36}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8978197,"byte_end":8978220,"line_start":347,"line_end":347,"column_start":1,"column_end":24}},{"value":"/         // Clone a config watch handle for use in this task","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8978221,"byte_end":8978284,"line_start":348,"line_end":348,"column_start":1,"column_end":64}},{"value":"/         let mut rx = rx.clone();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8978285,"byte_end":8978321,"line_start":349,"line_end":349,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8978322,"byte_end":8978325,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/         let handle = tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8978326,"byte_end":8978376,"line_start":351,"line_end":351,"column_start":1,"column_end":51}},{"value":"/             // Start the initial operation and pin the future to the stack.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8978377,"byte_end":8978456,"line_start":352,"line_end":352,"column_start":1,"column_end":80}},{"value":"/             // Pinning to the stack is required to resume the operation","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8978457,"byte_end":8978532,"line_start":353,"line_end":353,"column_start":1,"column_end":76}},{"value":"/             // across multiple calls to `select!`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8978533,"byte_end":8978586,"line_start":354,"line_end":354,"column_start":1,"column_end":54}},{"value":"/             let op = my_async_operation();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8978587,"byte_end":8978633,"line_start":355,"line_end":355,"column_start":1,"column_end":47}},{"value":"/             tokio::pin!(op);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8978634,"byte_end":8978666,"line_start":356,"line_end":356,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8978667,"byte_end":8978670,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/             // Receive the **initial** configuration value. As this is the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8978671,"byte_end":8978749,"line_start":358,"line_end":358,"column_start":1,"column_end":79}},{"value":"/             // first time the config is received from the watch, it will","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8978750,"byte_end":8978826,"line_start":359,"line_end":359,"column_start":1,"column_end":77}},{"value":"/             // always complete immediatedly.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8978827,"byte_end":8978875,"line_start":360,"line_end":360,"column_start":1,"column_end":49}},{"value":"/             let mut conf = rx.recv().await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8978876,"byte_end":8978932,"line_start":361,"line_end":361,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8978933,"byte_end":8978936,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/             let mut op_start = Instant::now();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8978937,"byte_end":8978987,"line_start":363,"line_end":363,"column_start":1,"column_end":51}},{"value":"/             let mut delay = time::delay_until(op_start + conf.timeout);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8978988,"byte_end":8979063,"line_start":364,"line_end":364,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8979064,"byte_end":8979067,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/             loop {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8979068,"byte_end":8979090,"line_start":366,"line_end":366,"column_start":1,"column_end":23}},{"value":"/                 tokio::select! {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8979091,"byte_end":8979127,"line_start":367,"line_end":367,"column_start":1,"column_end":37}},{"value":"/                     _ = &mut delay => {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8979128,"byte_end":8979171,"line_start":368,"line_end":368,"column_start":1,"column_end":44}},{"value":"/                         // The operation elapsed. Restart it","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8979172,"byte_end":8979236,"line_start":369,"line_end":369,"column_start":1,"column_end":65}},{"value":"/                         op.set(my_async_operation());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8979237,"byte_end":8979294,"line_start":370,"line_end":370,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8979295,"byte_end":8979298,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/                         // Track the new start time","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8979299,"byte_end":8979354,"line_start":372,"line_end":372,"column_start":1,"column_end":56}},{"value":"/                         op_start = Instant::now();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8979355,"byte_end":8979409,"line_start":373,"line_end":373,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8979410,"byte_end":8979413,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/                         // Restart the timeout","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8979414,"byte_end":8979464,"line_start":375,"line_end":375,"column_start":1,"column_end":51}},{"value":"/                         delay = time::delay_until(op_start + conf.timeout);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8979465,"byte_end":8979544,"line_start":376,"line_end":376,"column_start":1,"column_end":80}},{"value":"/                     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8979545,"byte_end":8979570,"line_start":377,"line_end":377,"column_start":1,"column_end":26}},{"value":"/                     new_conf = rx.recv() => {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8979571,"byte_end":8979620,"line_start":378,"line_end":378,"column_start":1,"column_end":50}},{"value":"/                         conf = new_conf.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8979621,"byte_end":8979674,"line_start":379,"line_end":379,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8979675,"byte_end":8979678,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/                         // The configuration has been updated. Update the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8979679,"byte_end":8979756,"line_start":381,"line_end":381,"column_start":1,"column_end":78}},{"value":"/                         // `delay` using the new `timeout` value.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8979757,"byte_end":8979826,"line_start":382,"line_end":382,"column_start":1,"column_end":70}},{"value":"/                         delay.reset(op_start + conf.timeout);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8979827,"byte_end":8979892,"line_start":383,"line_end":383,"column_start":1,"column_end":66}},{"value":"/                     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8979893,"byte_end":8979918,"line_start":384,"line_end":384,"column_start":1,"column_end":26}},{"value":"/                     _ = &mut op => {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8979919,"byte_end":8979959,"line_start":385,"line_end":385,"column_start":1,"column_end":41}},{"value":"/                         // The operation completed!","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8979960,"byte_end":8980015,"line_start":386,"line_end":386,"column_start":1,"column_end":56}},{"value":"/                         return","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980016,"byte_end":8980050,"line_start":387,"line_end":387,"column_start":1,"column_end":35}},{"value":"/                     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980051,"byte_end":8980076,"line_start":388,"line_end":388,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980077,"byte_end":8980098,"line_start":389,"line_end":389,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980099,"byte_end":8980116,"line_start":390,"line_end":390,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980117,"byte_end":8980132,"line_start":391,"line_end":391,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980133,"byte_end":8980136,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/         handles.push(handle);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980137,"byte_end":8980170,"line_start":393,"line_end":393,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980171,"byte_end":8980180,"line_start":394,"line_end":394,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980181,"byte_end":8980184,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/     for handle in handles.drain(..) {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980185,"byte_end":8980226,"line_start":396,"line_end":396,"column_start":1,"column_end":42}},{"value":"/         handle.await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980227,"byte_end":8980261,"line_start":397,"line_end":397,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980262,"byte_end":8980271,"line_start":398,"line_end":398,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980272,"byte_end":8980277,"line_start":399,"line_end":399,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980278,"byte_end":8980285,"line_start":400,"line_end":400,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980286,"byte_end":8980289,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ [`watch` channel]: crate::sync::watch","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980290,"byte_end":8980331,"line_start":402,"line_end":402,"column_start":1,"column_end":42}},{"value":"/ [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980332,"byte_end":8980381,"line_start":403,"line_end":403,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980382,"byte_end":8980385,"line_start":404,"line_end":404,"column_start":1,"column_end":4}},{"value":"/ # State synchronization","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980386,"byte_end":8980413,"line_start":405,"line_end":405,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980414,"byte_end":8980417,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ The remaining synchronization primitives focus on synchronizing state.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980418,"byte_end":8980492,"line_start":407,"line_end":407,"column_start":1,"column_end":75}},{"value":"/ These are asynchronous equivalents to versions provided by `std`. They","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980493,"byte_end":8980567,"line_start":408,"line_end":408,"column_start":1,"column_end":75}},{"value":"/ operate in a similar way as their `std` counterparts parts but will wait","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980568,"byte_end":8980644,"line_start":409,"line_end":409,"column_start":1,"column_end":77}},{"value":"/ asynchronously instead of blocking the thread.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980645,"byte_end":8980695,"line_start":410,"line_end":410,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980696,"byte_end":8980699,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`](Barrier) Ensures multiple tasks will wait for each other to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980700,"byte_end":8980777,"line_start":412,"line_end":412,"column_start":1,"column_end":78}},{"value":"/   reach a point in the program, before continuing execution all together.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980778,"byte_end":8980855,"line_start":413,"line_end":413,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980856,"byte_end":8980859,"line_start":414,"line_end":414,"column_start":1,"column_end":4}},{"value":"/ * [`Mutex`](Mutex) Mutual Exclusion mechanism, which ensures that at most","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980860,"byte_end":8980937,"line_start":415,"line_end":415,"column_start":1,"column_end":78}},{"value":"/   one thread at a time is able to access some data.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980938,"byte_end":8980993,"line_start":416,"line_end":416,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980994,"byte_end":8980997,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ * [`Notify`](Notify) Basic task notification. `Notify` supports notifying a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8980998,"byte_end":8981077,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/   receiving task without sending data. In this case, the task wakes up and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8981078,"byte_end":8981156,"line_start":419,"line_end":419,"column_start":1,"column_end":79}},{"value":"/   resumes processing.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8981157,"byte_end":8981182,"line_start":420,"line_end":420,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8981183,"byte_end":8981186,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ * [`RwLock`](RwLock) Provides a mutual exclusion mechanism which allows","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8981187,"byte_end":8981262,"line_start":422,"line_end":422,"column_start":1,"column_end":76}},{"value":"/   multiple readers at the same time, while allowing only one writer at a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8981263,"byte_end":8981339,"line_start":423,"line_end":423,"column_start":1,"column_end":77}},{"value":"/   time. In some cases, this can be more efficient than a mutex.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8981340,"byte_end":8981407,"line_start":424,"line_end":424,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8981408,"byte_end":8981411,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ * [`Semaphore`](Semaphore) Limits the amount of concurrency. A semaphore","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8981412,"byte_end":8981488,"line_start":426,"line_end":426,"column_start":1,"column_end":77}},{"value":"/   holds a number of permits, which tasks may request in order to enter a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8981489,"byte_end":8981565,"line_start":427,"line_end":427,"column_start":1,"column_end":77}},{"value":"/   critical section. Semaphores are useful for implementing limiting or","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8981566,"byte_end":8981640,"line_start":428,"line_end":428,"column_start":1,"column_end":75}},{"value":"/   bounding of any kind.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8981641,"byte_end":8981668,"line_start":429,"line_end":429,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":7952},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8983802,"byte_end":8983809,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":7953},{"krate":0,"index":7954},{"krate":0,"index":7955}],"decl_id":null,"docs":" A barrier enables multiple threads to synchronize the beginning of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple threads to synchronize the beginning of some computation.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8982849,"byte_end":8982937,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8982938,"byte_end":8982941,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8982942,"byte_end":8982949,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8982950,"byte_end":8982970,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8982971,"byte_end":8982994,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Barrier;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8982995,"byte_end":8983024,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8983025,"byte_end":8983028,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8983029,"byte_end":8983063,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8983064,"byte_end":8983087,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8983088,"byte_end":8983091,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8983092,"byte_end":8983137,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8983138,"byte_end":8983183,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8983184,"byte_end":8983204,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8983205,"byte_end":8983237,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8983238,"byte_end":8983292,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8983293,"byte_end":8983338,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/     handles.push(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8983339,"byte_end":8983372,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/         println!(\"before wait\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8983373,"byte_end":8983409,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/         let wr = c.wait().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8983410,"byte_end":8983446,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/         println!(\"after wait\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8983447,"byte_end":8983482,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/         wr","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8983483,"byte_end":8983497,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8983498,"byte_end":8983509,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8983510,"byte_end":8983515,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ // Will not resolve until all \"before wait\" messages have been printed","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8983516,"byte_end":8983590,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ let wrs = join_all(handles).await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8983591,"byte_end":8983629,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ // Exactly one barrier will resolve as the \"leader\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8983630,"byte_end":8983685,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(wrs.into_iter().filter(|wr| wr.is_leader()).count(), 1);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8983686,"byte_end":8983757,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8983758,"byte_end":8983765,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8983766,"byte_end":8983773,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6625},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8984272,"byte_end":8984275,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"pub fn new(usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of threads.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of threads.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8984032,"byte_end":8984099,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8984104,"byte_end":8984107,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 threads which call [`Barrier::wait`] and then wake up all","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8984112,"byte_end":8984200,"line_start":51,"line_end":51,"column_start":5,"column_end":93}},{"value":"/ threads at once when the `n`th thread calls `wait`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8984205,"byte_end":8984260,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6626},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8985348,"byte_end":8985352,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"pub async fn wait<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Does not resolve until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Does not resolve until all tasks have rendezvoused here.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8984874,"byte_end":8984934,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8984939,"byte_end":8984942,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all threads have rendezvoused once, and can","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8984947,"byte_end":8985023,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ be used continuously.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8985028,"byte_end":8985053,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8985058,"byte_end":8985061,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) future will receive a [`BarrierWaitResult`] that returns `true` from","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8985066,"byte_end":8985159,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ [`BarrierWaitResult::is_leader`] when returning from this function, and all other threads","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8985164,"byte_end":8985257,"line_start":80,"line_end":80,"column_start":5,"column_end":98}},{"value":"/ will receive a result that will return `false` from `is_leader`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8985262,"byte_end":8985330,"line_start":81,"line_end":81,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":7964},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8987274,"byte_end":8987291,"line_start":126,"line_end":126,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.\n","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8987138,"byte_end":8987238,"line_start":124,"line_end":124,"column_start":1,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":6630},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8987539,"byte_end":8987548,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"pub fn is_leader(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this thread from wait is the \"leader thread\".","sig":null,"attributes":[{"value":"/ Returns `true` if this thread from wait is the \"leader thread\".","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8987329,"byte_end":8987396,"line_start":129,"line_end":129,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8987401,"byte_end":8987404,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Only one thread will have `true` returned from their result, all other threads will have","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8987409,"byte_end":8987501,"line_start":131,"line_end":131,"column_start":5,"column_end":97}},{"value":"/ `false` returned.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8987506,"byte_end":8987527,"line_start":132,"line_end":132,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":6634},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broadcast","qualname":"::sync::broadcast","value":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","parent":null,"children":[{"krate":0,"index":6635},{"krate":0,"index":6636},{"krate":0,"index":6637},{"krate":0,"index":6638},{"krate":0,"index":6639},{"krate":0,"index":6640},{"krate":0,"index":6641},{"krate":0,"index":6642},{"krate":0,"index":6643},{"krate":0,"index":6644},{"krate":0,"index":6645},{"krate":0,"index":6646},{"krate":0,"index":6647},{"krate":0,"index":15299},{"krate":0,"index":6648},{"krate":0,"index":6649},{"krate":0,"index":6650},{"krate":0,"index":15305},{"krate":0,"index":6651},{"krate":0,"index":6652},{"krate":0,"index":6653},{"krate":0,"index":6654},{"krate":0,"index":6655},{"krate":0,"index":6656},{"krate":0,"index":6659},{"krate":0,"index":7971},{"krate":0,"index":7975},{"krate":0,"index":7978},{"krate":0,"index":7988},{"krate":0,"index":7984},{"krate":0,"index":7985},{"krate":0,"index":7990},{"krate":0,"index":8002},{"krate":0,"index":7998},{"krate":0,"index":7999},{"krate":0,"index":6664},{"krate":0,"index":6670},{"krate":0,"index":6675},{"krate":0,"index":6681},{"krate":0,"index":6686},{"krate":0,"index":6690},{"krate":0,"index":6696},{"krate":0,"index":6700},{"krate":0,"index":6703},{"krate":0,"index":6707},{"krate":0,"index":6710},{"krate":0,"index":6713},{"krate":0,"index":6714},{"krate":0,"index":6716},{"krate":0,"index":6718},{"krate":0,"index":6720},{"krate":0,"index":6722},{"krate":0,"index":6724},{"krate":0,"index":6733},{"krate":0,"index":6735},{"krate":0,"index":6738},{"krate":0,"index":6741},{"krate":0,"index":6745},{"krate":0,"index":6765},{"krate":0,"index":6770},{"krate":0,"index":6775},{"krate":0,"index":6780},{"krate":0,"index":8004},{"krate":0,"index":8005},{"krate":0,"index":8009},{"krate":0,"index":6785},{"krate":0,"index":6791},{"krate":0,"index":6797},{"krate":0,"index":6800},{"krate":0,"index":6803},{"krate":0,"index":6808},{"krate":0,"index":6813},{"krate":0,"index":6815},{"krate":0,"index":6816},{"krate":0,"index":6818},{"krate":0,"index":6819}],"decl_id":null,"docs":" A multi-producer, multi-consumer broadcast queue. Each sent value is seen by\n all consumers.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21247,"byte_end":21271,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, multi-consumer broadcast queue. Each sent value is seen by","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8987590,"byte_end":8987670,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ all consumers.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8987671,"byte_end":8987689,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8987690,"byte_end":8987693,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A [`Sender`] is used to broadcast values to **all** connected [`Receiver`]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8987694,"byte_end":8987772,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ values. [`Sender`] handles are clone-able, allowing concurrent send and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8987773,"byte_end":8987848,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ receive actions. [`Sender`] and [`Receiver`] are both `Send` and `Sync` as","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8987849,"byte_end":8987927,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ long as `T` is also `Send` or `Sync` respectively.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8987928,"byte_end":8987982,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8987983,"byte_end":8987986,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ When a value is sent, **all** [`Receiver`] handles are notified and will","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8987987,"byte_end":8988063,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ receive the value. The value is stored once inside the channel and cloned on","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8988064,"byte_end":8988144,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ demand for each receiver. Once all receivers have received a clone of the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8988145,"byte_end":8988222,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ value, the value is released from the channel.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8988223,"byte_end":8988273,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8988274,"byte_end":8988277,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A channel is created by calling [`channel`], specifying the maximum number","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8988278,"byte_end":8988356,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ of messages the channel can retain at any given time.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8988357,"byte_end":8988414,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8988415,"byte_end":8988418,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ New [`Receiver`] handles are created by calling [`Sender::subscribe`]. The","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8988419,"byte_end":8988497,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ returned [`Receiver`] will receive values sent **after** the call to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8988498,"byte_end":8988570,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `subscribe`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8988571,"byte_end":8988587,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8988588,"byte_end":8988591,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Lagging","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8988592,"byte_end":8988606,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8988607,"byte_end":8988610,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ As sent messages must be retained until **all** [`Receiver`] handles receive","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8988611,"byte_end":8988691,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ a clone, broadcast channels are suspectible to the \"slow receiver\" problem.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8988692,"byte_end":8988771,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ In this case, all but one receiver are able to receive values at the rate","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8988772,"byte_end":8988849,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ they are sent. Because one receiver is stalled, the channel starts to fill","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8988850,"byte_end":8988928,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ up.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8988929,"byte_end":8988936,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8988937,"byte_end":8988940,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This broadcast channel implementation handles this case by setting a hard","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8988941,"byte_end":8989018,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ upper bound on the number of values the channel may retain at any given","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8989019,"byte_end":8989094,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ time. This upper bound is passed to the [`channel`] function as an argument.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8989095,"byte_end":8989175,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8989176,"byte_end":8989179,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If a value is sent when the channel is at capacity, the oldest value","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8989180,"byte_end":8989252,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ currently held by the channel is released. This frees up space for the new","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8989253,"byte_end":8989331,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ value. Any receiver that has not yet seen the released value will return","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8989332,"byte_end":8989408,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ [`RecvError::Lagged`] the next time [`recv`] is called.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8989409,"byte_end":8989468,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8989469,"byte_end":8989472,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Once [`RecvError::Lagged`] is returned, the lagging receiver's position is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8989473,"byte_end":8989551,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ updated to the oldest value contained by the channel. The next call to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8989552,"byte_end":8989626,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ [`recv`] will return this value.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8989627,"byte_end":8989663,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8989664,"byte_end":8989667,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This behavior enables a receiver to detect when it has lagged so far behind","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8989668,"byte_end":8989747,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ that data has been dropped. The caller may decide how to respond to this:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8989748,"byte_end":8989825,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ either by aborting its task or by tolerating lost messages and resuming","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8989826,"byte_end":8989901,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ consumption of the channel.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8989902,"byte_end":8989933,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8989934,"byte_end":8989937,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Closing","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8989938,"byte_end":8989952,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8989953,"byte_end":8989956,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ When **all** [`Sender`] handles have been dropped, no new values may be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8989957,"byte_end":8990032,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ sent. At this point, the channel is \"closed\". Once a receiver has received","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8990033,"byte_end":8990111,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ all values retained by the channel, the next call to [`recv`] will return","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8990112,"byte_end":8990189,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ with [`RecvError::Closed`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8990190,"byte_end":8990221,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8990222,"byte_end":8990225,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8990226,"byte_end":8990272,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8990273,"byte_end":8990341,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8990342,"byte_end":8990392,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8990393,"byte_end":8990441,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/ [`RecvError::Lagged`]: crate::sync::broadcast::RecvError::Lagged","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8990442,"byte_end":8990510,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"/ [`RecvError::Closed`]: crate::sync::broadcast::RecvError::Closed","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8990511,"byte_end":8990579,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8990580,"byte_end":8990632,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8990633,"byte_end":8990636,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8990637,"byte_end":8990651,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8990652,"byte_end":8990655,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8990656,"byte_end":8990671,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8990672,"byte_end":8990675,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8990676,"byte_end":8990683,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8990684,"byte_end":8990715,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8990716,"byte_end":8990719,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8990720,"byte_end":8990738,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8990739,"byte_end":8990760,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8990761,"byte_end":8990812,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8990813,"byte_end":8990850,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8990851,"byte_end":8990854,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8990855,"byte_end":8990888,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8990889,"byte_end":8990943,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8990944,"byte_end":8990998,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8990999,"byte_end":8991010,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991011,"byte_end":8991014,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991015,"byte_end":8991048,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991049,"byte_end":8991103,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991104,"byte_end":8991158,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991159,"byte_end":8991170,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991171,"byte_end":8991174,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991175,"byte_end":8991204,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991205,"byte_end":8991234,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991235,"byte_end":8991240,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991241,"byte_end":8991248,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991249,"byte_end":8991252,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Handling lag","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991253,"byte_end":8991269,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991270,"byte_end":8991273,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991274,"byte_end":8991281,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991282,"byte_end":8991313,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991314,"byte_end":8991317,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991318,"byte_end":8991336,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991337,"byte_end":8991358,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991359,"byte_end":8991408,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991409,"byte_end":8991412,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991413,"byte_end":8991442,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991443,"byte_end":8991472,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991473,"byte_end":8991502,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991503,"byte_end":8991506,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/     // The receiver lagged behind","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991507,"byte_end":8991544,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991545,"byte_end":8991587,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991588,"byte_end":8991591,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991592,"byte_end":8991661,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991662,"byte_end":8991665,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991666,"byte_end":8991715,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991716,"byte_end":8991765,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8991766,"byte_end":8991771,"line_start":109,"line_end":109,"column_start":1,"column_end":6}}]},{"kind":"Struct","id":{"krate":0,"index":6656},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992968,"byte_end":8992974,"line_start":156,"line_end":156,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::broadcast::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6658}],"decl_id":null,"docs":" Sending-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Sending-half of the [`broadcast`] channel.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992175,"byte_end":8992221,"line_start":125,"line_end":125,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992222,"byte_end":8992225,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ May be used from many threads. Messages can be sent with","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992226,"byte_end":8992286,"line_start":127,"line_end":127,"column_start":1,"column_end":61}},{"value":"/ [`send`][Sender::send].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992287,"byte_end":8992314,"line_start":128,"line_end":128,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992315,"byte_end":8992318,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992319,"byte_end":8992333,"line_start":130,"line_end":130,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992334,"byte_end":8992337,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992338,"byte_end":8992345,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992346,"byte_end":8992377,"line_start":133,"line_end":133,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992378,"byte_end":8992381,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992382,"byte_end":8992400,"line_start":135,"line_end":135,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992401,"byte_end":8992422,"line_start":136,"line_end":136,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992423,"byte_end":8992474,"line_start":137,"line_end":137,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992475,"byte_end":8992512,"line_start":138,"line_end":138,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992513,"byte_end":8992516,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992517,"byte_end":8992550,"line_start":140,"line_end":140,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992551,"byte_end":8992605,"line_start":141,"line_end":141,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992606,"byte_end":8992660,"line_start":142,"line_end":142,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992661,"byte_end":8992672,"line_start":143,"line_end":143,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992673,"byte_end":8992676,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992677,"byte_end":8992710,"line_start":145,"line_end":145,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992711,"byte_end":8992765,"line_start":146,"line_end":146,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992766,"byte_end":8992820,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992821,"byte_end":8992832,"line_start":148,"line_end":148,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992833,"byte_end":8992836,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992837,"byte_end":8992866,"line_start":150,"line_end":150,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992867,"byte_end":8992896,"line_start":151,"line_end":151,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992897,"byte_end":8992902,"line_start":152,"line_end":152,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992903,"byte_end":8992910,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992911,"byte_end":8992914,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8992915,"byte_end":8992956,"line_start":155,"line_end":155,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":6659},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993814,"byte_end":8993822,"line_start":191,"line_end":191,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::broadcast::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6661},{"krate":0,"index":6662},{"krate":0,"index":6663}],"decl_id":null,"docs":" Receiving-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Receiving-half of the [`broadcast`] channel.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993011,"byte_end":8993059,"line_start":160,"line_end":160,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993060,"byte_end":8993063,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ Must not be used concurrently. Messages may be retrieved using","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993064,"byte_end":8993130,"line_start":162,"line_end":162,"column_start":1,"column_end":67}},{"value":"/ [`recv`][Receiver::recv].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993131,"byte_end":8993160,"line_start":163,"line_end":163,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993161,"byte_end":8993164,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993165,"byte_end":8993179,"line_start":165,"line_end":165,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993180,"byte_end":8993183,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993184,"byte_end":8993191,"line_start":167,"line_end":167,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993192,"byte_end":8993223,"line_start":168,"line_end":168,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993224,"byte_end":8993227,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993228,"byte_end":8993246,"line_start":170,"line_end":170,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993247,"byte_end":8993268,"line_start":171,"line_end":171,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993269,"byte_end":8993320,"line_start":172,"line_end":172,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993321,"byte_end":8993358,"line_start":173,"line_end":173,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993359,"byte_end":8993362,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993363,"byte_end":8993396,"line_start":175,"line_end":175,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993397,"byte_end":8993451,"line_start":176,"line_end":176,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993452,"byte_end":8993506,"line_start":177,"line_end":177,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993507,"byte_end":8993518,"line_start":178,"line_end":178,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993519,"byte_end":8993522,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993523,"byte_end":8993556,"line_start":180,"line_end":180,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993557,"byte_end":8993611,"line_start":181,"line_end":181,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993612,"byte_end":8993666,"line_start":182,"line_end":182,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993667,"byte_end":8993678,"line_start":183,"line_end":183,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993679,"byte_end":8993682,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993683,"byte_end":8993712,"line_start":185,"line_end":185,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993713,"byte_end":8993742,"line_start":186,"line_end":186,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993743,"byte_end":8993748,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993749,"byte_end":8993756,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993757,"byte_end":8993760,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8993761,"byte_end":8993802,"line_start":190,"line_end":190,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":7971},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8994365,"byte_end":8994374,"line_start":208,"line_end":208,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::broadcast::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by [`Sender::send`][Sender::send].","sig":null,"attributes":[{"value":"/ Error returned by [`Sender::send`][Sender::send].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8994068,"byte_end":8994121,"line_start":202,"line_end":202,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8994122,"byte_end":8994125,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ A **send** operation can only fail if there are no active receivers,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8994126,"byte_end":8994198,"line_start":204,"line_end":204,"column_start":1,"column_end":73}},{"value":"/ implying that the message could never be received. The error contains the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8994199,"byte_end":8994276,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ message being sent as a payload so it can be recovered.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8994277,"byte_end":8994336,"line_start":206,"line_end":206,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":7974},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8994378,"byte_end":8994383,"line_start":208,"line_end":208,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::broadcast::SendError::0","value":"T","parent":{"krate":0,"index":7971},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7979},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8994713,"byte_end":8994719,"line_start":218,"line_end":218,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::broadcast::RecvError::Closed","value":"RecvError::Closed","parent":{"krate":0,"index":7978},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8994616,"byte_end":8994691,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ be sent.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8994696,"byte_end":8994708,"line_start":217,"line_end":217,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7981},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8994925,"byte_end":8994931,"line_start":224,"line_end":224,"column_start":5,"column_end":11},"name":"Lagged","qualname":"::sync::broadcast::RecvError::Lagged","value":"RecvError::Lagged(u64)","parent":{"krate":0,"index":7978},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind. Attempting to receive again will\n return the oldest message still retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind. Attempting to receive again will","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8994726,"byte_end":8994798,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/ return the oldest message still retained by the channel.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8994803,"byte_end":8994863,"line_start":221,"line_end":221,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8994868,"byte_end":8994871,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8994876,"byte_end":8994920,"line_start":223,"line_end":223,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":7978},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8994600,"byte_end":8994609,"line_start":215,"line_end":215,"column_start":10,"column_end":19},"name":"RecvError","qualname":"::sync::broadcast::RecvError","value":"pub enum RecvError {\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind. Attempting to receive again will\n    /// return the oldest message still retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":7979},{"krate":0,"index":7981}],"decl_id":null,"docs":" An error returned from the [`recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`recv`] function on a [`Receiver`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8994387,"byte_end":8994454,"line_start":210,"line_end":210,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8994455,"byte_end":8994458,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8994459,"byte_end":8994511,"line_start":212,"line_end":212,"column_start":1,"column_end":53}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8994512,"byte_end":8994562,"line_start":213,"line_end":213,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7991},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8995318,"byte_end":8995323,"line_start":235,"line_end":235,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::broadcast::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":7990},"children":[],"decl_id":null,"docs":" The channel is currently empty. There are still active\n [`Sender`][Sender] handles, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ The channel is currently empty. There are still active","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8995185,"byte_end":8995243,"line_start":233,"line_end":233,"column_start":5,"column_end":63}},{"value":"/ [`Sender`][Sender] handles, so data may yet become available.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8995248,"byte_end":8995313,"line_start":234,"line_end":234,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7993},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8995427,"byte_end":8995433,"line_start":239,"line_end":239,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::broadcast::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":7990},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8995330,"byte_end":8995405,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ be sent.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8995410,"byte_end":8995422,"line_start":238,"line_end":238,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7995},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8995682,"byte_end":8995688,"line_start":246,"line_end":246,"column_start":5,"column_end":11},"name":"Lagged","qualname":"::sync::broadcast::TryRecvError::Lagged","value":"TryRecvError::Lagged(u64)","parent":{"krate":0,"index":7990},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind and has been forcibly disconnected.\n Attempting to receive again will return the oldest message still\n retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind and has been forcibly disconnected.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8995440,"byte_end":8995514,"line_start":241,"line_end":241,"column_start":5,"column_end":79}},{"value":"/ Attempting to receive again will return the oldest message still","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8995519,"byte_end":8995587,"line_start":242,"line_end":242,"column_start":5,"column_end":73}},{"value":"/ retained by the channel.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8995592,"byte_end":8995620,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8995625,"byte_end":8995628,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8995633,"byte_end":8995677,"line_start":245,"line_end":245,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":7990},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8995166,"byte_end":8995178,"line_start":232,"line_end":232,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::broadcast::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The channel is currently empty. There are still active\n    /// [`Sender`][Sender] handles, so data may yet become available.\n    Empty,\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind and has been forcibly disconnected.\n    /// Attempting to receive again will return the oldest message still\n    /// retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":7991},{"krate":0,"index":7993},{"krate":0,"index":7995}],"decl_id":null,"docs":" An error returned from the [`try_recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`try_recv`] function on a [`Receiver`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8994941,"byte_end":8995012,"line_start":227,"line_end":227,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8995013,"byte_end":8995016,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8995017,"byte_end":8995077,"line_start":229,"line_end":229,"column_start":1,"column_end":61}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8995078,"byte_end":8995128,"line_start":230,"line_end":230,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":6714},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999989,"byte_end":8999996,"line_start":403,"line_end":403,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::broadcast::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a bounded, multi-producer, multi-consumer channel where each sent\n value is broadcasted to all active receivers.","sig":null,"attributes":[{"value":"/ Create a bounded, multi-producer, multi-consumer channel where each sent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8998377,"byte_end":8998453,"line_start":358,"line_end":358,"column_start":1,"column_end":77}},{"value":"/ value is broadcasted to all active receivers.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8998454,"byte_end":8998503,"line_start":359,"line_end":359,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8998504,"byte_end":8998507,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ All data sent on [`Sender`] will become available on every active","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8998508,"byte_end":8998577,"line_start":361,"line_end":361,"column_start":1,"column_end":70}},{"value":"/ [`Receiver`] in the same order as it was sent.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8998578,"byte_end":8998628,"line_start":362,"line_end":362,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8998629,"byte_end":8998632,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8998633,"byte_end":8998707,"line_start":364,"line_end":364,"column_start":1,"column_end":75}},{"value":"/ points in the process or it can be used concurrently from an `Arc`. New","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8998708,"byte_end":8998783,"line_start":365,"line_end":365,"column_start":1,"column_end":76}},{"value":"/ `Receiver` handles are created by calling [`Sender::subscribe`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8998784,"byte_end":8998852,"line_start":366,"line_end":366,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8998853,"byte_end":8998856,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ If all [`Receiver`] handles are dropped, the `send` method will return a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8998857,"byte_end":8998933,"line_start":368,"line_end":368,"column_start":1,"column_end":77}},{"value":"/ [`SendError`]. Similarly, if all [`Sender`] handles are dropped, the [`recv`]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8998934,"byte_end":8999015,"line_start":369,"line_end":369,"column_start":1,"column_end":82}},{"value":"/ method will return a [`RecvError`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999016,"byte_end":8999055,"line_start":370,"line_end":370,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999056,"byte_end":8999059,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999060,"byte_end":8999106,"line_start":372,"line_end":372,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999107,"byte_end":8999175,"line_start":373,"line_end":373,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999176,"byte_end":8999226,"line_start":374,"line_end":374,"column_start":1,"column_end":51}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999227,"byte_end":8999279,"line_start":375,"line_end":375,"column_start":1,"column_end":53}},{"value":"/ [`SendError`]: crate::sync::broadcast::SendError","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999280,"byte_end":8999332,"line_start":376,"line_end":376,"column_start":1,"column_end":53}},{"value":"/ [`RecvError`]: crate::sync::broadcast::RecvError","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999333,"byte_end":8999385,"line_start":377,"line_end":377,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999386,"byte_end":8999389,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999390,"byte_end":8999404,"line_start":379,"line_end":379,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999405,"byte_end":8999408,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999409,"byte_end":8999416,"line_start":381,"line_end":381,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999417,"byte_end":8999448,"line_start":382,"line_end":382,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999449,"byte_end":8999452,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999453,"byte_end":8999471,"line_start":384,"line_end":384,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999472,"byte_end":8999493,"line_start":385,"line_end":385,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999494,"byte_end":8999545,"line_start":386,"line_end":386,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999546,"byte_end":8999583,"line_start":387,"line_end":387,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999584,"byte_end":8999587,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999588,"byte_end":8999621,"line_start":389,"line_end":389,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999622,"byte_end":8999676,"line_start":390,"line_end":390,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999677,"byte_end":8999731,"line_start":391,"line_end":391,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999732,"byte_end":8999743,"line_start":392,"line_end":392,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999744,"byte_end":8999747,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999748,"byte_end":8999781,"line_start":394,"line_end":394,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999782,"byte_end":8999836,"line_start":395,"line_end":395,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999837,"byte_end":8999891,"line_start":396,"line_end":396,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999892,"byte_end":8999903,"line_start":397,"line_end":397,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999904,"byte_end":8999907,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999908,"byte_end":8999937,"line_start":399,"line_end":399,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999938,"byte_end":8999967,"line_start":400,"line_end":400,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999968,"byte_end":8999973,"line_start":401,"line_end":401,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8999974,"byte_end":8999981,"line_start":402,"line_end":402,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6726},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9003063,"byte_end":9003067,"line_start":501,"line_end":501,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<usize, SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value to all active [`Receiver`] handles, returning\n it back if it could not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value to all active [`Receiver`] handles, returning","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9001213,"byte_end":9001287,"line_start":451,"line_end":451,"column_start":5,"column_end":79}},{"value":"/ it back if it could not be sent.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9001292,"byte_end":9001328,"line_start":452,"line_end":452,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9001333,"byte_end":9001336,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when there is at least one active [`Receiver`]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9001341,"byte_end":9001416,"line_start":454,"line_end":454,"column_start":5,"column_end":80}},{"value":"/ handle. An unsuccessful send would be one where all associated","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9001421,"byte_end":9001487,"line_start":455,"line_end":455,"column_start":5,"column_end":71}},{"value":"/ [`Receiver`] handles have already been dropped.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9001492,"byte_end":9001543,"line_start":456,"line_end":456,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9001548,"byte_end":9001551,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9001556,"byte_end":9001568,"line_start":458,"line_end":458,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9001573,"byte_end":9001576,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ On success, the number of subscribed [`Receiver`] handles is returned.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9001581,"byte_end":9001655,"line_start":460,"line_end":460,"column_start":5,"column_end":79}},{"value":"/ This does not mean that this number of receivers will see the message as","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9001660,"byte_end":9001736,"line_start":461,"line_end":461,"column_start":5,"column_end":81}},{"value":"/ a receiver may drop before receiving the message.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9001741,"byte_end":9001794,"line_start":462,"line_end":462,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9001799,"byte_end":9001802,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9001807,"byte_end":9001817,"line_start":464,"line_end":464,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9001822,"byte_end":9001825,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ A return value of `Ok` **does not** mean that the sent value will be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9001830,"byte_end":9001902,"line_start":466,"line_end":466,"column_start":5,"column_end":77}},{"value":"/ observed by all or any of the active [`Receiver`] handles. [`Receiver`]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9001907,"byte_end":9001982,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ handles may be dropped before receiving the sent message.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9001987,"byte_end":9002048,"line_start":468,"line_end":468,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9002053,"byte_end":9002056,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ A return value of `Err` **does not** mean that future calls to `send`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9002061,"byte_end":9002134,"line_start":470,"line_end":470,"column_start":5,"column_end":78}},{"value":"/ will fail. New [`Receiver`] handles may be created by calling","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9002139,"byte_end":9002204,"line_start":471,"line_end":471,"column_start":5,"column_end":70}},{"value":"/ [`subscribe`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9002209,"byte_end":9002227,"line_start":472,"line_end":472,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9002232,"byte_end":9002235,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9002240,"byte_end":9002290,"line_start":474,"line_end":474,"column_start":5,"column_end":55}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9002295,"byte_end":9002355,"line_start":475,"line_end":475,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9002360,"byte_end":9002363,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9002368,"byte_end":9002382,"line_start":477,"line_end":477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9002387,"byte_end":9002390,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9002395,"byte_end":9002402,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9002407,"byte_end":9002438,"line_start":480,"line_end":480,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9002443,"byte_end":9002446,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9002451,"byte_end":9002469,"line_start":482,"line_end":482,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9002474,"byte_end":9002495,"line_start":483,"line_end":483,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9002500,"byte_end":9002551,"line_start":484,"line_end":484,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9002556,"byte_end":9002593,"line_start":485,"line_end":485,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9002598,"byte_end":9002601,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9002606,"byte_end":9002639,"line_start":487,"line_end":487,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9002644,"byte_end":9002698,"line_start":488,"line_end":488,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9002703,"byte_end":9002757,"line_start":489,"line_end":489,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9002762,"byte_end":9002773,"line_start":490,"line_end":490,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9002778,"byte_end":9002781,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9002786,"byte_end":9002819,"line_start":492,"line_end":492,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9002824,"byte_end":9002878,"line_start":493,"line_end":493,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9002883,"byte_end":9002937,"line_start":494,"line_end":494,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9002942,"byte_end":9002953,"line_start":495,"line_end":495,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9002958,"byte_end":9002961,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9002966,"byte_end":9002995,"line_start":497,"line_end":497,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9003000,"byte_end":9003029,"line_start":498,"line_end":498,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9003034,"byte_end":9003039,"line_start":499,"line_end":499,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9003044,"byte_end":9003051,"line_start":500,"line_end":500,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6728},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9003827,"byte_end":9003836,"line_start":529,"line_end":529,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"pub fn subscribe(&Self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] handle that will receive values sent **after**\n this call to `subscribe`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] handle that will receive values sent **after**","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9003232,"byte_end":9003309,"line_start":506,"line_end":506,"column_start":5,"column_end":82}},{"value":"/ this call to `subscribe`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9003314,"byte_end":9003343,"line_start":507,"line_end":507,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9003348,"byte_end":9003351,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9003356,"byte_end":9003370,"line_start":509,"line_end":509,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9003375,"byte_end":9003378,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9003383,"byte_end":9003390,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9003395,"byte_end":9003426,"line_start":512,"line_end":512,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9003431,"byte_end":9003434,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9003439,"byte_end":9003457,"line_start":514,"line_end":514,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9003462,"byte_end":9003483,"line_start":515,"line_end":515,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = broadcast::channel(16);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9003488,"byte_end":9003535,"line_start":516,"line_end":516,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9003540,"byte_end":9003543,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/     // Will not be seen","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9003548,"byte_end":9003575,"line_start":518,"line_end":518,"column_start":5,"column_end":32}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9003580,"byte_end":9003609,"line_start":519,"line_end":519,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9003614,"byte_end":9003617,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9003622,"byte_end":9003658,"line_start":521,"line_end":521,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9003663,"byte_end":9003666,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9003671,"byte_end":9003700,"line_start":523,"line_end":523,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9003705,"byte_end":9003708,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/     let value = rx.recv().await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9003713,"byte_end":9003758,"line_start":525,"line_end":525,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(20, value);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9003763,"byte_end":9003793,"line_start":526,"line_end":526,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9003798,"byte_end":9003803,"line_start":527,"line_end":527,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9003808,"byte_end":9003815,"line_start":528,"line_end":528,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6729},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9005423,"byte_end":9005437,"line_start":586,"line_end":586,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"pub fn receiver_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of active receivers","sig":null,"attributes":[{"value":"/ Returns the number of active receivers","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9004271,"byte_end":9004313,"line_start":550,"line_end":550,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9004318,"byte_end":9004321,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ An active receiver is a [`Receiver`] handle returned from [`channel`] or","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9004326,"byte_end":9004402,"line_start":552,"line_end":552,"column_start":5,"column_end":81}},{"value":"/ [`subscribe`]. These are the handles that will receive values sent on","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9004407,"byte_end":9004480,"line_start":553,"line_end":553,"column_start":5,"column_end":78}},{"value":"/ this [`Sender`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9004485,"byte_end":9004505,"line_start":554,"line_end":554,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9004510,"byte_end":9004513,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9004518,"byte_end":9004528,"line_start":556,"line_end":556,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9004533,"byte_end":9004536,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ It is not guaranteed that a sent message will reach this number of","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9004541,"byte_end":9004611,"line_start":558,"line_end":558,"column_start":5,"column_end":75}},{"value":"/ receivers. Active receivers may never call [`recv`] again before","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9004616,"byte_end":9004684,"line_start":559,"line_end":559,"column_start":5,"column_end":73}},{"value":"/ dropping.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9004689,"byte_end":9004702,"line_start":560,"line_end":560,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9004707,"byte_end":9004710,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9004715,"byte_end":9004767,"line_start":562,"line_end":562,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9004772,"byte_end":9004822,"line_start":563,"line_end":563,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9004827,"byte_end":9004873,"line_start":564,"line_end":564,"column_start":5,"column_end":51}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9004878,"byte_end":9004938,"line_start":565,"line_end":565,"column_start":5,"column_end":65}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9004943,"byte_end":9004991,"line_start":566,"line_end":566,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9004996,"byte_end":9004999,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9005004,"byte_end":9005018,"line_start":568,"line_end":568,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9005023,"byte_end":9005026,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9005031,"byte_end":9005038,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9005043,"byte_end":9005074,"line_start":571,"line_end":571,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9005079,"byte_end":9005082,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9005087,"byte_end":9005105,"line_start":573,"line_end":573,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9005110,"byte_end":9005131,"line_start":574,"line_end":574,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx1) = broadcast::channel(16);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9005136,"byte_end":9005184,"line_start":575,"line_end":575,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9005189,"byte_end":9005192,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9005197,"byte_end":9005240,"line_start":577,"line_end":577,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9005245,"byte_end":9005248,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = tx.subscribe();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9005253,"byte_end":9005291,"line_start":579,"line_end":579,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9005296,"byte_end":9005299,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9005304,"byte_end":9005347,"line_start":581,"line_end":581,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9005352,"byte_end":9005355,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9005360,"byte_end":9005389,"line_start":583,"line_end":583,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9005394,"byte_end":9005399,"line_start":584,"line_end":584,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9005404,"byte_end":9005411,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6747},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9014086,"byte_end":9014094,"line_start":830,"line_end":830,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without awaiting.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without awaiting.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9012492,"byte_end":9012565,"line_start":791,"line_end":791,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9012570,"byte_end":9012573,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9012578,"byte_end":9012650,"line_start":793,"line_end":793,"column_start":5,"column_end":77}},{"value":"/ await on a receiver.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9012655,"byte_end":9012679,"line_start":794,"line_end":794,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9012684,"byte_end":9012687,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ Compared with [`recv`], this function has three failure cases instead of one","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9012692,"byte_end":9012772,"line_start":796,"line_end":796,"column_start":5,"column_end":85}},{"value":"/ (one for closed, one for an empty buffer, one for a lagging receiver).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9012777,"byte_end":9012851,"line_start":797,"line_end":797,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9012856,"byte_end":9012859,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ `Err(TryRecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9012864,"byte_end":9012937,"line_start":799,"line_end":799,"column_start":5,"column_end":78}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9012942,"byte_end":9013016,"line_start":800,"line_end":800,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9013021,"byte_end":9013024,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9013029,"byte_end":9013105,"line_start":802,"line_end":802,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9013110,"byte_end":9013186,"line_start":803,"line_end":803,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(TryRecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9013191,"byte_end":9013262,"line_start":804,"line_end":804,"column_start":5,"column_end":76}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9013267,"byte_end":9013340,"line_start":805,"line_end":805,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`try_recv`] will return this value","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9013345,"byte_end":9013418,"line_start":806,"line_end":806,"column_start":5,"column_end":78}},{"value":"/ **unless** it has been since overwritten. If there are no values to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9013423,"byte_end":9013494,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/ receive, `Err(TryRecvError::Empty)` is returned.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9013499,"byte_end":9013551,"line_start":808,"line_end":808,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9013556,"byte_end":9013559,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9013564,"byte_end":9013616,"line_start":810,"line_end":810,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9013621,"byte_end":9013671,"line_start":811,"line_end":811,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9013676,"byte_end":9013679,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9013684,"byte_end":9013698,"line_start":813,"line_end":813,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9013703,"byte_end":9013706,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9013711,"byte_end":9013718,"line_start":815,"line_end":815,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9013723,"byte_end":9013754,"line_start":816,"line_end":816,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9013759,"byte_end":9013762,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9013767,"byte_end":9013785,"line_start":818,"line_end":818,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9013790,"byte_end":9013811,"line_start":819,"line_end":819,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(16);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9013816,"byte_end":9013866,"line_start":820,"line_end":820,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9013871,"byte_end":9013874,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.try_recv().is_err());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9013879,"byte_end":9013919,"line_start":822,"line_end":822,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9013924,"byte_end":9013927,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9013932,"byte_end":9013961,"line_start":824,"line_end":824,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9013966,"byte_end":9013969,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/     let value = rx.try_recv().unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9013974,"byte_end":9014017,"line_start":826,"line_end":826,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(10, value);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9014022,"byte_end":9014052,"line_start":827,"line_end":827,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9014057,"byte_end":9014062,"line_start":828,"line_end":828,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9014067,"byte_end":9014074,"line_start":829,"line_end":829,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6748},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9014336,"byte_end":9014345,"line_start":837,"line_end":837,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Result<T, RecvError>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.2.21\", note = \"use async fn recv()\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9014263,"byte_end":9014324,"line_start":836,"line_end":836,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6762},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9018376,"byte_end":9018380,"line_start":951,"line_end":951,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9016160,"byte_end":9016206,"line_start":887,"line_end":887,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9016211,"byte_end":9016214,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ Each [`Receiver`] handle will receive a clone of all values sent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9016219,"byte_end":9016287,"line_start":889,"line_end":889,"column_start":5,"column_end":73}},{"value":"/ **after** it has subscribed.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9016292,"byte_end":9016324,"line_start":890,"line_end":890,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9016329,"byte_end":9016332,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ `Err(RecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9016337,"byte_end":9016407,"line_start":892,"line_end":892,"column_start":5,"column_end":75}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9016412,"byte_end":9016486,"line_start":893,"line_end":893,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9016491,"byte_end":9016494,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9016499,"byte_end":9016575,"line_start":895,"line_end":895,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9016580,"byte_end":9016656,"line_start":896,"line_end":896,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(RecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9016661,"byte_end":9016729,"line_start":897,"line_end":897,"column_start":5,"column_end":73}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9016734,"byte_end":9016807,"line_start":898,"line_end":898,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`recv`] will return this value","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9016812,"byte_end":9016881,"line_start":899,"line_end":899,"column_start":5,"column_end":74}},{"value":"/ **unless** it has been since overwritten.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9016886,"byte_end":9016931,"line_start":900,"line_end":900,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9016936,"byte_end":9016939,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9016944,"byte_end":9016994,"line_start":902,"line_end":902,"column_start":5,"column_end":55}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9016999,"byte_end":9017051,"line_start":903,"line_end":903,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017056,"byte_end":9017059,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017064,"byte_end":9017078,"line_start":905,"line_end":905,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017083,"byte_end":9017086,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017091,"byte_end":9017098,"line_start":907,"line_end":907,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017103,"byte_end":9017134,"line_start":908,"line_end":908,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017139,"byte_end":9017142,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017147,"byte_end":9017165,"line_start":910,"line_end":910,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017170,"byte_end":9017191,"line_start":911,"line_end":911,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017196,"byte_end":9017247,"line_start":912,"line_end":912,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017252,"byte_end":9017289,"line_start":913,"line_end":913,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017294,"byte_end":9017297,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017302,"byte_end":9017335,"line_start":915,"line_end":915,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017340,"byte_end":9017394,"line_start":916,"line_end":916,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017399,"byte_end":9017453,"line_start":917,"line_end":917,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017458,"byte_end":9017469,"line_start":918,"line_end":918,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017474,"byte_end":9017477,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017482,"byte_end":9017515,"line_start":920,"line_end":920,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017520,"byte_end":9017574,"line_start":921,"line_end":921,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017579,"byte_end":9017633,"line_start":922,"line_end":922,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017638,"byte_end":9017649,"line_start":923,"line_end":923,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017654,"byte_end":9017657,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017662,"byte_end":9017691,"line_start":925,"line_end":925,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017696,"byte_end":9017725,"line_start":926,"line_end":926,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017730,"byte_end":9017735,"line_start":927,"line_end":927,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017740,"byte_end":9017747,"line_start":928,"line_end":928,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017752,"byte_end":9017755,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ Handling lag","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017760,"byte_end":9017776,"line_start":930,"line_end":930,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017781,"byte_end":9017784,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017789,"byte_end":9017796,"line_start":932,"line_end":932,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017801,"byte_end":9017832,"line_start":933,"line_end":933,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017837,"byte_end":9017840,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017845,"byte_end":9017863,"line_start":935,"line_end":935,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017868,"byte_end":9017889,"line_start":936,"line_end":936,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017894,"byte_end":9017943,"line_start":937,"line_end":937,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017948,"byte_end":9017951,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017956,"byte_end":9017985,"line_start":939,"line_end":939,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9017990,"byte_end":9018019,"line_start":940,"line_end":940,"column_start":5,"column_end":34}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9018024,"byte_end":9018053,"line_start":941,"line_end":941,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9018058,"byte_end":9018061,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/     // The receiver lagged behind","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9018066,"byte_end":9018103,"line_start":943,"line_end":943,"column_start":5,"column_end":42}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9018108,"byte_end":9018150,"line_start":944,"line_end":944,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9018155,"byte_end":9018158,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9018163,"byte_end":9018232,"line_start":946,"line_end":946,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9018237,"byte_end":9018240,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9018245,"byte_end":9018294,"line_start":948,"line_end":948,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9018299,"byte_end":9018348,"line_start":949,"line_end":949,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9018353,"byte_end":9018358,"line_start":950,"line_end":950,"column_start":5,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":8007},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9023034,"byte_end":9023045,"line_start":1110,"line_end":1110,"column_start":16,"column_end":27},"name":"into_stream","qualname":"<Receiver<T>>::into_stream","value":"pub fn into_stream(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Convert the receiver into a `Stream`.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6821},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":6822},{"krate":0,"index":6895},{"krate":0,"index":6955},{"krate":0,"index":6956},{"krate":0,"index":6957},{"krate":0,"index":6958},{"krate":0,"index":6959},{"krate":0,"index":7123},{"krate":0,"index":7169},{"krate":0,"index":7216},{"krate":0,"index":7217},{"krate":0,"index":7218},{"krate":0,"index":7219},{"krate":0,"index":7220},{"krate":0,"index":7247}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values across\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21247,"byte_end":21271,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, single-consumer queue for sending values across","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9026699,"byte_end":9026768,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ asynchronous tasks.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9026769,"byte_end":9026792,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9026793,"byte_end":9026796,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Similar to `std`, channel creation provides [`Receiver`] and [`Sender`]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9026797,"byte_end":9026872,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ handles. [`Receiver`] implements `Stream` and allows a task to read values","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9026873,"byte_end":9026951,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ out of the channel. If there is no message to read, the current task will be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9026952,"byte_end":9027032,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ notified when a new value is sent. If the channel is at capacity, the send","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9027033,"byte_end":9027111,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ is rejected and the task will be notified when additional capacity is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9027112,"byte_end":9027185,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/ available. In other words, the channel provides backpressure.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9027186,"byte_end":9027251,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9027252,"byte_end":9027255,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This module provides two variants of the channel: bounded and unbounded. The","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9027256,"byte_end":9027336,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ bounded variant has a limit on the number of messages that the channel can","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9027337,"byte_end":9027415,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ store, and if this limit is reached, trying to send another message will","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9027416,"byte_end":9027492,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ wait until a message is received from the channel. An unbounded channel has","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9027493,"byte_end":9027572,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ an infinite capacity, so the `send` method never does any kind of sleeping.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9027573,"byte_end":9027652,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ This makes the [`UnboundedSender`] usable from both synchronous and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9027653,"byte_end":9027724,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ asynchronous code.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9027725,"byte_end":9027747,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9027748,"byte_end":9027751,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9027752,"byte_end":9027771,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9027772,"byte_end":9027775,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9027776,"byte_end":9027842,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9027843,"byte_end":9027923,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, `Receiver::poll` returns `Ok(Ready(None))`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9027924,"byte_end":9028001,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9028002,"byte_end":9028005,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9028006,"byte_end":9028076,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9028077,"byte_end":9028156,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9028157,"byte_end":9028180,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9028181,"byte_end":9028184,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9028185,"byte_end":9028205,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9028206,"byte_end":9028209,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ When the [`Receiver`] is dropped, it is possible for unprocessed messages to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9028210,"byte_end":9028290,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ remain in the channel. Instead, it is usually desirable to perform a \"clean\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9028291,"byte_end":9028371,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ shutdown. To do this, the receiver first calls `close`, which will prevent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9028372,"byte_end":9028450,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ any further messages to be sent into the channel. Then, the receiver","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9028451,"byte_end":9028523,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ consumes the channel to completion, at which point the receiver can be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9028524,"byte_end":9028598,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/ dropped.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9028599,"byte_end":9028611,"line_start":38,"line_end":38,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9028612,"byte_end":9028615,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Communicating between sync and async code","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9028616,"byte_end":9028663,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9028664,"byte_end":9028667,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ When you want to communicate between synchronous and asynchronous code, there","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9028668,"byte_end":9028749,"line_start":42,"line_end":42,"column_start":1,"column_end":82}},{"value":"/ are two situations to consider:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9028750,"byte_end":9028785,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9028786,"byte_end":9028789,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ **Bounded channel**: If you need a bounded channel, you should use a bounded","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9028790,"byte_end":9028870,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ Tokio `mpsc` channel for both directions of communication. To call the async","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9028871,"byte_end":9028951,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/ [`send`][bounded-send] or [`recv`][bounded-recv] methods in sync code, you","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9028952,"byte_end":9029030,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ will need to use [`Handle::block_on`], which allow you to execute an async","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9029031,"byte_end":9029109,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ method in synchronous code. This is necessary because a bounded channel may","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9029110,"byte_end":9029189,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"/ need to wait for additional capacity to become available.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9029190,"byte_end":9029251,"line_start":50,"line_end":50,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9029252,"byte_end":9029255,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ **Unbounded channel**: You should use the kind of channel that matches where","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9029256,"byte_end":9029336,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ the receiver is. So for sending a message _from async to sync_, you should","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9029337,"byte_end":9029415,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/ use [the standard library unbounded channel][std-unbounded] or","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9029416,"byte_end":9029482,"line_start":54,"line_end":54,"column_start":1,"column_end":67}},{"value":"/ [crossbeam][crossbeam-unbounded].  Similarly, for sending a message _from sync","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9029483,"byte_end":9029565,"line_start":55,"line_end":55,"column_start":1,"column_end":83}},{"value":"/ to async_, you should use an unbounded Tokio `mpsc` channel.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9029566,"byte_end":9029630,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9029631,"byte_end":9029634,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::mpsc::Sender","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9029635,"byte_end":9029676,"line_start":58,"line_end":58,"column_start":1,"column_end":42}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9029677,"byte_end":9029722,"line_start":59,"line_end":59,"column_start":1,"column_end":46}},{"value":"/ [bounded-send]: crate::sync::mpsc::Sender::send()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9029723,"byte_end":9029776,"line_start":60,"line_end":60,"column_start":1,"column_end":54}},{"value":"/ [bounded-recv]: crate::sync::mpsc::Receiver::recv()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9029777,"byte_end":9029832,"line_start":61,"line_end":61,"column_start":1,"column_end":56}},{"value":"/ [`UnboundedSender`]: crate::sync::mpsc::UnboundedSender","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9029833,"byte_end":9029892,"line_start":62,"line_end":62,"column_start":1,"column_end":60}},{"value":"/ [`Handle::block_on`]: crate::runtime::Handle::block_on()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9029893,"byte_end":9029953,"line_start":63,"line_end":63,"column_start":1,"column_end":61}},{"value":"/ [std-unbounded]: std::sync::mpsc::channel","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9029954,"byte_end":9029999,"line_start":64,"line_end":64,"column_start":1,"column_end":46}},{"value":"/ [crossbeam-unbounded]: https://docs.rs/crossbeam/*/crossbeam/channel/fn.unbounded.html","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9030000,"byte_end":9030090,"line_start":65,"line_end":65,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":6907},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9043955,"byte_end":9043961,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::bounded::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6909}],"decl_id":null,"docs":" Send values to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `Receiver`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9043830,"byte_end":9043875,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9043876,"byte_end":9043879,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9043880,"byte_end":9043943,"line_start":15,"line_end":15,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":6916},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9044470,"byte_end":9044478,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::bounded::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6918}],"decl_id":null,"docs":" Receive values from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `Sender`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9044342,"byte_end":9044390,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9044391,"byte_end":9044394,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9044395,"byte_end":9044458,"line_start":38,"line_end":38,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":6922},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045866,"byte_end":9045873,"line_start":88,"line_end":88,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::bounded::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks,\n returning the sender/receiver halves.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9044759,"byte_end":9044839,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ returning the sender/receiver halves.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9044840,"byte_end":9044881,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9044882,"byte_end":9044885,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ All data sent on `Sender` will become available on `Receiver` in the same","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9044886,"byte_end":9044963,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ order as it was sent.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9044964,"byte_end":9044989,"line_start":56,"line_end":56,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9044990,"byte_end":9044993,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple code","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9044994,"byte_end":9045073,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ locations. Only one `Receiver` is supported.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045074,"byte_end":9045122,"line_start":59,"line_end":59,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045123,"byte_end":9045126,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ If the `Receiver` is disconnected while trying to `send`, the `send` method","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045127,"byte_end":9045206,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ will return a `SendError`. Similarly, if `Sender` is disconnected while","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045207,"byte_end":9045282,"line_start":62,"line_end":62,"column_start":1,"column_end":76}},{"value":"/ trying to `recv`, the `recv` method will return a `RecvError`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045283,"byte_end":9045349,"line_start":63,"line_end":63,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045350,"byte_end":9045353,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045354,"byte_end":9045368,"line_start":65,"line_end":65,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045369,"byte_end":9045372,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045373,"byte_end":9045384,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045385,"byte_end":9045411,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045412,"byte_end":9045415,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045416,"byte_end":9045434,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045435,"byte_end":9045456,"line_start":71,"line_end":71,"column_start":1,"column_end":22}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045457,"byte_end":9045507,"line_start":72,"line_end":72,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045508,"byte_end":9045511,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045512,"byte_end":9045545,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045546,"byte_end":9045574,"line_start":75,"line_end":75,"column_start":1,"column_end":29}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045575,"byte_end":9045625,"line_start":76,"line_end":76,"column_start":1,"column_end":51}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045626,"byte_end":9045675,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/                 return;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045676,"byte_end":9045703,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045704,"byte_end":9045721,"line_start":79,"line_end":79,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045722,"byte_end":9045735,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045736,"byte_end":9045747,"line_start":81,"line_end":81,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045748,"byte_end":9045751,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045752,"byte_end":9045797,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045798,"byte_end":9045834,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045835,"byte_end":9045844,"line_start":85,"line_end":85,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045845,"byte_end":9045850,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9045851,"byte_end":9045858,"line_start":87,"line_end":87,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6928},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9047555,"byte_end":9047559,"line_start":147,"line_end":147,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9046473,"byte_end":9046519,"line_start":108,"line_end":108,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9046524,"byte_end":9046527,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9046532,"byte_end":9046604,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9046609,"byte_end":9046663,"line_start":111,"line_end":111,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9046668,"byte_end":9046671,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9046676,"byte_end":9046690,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9046695,"byte_end":9046698,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9046703,"byte_end":9046710,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9046715,"byte_end":9046741,"line_start":116,"line_end":116,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9046746,"byte_end":9046749,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9046754,"byte_end":9046772,"line_start":118,"line_end":118,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9046777,"byte_end":9046798,"line_start":119,"line_end":119,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9046803,"byte_end":9046853,"line_start":120,"line_end":120,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9046858,"byte_end":9046861,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9046866,"byte_end":9046899,"line_start":122,"line_end":122,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9046904,"byte_end":9046948,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9046953,"byte_end":9046964,"line_start":124,"line_end":124,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9046969,"byte_end":9046972,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9046977,"byte_end":9047028,"line_start":126,"line_end":126,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9047033,"byte_end":9047075,"line_start":127,"line_end":127,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9047080,"byte_end":9047085,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9047090,"byte_end":9047097,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9047102,"byte_end":9047105,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9047110,"byte_end":9047134,"line_start":131,"line_end":131,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9047139,"byte_end":9047142,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9047147,"byte_end":9047154,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9047159,"byte_end":9047185,"line_start":134,"line_end":134,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9047190,"byte_end":9047193,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9047198,"byte_end":9047216,"line_start":136,"line_end":136,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9047221,"byte_end":9047242,"line_start":137,"line_end":137,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9047247,"byte_end":9047297,"line_start":138,"line_end":138,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9047302,"byte_end":9047305,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9047310,"byte_end":9047350,"line_start":140,"line_end":140,"column_start":5,"column_end":45}},{"value":"/     tx.send(\"world\").await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9047355,"byte_end":9047395,"line_start":141,"line_end":141,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9047400,"byte_end":9047403,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9047408,"byte_end":9047459,"line_start":143,"line_end":143,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9047464,"byte_end":9047515,"line_start":144,"line_end":144,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9047520,"byte_end":9047525,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9047530,"byte_end":9047537,"line_start":146,"line_end":146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6933},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9047725,"byte_end":9047734,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6934},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9048390,"byte_end":9048398,"line_start":169,"line_end":169,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without blocking.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without blocking.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9047827,"byte_end":9047900,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9047905,"byte_end":9047908,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ This method will never block the caller in order to wait for data to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9047913,"byte_end":9047985,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ become available. Instead, this will always return immediately with","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9047990,"byte_end":9048061,"line_start":161,"line_end":161,"column_start":5,"column_end":76}},{"value":"/ a possible option of pending data on the channel.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9048066,"byte_end":9048119,"line_start":162,"line_end":162,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9048124,"byte_end":9048127,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9048132,"byte_end":9048204,"line_start":164,"line_end":164,"column_start":5,"column_end":77}},{"value":"/ block on a receiver.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9048209,"byte_end":9048233,"line_start":165,"line_end":165,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9048238,"byte_end":9048241,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Compared with recv, this function has two failure cases instead of","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9048246,"byte_end":9048316,"line_start":167,"line_end":167,"column_start":5,"column_end":75}},{"value":"/ one (one for disconnection, one for an empty buffer).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9048321,"byte_end":9048378,"line_start":168,"line_end":168,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":6935},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9048716,"byte_end":9048721,"line_start":177,"line_end":177,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9048479,"byte_end":9048543,"line_start":173,"line_end":173,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9048548,"byte_end":9048551,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9048556,"byte_end":9048631,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9048636,"byte_end":9048704,"line_start":176,"line_end":176,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":6941},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050811,"byte_end":9050815,"line_start":244,"line_end":244,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"pub async fn send<'_>(&'_ mut Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9049167,"byte_end":9049218,"line_start":199,"line_end":199,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9049223,"byte_end":9049226,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9049231,"byte_end":9049307,"line_start":201,"line_end":201,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9049312,"byte_end":9049388,"line_start":202,"line_end":202,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been closed. Note that a return","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9049393,"byte_end":9049467,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ value of `Err` means that the data will never be received, but a return","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9049472,"byte_end":9049547,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ value of `Ok` does not mean that the data will be received. It is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9049552,"byte_end":9049621,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/ possible for the corresponding receiver to hang up immediately after","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9049626,"byte_end":9049698,"line_start":206,"line_end":206,"column_start":5,"column_end":77}},{"value":"/ this function returns `Ok`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9049703,"byte_end":9049734,"line_start":207,"line_end":207,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9049739,"byte_end":9049742,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9049747,"byte_end":9049759,"line_start":209,"line_end":209,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9049764,"byte_end":9049767,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9049772,"byte_end":9049845,"line_start":211,"line_end":211,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9049850,"byte_end":9049924,"line_start":212,"line_end":212,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9049929,"byte_end":9049989,"line_start":213,"line_end":213,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9049994,"byte_end":9049997,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050002,"byte_end":9050032,"line_start":215,"line_end":215,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050037,"byte_end":9050063,"line_start":216,"line_end":216,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050068,"byte_end":9050071,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050076,"byte_end":9050090,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050095,"byte_end":9050098,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send` will block until the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050103,"byte_end":9050173,"line_start":220,"line_end":220,"column_start":5,"column_end":75}},{"value":"/ previously sent value was received.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050178,"byte_end":9050217,"line_start":221,"line_end":221,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050222,"byte_end":9050225,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050230,"byte_end":9050241,"line_start":223,"line_end":223,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050246,"byte_end":9050272,"line_start":224,"line_end":224,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050277,"byte_end":9050280,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050285,"byte_end":9050303,"line_start":226,"line_end":226,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050308,"byte_end":9050329,"line_start":227,"line_end":227,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050334,"byte_end":9050382,"line_start":228,"line_end":228,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050387,"byte_end":9050390,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050395,"byte_end":9050428,"line_start":230,"line_end":230,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050433,"byte_end":9050461,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050466,"byte_end":9050516,"line_start":232,"line_end":232,"column_start":5,"column_end":55}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050521,"byte_end":9050570,"line_start":233,"line_end":233,"column_start":5,"column_end":54}},{"value":"/                 return;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050575,"byte_end":9050602,"line_start":234,"line_end":234,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050607,"byte_end":9050624,"line_start":235,"line_end":235,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050629,"byte_end":9050642,"line_start":236,"line_end":236,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050647,"byte_end":9050658,"line_start":237,"line_end":237,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050663,"byte_end":9050666,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050671,"byte_end":9050716,"line_start":239,"line_end":239,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050721,"byte_end":9050757,"line_start":240,"line_end":240,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050762,"byte_end":9050771,"line_start":241,"line_end":241,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050776,"byte_end":9050781,"line_start":242,"line_end":242,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9050786,"byte_end":9050793,"line_start":243,"line_end":243,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6946},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9053548,"byte_end":9053556,"line_start":320,"line_end":320,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&mut Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to immediately send a message on this `Sender`","sig":null,"attributes":[{"value":"/ Attempts to immediately send a message on this `Sender`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9051236,"byte_end":9051295,"line_start":258,"line_end":258,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9051300,"byte_end":9051303,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This method differs from [`send`] by returning immediately if the channel's","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9051308,"byte_end":9051387,"line_start":260,"line_end":260,"column_start":5,"column_end":84}},{"value":"/ buffer is full or no receiver is waiting to acquire some data. Compared","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9051392,"byte_end":9051467,"line_start":261,"line_end":261,"column_start":5,"column_end":80}},{"value":"/ with [`send`], this function has two failure cases instead of one (one for","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9051472,"byte_end":9051550,"line_start":262,"line_end":262,"column_start":5,"column_end":83}},{"value":"/ disconnection, one for a full buffer).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9051555,"byte_end":9051597,"line_start":263,"line_end":263,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9051602,"byte_end":9051605,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This function may be paired with [`poll_ready`] in order to wait for","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9051610,"byte_end":9051682,"line_start":265,"line_end":265,"column_start":5,"column_end":77}},{"value":"/ channel capacity before trying to send a value.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9051687,"byte_end":9051738,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9051743,"byte_end":9051746,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9051751,"byte_end":9051763,"line_start":268,"line_end":268,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9051768,"byte_end":9051771,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ If the channel capacity has been reached, i.e., the channel has `n`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9051776,"byte_end":9051847,"line_start":270,"line_end":270,"column_start":5,"column_end":76}},{"value":"/ buffered values where `n` is the argument passed to [`channel`], then an","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9051852,"byte_end":9051928,"line_start":271,"line_end":271,"column_start":5,"column_end":81}},{"value":"/ error is returned.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9051933,"byte_end":9051955,"line_start":272,"line_end":272,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9051960,"byte_end":9051963,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9051968,"byte_end":9052041,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9052046,"byte_end":9052120,"line_start":275,"line_end":275,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9052125,"byte_end":9052185,"line_start":276,"line_end":276,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9052190,"byte_end":9052193,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9052198,"byte_end":9052224,"line_start":278,"line_end":278,"column_start":5,"column_end":31}},{"value":"/ [`poll_ready`]: Sender::poll_ready","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9052229,"byte_end":9052267,"line_start":279,"line_end":279,"column_start":5,"column_end":43}},{"value":"/ [`channel`]: channel","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9052272,"byte_end":9052296,"line_start":280,"line_end":280,"column_start":5,"column_end":29}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9052301,"byte_end":9052331,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9052336,"byte_end":9052339,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9052344,"byte_end":9052358,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9052363,"byte_end":9052366,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9052371,"byte_end":9052378,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9052383,"byte_end":9052409,"line_start":286,"line_end":286,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9052414,"byte_end":9052417,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9052422,"byte_end":9052440,"line_start":288,"line_end":288,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9052445,"byte_end":9052466,"line_start":289,"line_end":289,"column_start":5,"column_end":26}},{"value":"/     // Create a channel with buffer size 1","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9052471,"byte_end":9052517,"line_start":290,"line_end":290,"column_start":5,"column_end":51}},{"value":"/     let (mut tx1, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9052522,"byte_end":9052571,"line_start":291,"line_end":291,"column_start":5,"column_end":54}},{"value":"/     let mut tx2 = tx1.clone();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9052576,"byte_end":9052610,"line_start":292,"line_end":292,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9052615,"byte_end":9052618,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9052623,"byte_end":9052656,"line_start":294,"line_end":294,"column_start":5,"column_end":38}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9052661,"byte_end":9052700,"line_start":295,"line_end":295,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9052705,"byte_end":9052744,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/         // task waits until the receiver receives a value.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9052749,"byte_end":9052811,"line_start":297,"line_end":297,"column_start":5,"column_end":67}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9052816,"byte_end":9052827,"line_start":298,"line_end":298,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9052832,"byte_end":9052835,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9052840,"byte_end":9052873,"line_start":300,"line_end":300,"column_start":5,"column_end":38}},{"value":"/         // This will return an error and send","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9052878,"byte_end":9052927,"line_start":301,"line_end":301,"column_start":5,"column_end":54}},{"value":"/         // no message if the buffer is full","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9052932,"byte_end":9052979,"line_start":302,"line_end":302,"column_start":5,"column_end":52}},{"value":"/         let _ = tx2.try_send(3);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9052984,"byte_end":9053020,"line_start":303,"line_end":303,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9053025,"byte_end":9053036,"line_start":304,"line_end":304,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9053041,"byte_end":9053044,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/     let mut msg;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9053049,"byte_end":9053069,"line_start":306,"line_end":306,"column_start":5,"column_end":25}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9053074,"byte_end":9053113,"line_start":307,"line_end":307,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9053118,"byte_end":9053163,"line_start":308,"line_end":308,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9053168,"byte_end":9053171,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9053176,"byte_end":9053215,"line_start":310,"line_end":310,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9053220,"byte_end":9053265,"line_start":311,"line_end":311,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9053270,"byte_end":9053273,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/     // Third message may have never been sent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9053278,"byte_end":9053327,"line_start":313,"line_end":313,"column_start":5,"column_end":54}},{"value":"/     match rx.recv().await {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9053332,"byte_end":9053363,"line_start":314,"line_end":314,"column_start":5,"column_end":36}},{"value":"/         Some(msg) => println!(\"message {} received\", msg),","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9053368,"byte_end":9053430,"line_start":315,"line_end":315,"column_start":5,"column_end":67}},{"value":"/         None => println!(\"the third message was never sent\"),","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9053435,"byte_end":9053500,"line_start":316,"line_end":316,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9053505,"byte_end":9053514,"line_start":317,"line_end":317,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9053519,"byte_end":9053524,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9053529,"byte_end":9053536,"line_start":319,"line_end":319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6947},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9055373,"byte_end":9055385,"line_start":372,"line_end":372,"column_start":18,"column_end":30},"name":"send_timeout","qualname":"<Sender<T>>::send_timeout","value":"pub async fn send_timeout<'_>(&'_ mut Self, T, Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity, but only for a limited time.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity, but only for a limited time.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9053677,"byte_end":9053757,"line_start":325,"line_end":325,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9053762,"byte_end":9053765,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Shares the same success and error conditions as [`send`], adding one more","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9053770,"byte_end":9053847,"line_start":327,"line_end":327,"column_start":5,"column_end":82}},{"value":"/ condition for an unsuccessful send, which is when the provided timeout has","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9053852,"byte_end":9053930,"line_start":328,"line_end":328,"column_start":5,"column_end":83}},{"value":"/ elapsed, and there is no capacity available.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9053935,"byte_end":9053983,"line_start":329,"line_end":329,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9053988,"byte_end":9053991,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9053996,"byte_end":9054022,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9054027,"byte_end":9054030,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9054035,"byte_end":9054047,"line_start":333,"line_end":333,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9054052,"byte_end":9054055,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9054060,"byte_end":9054133,"line_start":335,"line_end":335,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] having been dropped,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9054138,"byte_end":9054195,"line_start":336,"line_end":336,"column_start":5,"column_end":62}},{"value":"/ the function returns an error. The error includes the value passed to `send`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9054200,"byte_end":9054281,"line_start":337,"line_end":337,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9054286,"byte_end":9054289,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9054294,"byte_end":9054324,"line_start":339,"line_end":339,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9054329,"byte_end":9054355,"line_start":340,"line_end":340,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9054360,"byte_end":9054363,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9054368,"byte_end":9054382,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9054387,"byte_end":9054390,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send_timeout` will block until the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9054395,"byte_end":9054473,"line_start":344,"line_end":344,"column_start":5,"column_end":83}},{"value":"/ previously sent value was received, unless the timeout has elapsed.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9054478,"byte_end":9054549,"line_start":345,"line_end":345,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9054554,"byte_end":9054557,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9054562,"byte_end":9054573,"line_start":347,"line_end":347,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9054578,"byte_end":9054604,"line_start":348,"line_end":348,"column_start":5,"column_end":31}},{"value":"/ use tokio::time::{delay_for, Duration};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9054609,"byte_end":9054652,"line_start":349,"line_end":349,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9054657,"byte_end":9054660,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9054665,"byte_end":9054683,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9054688,"byte_end":9054709,"line_start":352,"line_end":352,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9054714,"byte_end":9054762,"line_start":353,"line_end":353,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9054767,"byte_end":9054770,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9054775,"byte_end":9054808,"line_start":355,"line_end":355,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9054813,"byte_end":9054841,"line_start":356,"line_end":356,"column_start":5,"column_end":33}},{"value":"/             if let Err(e) = tx.send_timeout(i, Duration::from_millis(100)).await {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9054846,"byte_end":9054932,"line_start":357,"line_end":357,"column_start":5,"column_end":91}},{"value":"/                 println!(\"send error: #{:?}\", e);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9054937,"byte_end":9054990,"line_start":358,"line_end":358,"column_start":5,"column_end":58}},{"value":"/                 return;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9054995,"byte_end":9055022,"line_start":359,"line_end":359,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9055027,"byte_end":9055044,"line_start":360,"line_end":360,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9055049,"byte_end":9055062,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9055067,"byte_end":9055078,"line_start":362,"line_end":362,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9055083,"byte_end":9055086,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9055091,"byte_end":9055136,"line_start":364,"line_end":364,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9055141,"byte_end":9055177,"line_start":365,"line_end":365,"column_start":5,"column_end":41}},{"value":"/         delay_for(Duration::from_millis(200)).await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9055182,"byte_end":9055238,"line_start":366,"line_end":366,"column_start":5,"column_end":61}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9055243,"byte_end":9055252,"line_start":367,"line_end":367,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9055257,"byte_end":9055262,"line_start":368,"line_end":368,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9055267,"byte_end":9055274,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9055279,"byte_end":9055303,"line_start":370,"line_end":370,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":6952},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9057169,"byte_end":9057179,"line_start":413,"line_end":413,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender<T>>::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), ClosedError>>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Poll::Ready(Ok(()))` when the channel is able to accept another item.","sig":null,"attributes":[{"value":"/ Returns `Poll::Ready(Ok(()))` when the channel is able to accept another item.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9056088,"byte_end":9056170,"line_start":396,"line_end":396,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9056175,"byte_end":9056178,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, then `Poll::Pending` is returned and the task is notified when a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9056183,"byte_end":9056275,"line_start":398,"line_end":398,"column_start":5,"column_end":97}},{"value":"/ slot becomes available.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9056280,"byte_end":9056307,"line_start":399,"line_end":399,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9056312,"byte_end":9056315,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Once `poll_ready` returns `Poll::Ready(Ok(()))`, a call to `try_send` will succeed unless","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9056320,"byte_end":9056413,"line_start":401,"line_end":401,"column_start":5,"column_end":98}},{"value":"/ the channel has since been closed. To provide this guarantee, the channel reserves one slot","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9056418,"byte_end":9056513,"line_start":402,"line_end":402,"column_start":5,"column_end":100}},{"value":"/ in the channel for the coming send. This reserved slot is not available to other `Sender`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9056518,"byte_end":9056611,"line_start":403,"line_end":403,"column_start":5,"column_end":98}},{"value":"/ instances, so you need to be careful to not end up with deadlocks by blocking after calling","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9056616,"byte_end":9056711,"line_start":404,"line_end":404,"column_start":5,"column_end":100}},{"value":"/ `poll_ready` but before sending an element.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9056716,"byte_end":9056763,"line_start":405,"line_end":405,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9056768,"byte_end":9056771,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ If, after `poll_ready` succeeds, you decide you do not wish to send an item after all, you","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9056776,"byte_end":9056870,"line_start":407,"line_end":407,"column_start":5,"column_end":99}},{"value":"/ can use [`disarm`](Sender::disarm) to release the reserved slot.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9056875,"byte_end":9056943,"line_start":408,"line_end":408,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9056948,"byte_end":9056951,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Until an item is sent or [`disarm`](Sender::disarm) is called, repeated calls to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9056956,"byte_end":9057040,"line_start":410,"line_end":410,"column_start":5,"column_end":89}},{"value":"/ `poll_ready` will return either `Poll::Ready(Ok(()))` or `Poll::Ready(Err(_))` if channel","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9057045,"byte_end":9057138,"line_start":411,"line_end":411,"column_start":5,"column_end":98}},{"value":"/ is closed.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9057143,"byte_end":9057157,"line_start":412,"line_end":412,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":6954},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9059735,"byte_end":9059741,"line_start":471,"line_end":471,"column_start":12,"column_end":18},"name":"disarm","qualname":"<Sender<T>>::disarm","value":"pub fn disarm(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Undo a successful call to `poll_ready`.","sig":null,"attributes":[{"value":"/ Undo a successful call to `poll_ready`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9057324,"byte_end":9057367,"line_start":417,"line_end":417,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9057372,"byte_end":9057375,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ Once a call to `poll_ready` returns `Poll::Ready(Ok(()))`, it holds up one slot in the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9057380,"byte_end":9057470,"line_start":419,"line_end":419,"column_start":5,"column_end":95}},{"value":"/ channel to make room for the coming send. `disarm` allows you to give up that slot if you","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9057475,"byte_end":9057568,"line_start":420,"line_end":420,"column_start":5,"column_end":98}},{"value":"/ decide you do not wish to send an item after all. After calling `disarm`, you must call","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9057573,"byte_end":9057664,"line_start":421,"line_end":421,"column_start":5,"column_end":96}},{"value":"/ `poll_ready` until it returns `Poll::Ready(Ok(()))` before attempting to send again.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9057669,"byte_end":9057757,"line_start":422,"line_end":422,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9057762,"byte_end":9057765,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ Returns `false` if no slot is reserved for this sender (usually because `poll_ready` was","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9057770,"byte_end":9057862,"line_start":424,"line_end":424,"column_start":5,"column_end":97}},{"value":"/ not previously called, or did not succeed).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9057867,"byte_end":9057914,"line_start":425,"line_end":425,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9057919,"byte_end":9057922,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Motivation","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9057927,"byte_end":9057943,"line_start":427,"line_end":427,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9057948,"byte_end":9057951,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Since `poll_ready` takes up one of the finite number of slots in a bounded channel, callers","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9057956,"byte_end":9058051,"line_start":429,"line_end":429,"column_start":5,"column_end":100}},{"value":"/ need to send an item shortly after `poll_ready` succeeds. If they do not, idle senders may","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9058056,"byte_end":9058150,"line_start":430,"line_end":430,"column_start":5,"column_end":99}},{"value":"/ take up all the slots of the channel, and prevent active senders from getting any requests","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9058155,"byte_end":9058249,"line_start":431,"line_end":431,"column_start":5,"column_end":99}},{"value":"/ through. Consider this code that forwards from one channel to another:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9058254,"byte_end":9058328,"line_start":432,"line_end":432,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9058333,"byte_end":9058336,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9058341,"byte_end":9058359,"line_start":434,"line_end":434,"column_start":5,"column_end":23}},{"value":"/ loop {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9058364,"byte_end":9058374,"line_start":435,"line_end":435,"column_start":5,"column_end":15}},{"value":"/   ready!(tx.poll_ready(cx))?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9058379,"byte_end":9058412,"line_start":436,"line_end":436,"column_start":5,"column_end":38}},{"value":"/   if let Some(item) = ready!(rx.poll_recv(cx)) {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9058417,"byte_end":9058469,"line_start":437,"line_end":437,"column_start":5,"column_end":57}},{"value":"/     tx.try_send(item)?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9058474,"byte_end":9058501,"line_start":438,"line_end":438,"column_start":5,"column_end":32}},{"value":"/   } else {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9058506,"byte_end":9058520,"line_start":439,"line_end":439,"column_start":5,"column_end":19}},{"value":"/     break;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9058525,"byte_end":9058539,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/   }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9058544,"byte_end":9058551,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9058556,"byte_end":9058561,"line_start":442,"line_end":442,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9058566,"byte_end":9058573,"line_start":443,"line_end":443,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9058578,"byte_end":9058581,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ If many such forwarders exist, and they all forward into a single (cloned) `Sender`, then","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9058586,"byte_end":9058679,"line_start":445,"line_end":445,"column_start":5,"column_end":98}},{"value":"/ any number of forwarders may be waiting for `rx.poll_recv` at the same time. While they do,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9058684,"byte_end":9058779,"line_start":446,"line_end":446,"column_start":5,"column_end":100}},{"value":"/ they are effectively each reducing the channel's capacity by 1. If enough of these","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9058784,"byte_end":9058870,"line_start":447,"line_end":447,"column_start":5,"column_end":91}},{"value":"/ forwarders are idle, forwarders whose `rx` _do_ have elements will be unable to find a spot","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9058875,"byte_end":9058970,"line_start":448,"line_end":448,"column_start":5,"column_end":100}},{"value":"/ for them through `poll_ready`, and the system will deadlock.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9058975,"byte_end":9059039,"line_start":449,"line_end":449,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9059044,"byte_end":9059047,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ `disarm` solves this problem by allowing you to give up the reserved slot if you find that","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9059052,"byte_end":9059146,"line_start":451,"line_end":451,"column_start":5,"column_end":99}},{"value":"/ you have to block. We can then fix the code above by writing:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9059151,"byte_end":9059216,"line_start":452,"line_end":452,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9059221,"byte_end":9059224,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9059229,"byte_end":9059247,"line_start":454,"line_end":454,"column_start":5,"column_end":23}},{"value":"/ loop {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9059252,"byte_end":9059262,"line_start":455,"line_end":455,"column_start":5,"column_end":15}},{"value":"/   ready!(tx.poll_ready(cx))?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9059267,"byte_end":9059300,"line_start":456,"line_end":456,"column_start":5,"column_end":38}},{"value":"/   let item = rx.poll_recv(cx);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9059305,"byte_end":9059339,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/   if let Poll::Ready(Ok(_)) = item {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9059344,"byte_end":9059384,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/     // we're going to send the item below, so don't disarm","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9059389,"byte_end":9059451,"line_start":459,"line_end":459,"column_start":5,"column_end":67}},{"value":"/   } else {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9059456,"byte_end":9059470,"line_start":460,"line_end":460,"column_start":5,"column_end":19}},{"value":"/     // give up our send slot, we won't need it for a while","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9059475,"byte_end":9059537,"line_start":461,"line_end":461,"column_start":5,"column_end":67}},{"value":"/     tx.disarm();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9059542,"byte_end":9059562,"line_start":462,"line_end":462,"column_start":5,"column_end":25}},{"value":"/   }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9059567,"byte_end":9059574,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/   if let Some(item) = ready!(item) {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9059579,"byte_end":9059619,"line_start":464,"line_end":464,"column_start":5,"column_end":45}},{"value":"/     tx.try_send(item)?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9059624,"byte_end":9059651,"line_start":465,"line_end":465,"column_start":5,"column_end":32}},{"value":"/   } else {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9059656,"byte_end":9059670,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/     break;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9059675,"byte_end":9059689,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/   }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9059694,"byte_end":9059701,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9059706,"byte_end":9059711,"line_start":469,"line_end":469,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9059716,"byte_end":9059723,"line_start":470,"line_end":470,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":7005},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9061733,"byte_end":9061739,"line_start":72,"line_end":72,"column_start":10,"column_end":16},"name":"Permit","qualname":"::sync::mpsc::chan::Semaphore::Permit","value":"type Permit;","parent":{"krate":0,"index":7004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7179},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9085336,"byte_end":9085351,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::unbounded::UnboundedSender","value":"UnboundedSender {  }","parent":null,"children":[{"krate":0,"index":7181}],"decl_id":null,"docs":" Send values to the associated `UnboundedReceiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `UnboundedReceiver`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9085178,"byte_end":9085232,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9085233,"byte_end":9085236,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9085237,"byte_end":9085269,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9085270,"byte_end":9085324,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":7188},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9085929,"byte_end":9085946,"line_start":36,"line_end":36,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::unbounded::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":7190}],"decl_id":null,"docs":" Receive values from the associated `UnboundedSender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `UnboundedSender`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9085768,"byte_end":9085825,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9085826,"byte_end":9085829,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9085830,"byte_end":9085862,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9085863,"byte_end":9085917,"line_start":35,"line_end":35,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":7194},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9086757,"byte_end":9086774,"line_start":59,"line_end":59,"column_start":8,"column_end":25},"name":"unbounded_channel","qualname":"::sync::mpsc::unbounded::unbounded_channel","value":"pub fn unbounded_channel<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9086245,"byte_end":9086321,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ tasks.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9086322,"byte_end":9086332,"line_start":50,"line_end":50,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9086333,"byte_end":9086336,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9086337,"byte_end":9086417,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9086418,"byte_end":9086497,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9086498,"byte_end":9086511,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9086512,"byte_end":9086515,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9086516,"byte_end":9086595,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9086596,"byte_end":9086672,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9086673,"byte_end":9086749,"line_start":58,"line_end":58,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":7200},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9087222,"byte_end":9087231,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnboundedReceiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7201},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9088394,"byte_end":9088398,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnboundedReceiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9087324,"byte_end":9087370,"line_start":81,"line_end":81,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9087375,"byte_end":9087378,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9087383,"byte_end":9087455,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9087460,"byte_end":9087514,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9087519,"byte_end":9087522,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9087527,"byte_end":9087541,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9087546,"byte_end":9087549,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9087554,"byte_end":9087561,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9087566,"byte_end":9087592,"line_start":89,"line_end":89,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9087597,"byte_end":9087600,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9087605,"byte_end":9087623,"line_start":91,"line_end":91,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9087628,"byte_end":9087649,"line_start":92,"line_end":92,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9087654,"byte_end":9087707,"line_start":93,"line_end":93,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9087712,"byte_end":9087715,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9087720,"byte_end":9087753,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9087758,"byte_end":9087796,"line_start":96,"line_end":96,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9087801,"byte_end":9087812,"line_start":97,"line_end":97,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9087817,"byte_end":9087820,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9087825,"byte_end":9087876,"line_start":99,"line_end":99,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9087881,"byte_end":9087923,"line_start":100,"line_end":100,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9087928,"byte_end":9087933,"line_start":101,"line_end":101,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9087938,"byte_end":9087945,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9087950,"byte_end":9087953,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9087958,"byte_end":9087982,"line_start":104,"line_end":104,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9087987,"byte_end":9087990,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9087995,"byte_end":9088002,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9088007,"byte_end":9088033,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9088038,"byte_end":9088041,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9088046,"byte_end":9088064,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9088069,"byte_end":9088090,"line_start":110,"line_end":110,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9088095,"byte_end":9088148,"line_start":111,"line_end":111,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9088153,"byte_end":9088156,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9088161,"byte_end":9088195,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/     tx.send(\"world\").unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9088200,"byte_end":9088234,"line_start":114,"line_end":114,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9088239,"byte_end":9088242,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9088247,"byte_end":9088298,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9088303,"byte_end":9088354,"line_start":117,"line_end":117,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9088359,"byte_end":9088364,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9088369,"byte_end":9088376,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7206},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9089083,"byte_end":9089091,"line_start":137,"line_end":137,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UnboundedReceiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without blocking.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without blocking.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9088520,"byte_end":9088593,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9088598,"byte_end":9088601,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This method will never block the caller in order to wait for data to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9088606,"byte_end":9088678,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/ become available. Instead, this will always return immediately with","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9088683,"byte_end":9088754,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ a possible option of pending data on the channel.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9088759,"byte_end":9088812,"line_start":130,"line_end":130,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9088817,"byte_end":9088820,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9088825,"byte_end":9088897,"line_start":132,"line_end":132,"column_start":5,"column_end":77}},{"value":"/ block on a receiver.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9088902,"byte_end":9088926,"line_start":133,"line_end":133,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9088931,"byte_end":9088934,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Compared with recv, this function has two failure cases instead of","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9088939,"byte_end":9089009,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ one (one for disconnection, one for an empty buffer).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9089014,"byte_end":9089071,"line_start":136,"line_end":136,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":7207},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9089409,"byte_end":9089414,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9089172,"byte_end":9089236,"line_start":141,"line_end":141,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9089241,"byte_end":9089244,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9089249,"byte_end":9089324,"line_start":143,"line_end":143,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9089329,"byte_end":9089397,"line_start":144,"line_end":144,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":7215},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9090537,"byte_end":9090541,"line_start":176,"line_end":176,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `UnboundedSender` without blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `UnboundedSender` without blocking.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9089849,"byte_end":9089923,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9089928,"byte_end":9089931,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This method is not marked async because sending a message to an unbounded channel","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9089936,"byte_end":9090021,"line_start":166,"line_end":166,"column_start":5,"column_end":90}},{"value":"/ never requires any form of waiting. Because of this, the `send` method can be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9090026,"byte_end":9090107,"line_start":167,"line_end":167,"column_start":5,"column_end":86}},{"value":"/ used in both synchronous and asynchronous code without problems.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9090112,"byte_end":9090180,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9090185,"byte_end":9090188,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9090193,"byte_end":9090266,"line_start":170,"line_end":170,"column_start":5,"column_end":78}},{"value":"/ being called or the [`UnboundedReceiver`] having been dropped, this","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9090271,"byte_end":9090342,"line_start":171,"line_end":171,"column_start":5,"column_end":76}},{"value":"/ function returns an error. The error includes the value passed to `send`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9090347,"byte_end":9090424,"line_start":172,"line_end":172,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9090429,"byte_end":9090432,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ [`close`]: UnboundedReceiver::close","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9090437,"byte_end":9090476,"line_start":174,"line_end":174,"column_start":5,"column_end":44}},{"value":"/ [`UnboundedReceiver`]: UnboundedReceiver","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9090481,"byte_end":9090525,"line_start":175,"line_end":175,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":7220},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::sync::mpsc::error","value":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","parent":null,"children":[{"krate":0,"index":7221},{"krate":0,"index":7222},{"krate":0,"index":8035},{"krate":0,"index":8039},{"krate":0,"index":7223},{"krate":0,"index":7226},{"krate":0,"index":8042},{"krate":0,"index":8050},{"krate":0,"index":7228},{"krate":0,"index":7230},{"krate":0,"index":7233},{"krate":0,"index":8053},{"krate":0,"index":8056},{"krate":0,"index":7236},{"krate":0,"index":7238},{"krate":0,"index":8058},{"krate":0,"index":8066},{"krate":0,"index":8063},{"krate":0,"index":8064},{"krate":0,"index":7239},{"krate":0,"index":7241},{"krate":0,"index":8068},{"krate":0,"index":8071},{"krate":0,"index":7242},{"krate":0,"index":7244},{"krate":0,"index":7246},{"krate":0,"index":8078},{"krate":0,"index":8086},{"krate":0,"index":8073},{"krate":0,"index":8075}],"decl_id":null,"docs":" Channel error types\n","sig":null,"attributes":[{"value":"/ Channel error types","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9090659,"byte_end":9090682,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":8035},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9090786,"byte_end":9090795,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Sender`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Sender`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9090722,"byte_end":9090757,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":8038},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9090799,"byte_end":9090804,"line_start":8,"line_end":8,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::mpsc::error::SendError::0","value":"T","parent":{"krate":0,"index":8035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8044},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9091348,"byte_end":9091352,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::mpsc::error::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":8042},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n currently full and sending would require blocking.\n","sig":null,"attributes":[{"value":"/ The data could not be sent on the channel because the channel is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9091216,"byte_end":9091284,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ currently full and sending would require blocking.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9091289,"byte_end":9091343,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8047},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9091453,"byte_end":9091459,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":8042},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[{"value":"/ The receive half of the channel was explicitly closed or has been","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9091362,"byte_end":9091431,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ dropped.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9091436,"byte_end":9091448,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":8042},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9091194,"byte_end":9091206,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::mpsc::error::TrySendError","value":"pub enum TrySendError<T> {\n\n    /// The data could not be sent on the channel because the channel is\n    /// currently full and sending would require blocking.\n    Full(T),\n\n    /// The receive half of the channel was explicitly closed or has been\n    /// dropped.\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":8044},{"krate":0,"index":8047}],"decl_id":null,"docs":" This enumeration is the list of the possible error outcomes for the\n [try_send](super::Sender::try_send) method.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible error outcomes for the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9091048,"byte_end":9091119,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ [try_send](super::Sender::try_send) method.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9091120,"byte_end":9091167,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":8053},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9092097,"byte_end":9092106,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::mpsc::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Receiver`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9092035,"byte_end":9092068,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8059},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9092611,"byte_end":9092616,"line_start":76,"line_end":76,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::mpsc::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":8058},"children":[],"decl_id":null,"docs":" This channel is currently empty, but the Sender(s) have not yet\n disconnected, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ This channel is currently empty, but the Sender(s) have not yet","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9092483,"byte_end":9092550,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/ disconnected, so data may yet become available.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9092555,"byte_end":9092606,"line_start":75,"line_end":75,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8061},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9092736,"byte_end":9092742,"line_start":79,"line_end":79,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":8058},"children":[],"decl_id":null,"docs":" The channel's sending half has been closed, and there will\n never be any more data received on it.\n","sig":null,"attributes":[{"value":"/ The channel's sending half has been closed, and there will","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9092622,"byte_end":9092684,"line_start":77,"line_end":77,"column_start":5,"column_end":67}},{"value":"/ never be any more data received on it.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9092689,"byte_end":9092731,"line_start":78,"line_end":78,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":8058},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9092464,"byte_end":9092476,"line_start":73,"line_end":73,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::mpsc::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// This channel is currently empty, but the Sender(s) have not yet\n    /// disconnected, so data may yet become available.\n    Empty,\n\n    /// The channel's sending half has been closed, and there will\n    /// never be any more data received on it.\n    Closed,\n}","parent":null,"children":[{"krate":0,"index":8059},{"krate":0,"index":8061}],"decl_id":null,"docs":" This enumeration is the list of the possible reasons that try_recv\n could not return data when called.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible reasons that try_recv","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9092317,"byte_end":9092387,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ could not return data when called.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9092388,"byte_end":9092426,"line_start":71,"line_end":71,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":8068},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9093233,"byte_end":9093244,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"ClosedError","qualname":"::sync::mpsc::error::ClosedError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by [`Sender::poll_ready`](super::Sender::poll_ready).\n","sig":null,"attributes":[{"value":"/ Error returned by [`Sender::poll_ready`](super::Sender::poll_ready).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9093132,"byte_end":9093204,"line_start":99,"line_end":99,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8080},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9093850,"byte_end":9093857,"line_start":125,"line_end":125,"column_start":9,"column_end":16},"name":"Timeout","qualname":"::sync::mpsc::error::SendTimeoutError::Timeout","value":"SendTimeoutError::Timeout(T)","parent":{"krate":0,"index":8078},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n full, and the timeout to send has elapsed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8083},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9093970,"byte_end":9093976,"line_start":129,"line_end":129,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::mpsc::error::SendTimeoutError::Closed","value":"SendTimeoutError::Closed(T)","parent":{"krate":0,"index":8078},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8078},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9093688,"byte_end":9093704,"line_start":122,"line_end":122,"column_start":14,"column_end":30},"name":"SendTimeoutError","qualname":"::sync::mpsc::error::SendTimeoutError","value":"pub enum SendTimeoutError<T> {\n\n    #[doc =\n      r\" The data could not be sent on the channel because the channel is\"]\n    #[doc = r\" full, and the timeout to send has elapsed.\"]\n    Timeout(T),\n\n    #[doc =\n      r\" The receive half of the channel was explicitly closed or has been\"]\n    #[doc = r\" dropped.\"]\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":8080},{"krate":0,"index":8083}],"decl_id":null,"docs":" Error returned by [`Sender::send_timeout`](super::Sender::send_timeout)].\n","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23098,"byte_end":23122,"line_start":324,"line_end":324,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":8089},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9098907,"byte_end":9098912,"line_start":119,"line_end":119,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":8091},{"krate":0,"index":8092}],"decl_id":null,"docs":" An asynchronous `Mutex`-like type.","sig":null,"attributes":[{"value":"/ An asynchronous `Mutex`-like type.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9094637,"byte_end":9094675,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9094676,"byte_end":9094679,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type acts similarly to an asynchronous [`std::sync::Mutex`], with one","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9094680,"byte_end":9094758,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ major difference: [`lock`] does not block and the lock guard can be held","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9094759,"byte_end":9094835,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ across await points.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9094836,"byte_end":9094860,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9094861,"byte_end":9094864,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Which kind of mutex should you use?","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9094865,"byte_end":9094906,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9094907,"byte_end":9094910,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Contrary to popular belief, it is ok and often preferred to use the ordinary","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9094911,"byte_end":9094991,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ [`Mutex`][std] from the standard library in asynchronous code. This section","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9094992,"byte_end":9095071,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ will help you decide on which kind of mutex you should use.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9095072,"byte_end":9095135,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9095136,"byte_end":9095139,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The primary use case of the async mutex is to provide shared mutable access","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9095140,"byte_end":9095219,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ to IO resources such as a database connection. If the data stored behind the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9095220,"byte_end":9095300,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ mutex is just data, it is often better to use a blocking mutex such as the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9095301,"byte_end":9095379,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ one in the standard library or [`parking_lot`]. This is because the feature","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9095380,"byte_end":9095459,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ that the async mutex offers over the blocking mutex is that it is possible","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9095460,"byte_end":9095538,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ to keep the mutex locked across an `.await` point, which is rarely necessary","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9095539,"byte_end":9095619,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ for data.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9095620,"byte_end":9095633,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9095634,"byte_end":9095637,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ A common pattern is to wrap the `Arc<Mutex<...>>` in a struct that provides","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9095638,"byte_end":9095717,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ non-async methods for performing operations on the data within, and only","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9095718,"byte_end":9095794,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ lock the mutex inside these methods. The [mini-redis] example provides an","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9095795,"byte_end":9095872,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ illustration of this pattern.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9095873,"byte_end":9095906,"line_start":32,"line_end":32,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9095907,"byte_end":9095910,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Additionally, when you _do_ want shared access to an IO resource, it is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9095911,"byte_end":9095986,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ often better to spawn a task to manage the IO resource, and to use message","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9095987,"byte_end":9096065,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ passing to communicate with that task.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096066,"byte_end":9096108,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096109,"byte_end":9096112,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [std]: std::sync::Mutex","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096113,"byte_end":9096140,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/ [`parking_lot`]: https://docs.rs/parking_lot","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096141,"byte_end":9096189,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/ [mini-redis]: https://github.com/tokio-rs/mini-redis/blob/master/src/db.rs","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096190,"byte_end":9096268,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096269,"byte_end":9096272,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096273,"byte_end":9096288,"line_start":42,"line_end":42,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096289,"byte_end":9096292,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096293,"byte_end":9096311,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096312,"byte_end":9096339,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096340,"byte_end":9096363,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096364,"byte_end":9096367,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096368,"byte_end":9096386,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096387,"byte_end":9096408,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/     let data1 = Arc::new(Mutex::new(0));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096409,"byte_end":9096453,"line_start":50,"line_end":50,"column_start":1,"column_end":45}},{"value":"/     let data2 = Arc::clone(&data1);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096454,"byte_end":9096493,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096494,"byte_end":9096497,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096498,"byte_end":9096531,"line_start":53,"line_end":53,"column_start":1,"column_end":34}},{"value":"/         let mut lock = data2.lock().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096532,"byte_end":9096578,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/         *lock += 1;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096579,"byte_end":9096602,"line_start":55,"line_end":55,"column_start":1,"column_end":24}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096603,"byte_end":9096614,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096615,"byte_end":9096618,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     let mut lock = data1.lock().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096619,"byte_end":9096661,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/     *lock += 1;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096662,"byte_end":9096681,"line_start":59,"line_end":59,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096682,"byte_end":9096687,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096688,"byte_end":9096695,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096696,"byte_end":9096699,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096700,"byte_end":9096703,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096704,"byte_end":9096722,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096723,"byte_end":9096750,"line_start":65,"line_end":65,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096751,"byte_end":9096774,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096775,"byte_end":9096778,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096779,"byte_end":9096797,"line_start":68,"line_end":68,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096798,"byte_end":9096819,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/     let count = Arc::new(Mutex::new(0));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096820,"byte_end":9096864,"line_start":70,"line_end":70,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096865,"byte_end":9096868,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096869,"byte_end":9096892,"line_start":72,"line_end":72,"column_start":1,"column_end":24}},{"value":"/         let my_count = Arc::clone(&count);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096893,"byte_end":9096939,"line_start":73,"line_end":73,"column_start":1,"column_end":47}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096940,"byte_end":9096977,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/             for _ in 0..10 {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9096978,"byte_end":9097010,"line_start":75,"line_end":75,"column_start":1,"column_end":33}},{"value":"/                 let mut lock = my_count.lock().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9097011,"byte_end":9097068,"line_start":76,"line_end":76,"column_start":1,"column_end":58}},{"value":"/                 *lock += 1;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9097069,"byte_end":9097100,"line_start":77,"line_end":77,"column_start":1,"column_end":32}},{"value":"/                 println!(\"{}\", lock);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9097101,"byte_end":9097142,"line_start":78,"line_end":78,"column_start":1,"column_end":42}},{"value":"/             }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9097143,"byte_end":9097160,"line_start":79,"line_end":79,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9097161,"byte_end":9097176,"line_start":80,"line_end":80,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9097177,"byte_end":9097186,"line_start":81,"line_end":81,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9097187,"byte_end":9097190,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9097191,"byte_end":9097205,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/         if *count.lock().await >= 50 {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9097206,"byte_end":9097248,"line_start":84,"line_end":84,"column_start":1,"column_end":43}},{"value":"/             break;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9097249,"byte_end":9097271,"line_start":85,"line_end":85,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9097272,"byte_end":9097285,"line_start":86,"line_end":86,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9097286,"byte_end":9097295,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/     println!(\"Count hit 50.\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9097296,"byte_end":9097330,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9097331,"byte_end":9097336,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9097337,"byte_end":9097344,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ There are a few things of note here to pay attention to in this example.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9097345,"byte_end":9097421,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/ 1. The mutex is wrapped in an [`Arc`] to allow it to be shared across","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9097422,"byte_end":9097495,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/    threads.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9097496,"byte_end":9097511,"line_start":93,"line_end":93,"column_start":1,"column_end":16}},{"value":"/ 2. Each spawned task obtains a lock and releases it on every iteration.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9097512,"byte_end":9097587,"line_start":94,"line_end":94,"column_start":1,"column_end":76}},{"value":"/ 3. Mutation of the data protected by the Mutex is done by de-referencing","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9097588,"byte_end":9097664,"line_start":95,"line_end":95,"column_start":1,"column_end":77}},{"value":"/    the obtained lock as seen on lines 12 and 19.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9097665,"byte_end":9097717,"line_start":96,"line_end":96,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9097718,"byte_end":9097721,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Tokio's Mutex works in a simple FIFO (first in, first out) style where all","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9097722,"byte_end":9097800,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ calls to [`lock`] complete in the order they were performed. In that way the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9097801,"byte_end":9097881,"line_start":99,"line_end":99,"column_start":1,"column_end":81}},{"value":"/ Mutex is \"fair\" and predictable in how it distributes the locks to inner","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9097882,"byte_end":9097958,"line_start":100,"line_end":100,"column_start":1,"column_end":77}},{"value":"/ data. This is why the output of the program above is an in-order count to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9097959,"byte_end":9098036,"line_start":101,"line_end":101,"column_start":1,"column_end":78}},{"value":"/ 50. Locks are released and reacquired after every iteration, so basically,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9098037,"byte_end":9098115,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ each thread goes to the back of the line after it increments the value once.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9098116,"byte_end":9098196,"line_start":103,"line_end":103,"column_start":1,"column_end":81}},{"value":"/ Finally, since there is only a single valid lock at any given time, there is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9098197,"byte_end":9098277,"line_start":104,"line_end":104,"column_start":1,"column_end":81}},{"value":"/ no possibility of a race condition when mutating the inner value.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9098278,"byte_end":9098347,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9098348,"byte_end":9098351,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ Note that in contrast to [`std::sync::Mutex`], this implementation does not","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9098352,"byte_end":9098431,"line_start":107,"line_end":107,"column_start":1,"column_end":80}},{"value":"/ poison the mutex when a thread holding the [`MutexGuard`] panics. In such a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9098432,"byte_end":9098511,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"/ case, the mutex will be unlocked. If the panic is caught, this might leave","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9098512,"byte_end":9098590,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ the data protected by the mutex in an inconsistent state.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9098591,"byte_end":9098652,"line_start":110,"line_end":110,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9098653,"byte_end":9098656,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@Mutex","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9098657,"byte_end":9098684,"line_start":112,"line_end":112,"column_start":1,"column_end":28}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9098685,"byte_end":9098722,"line_start":113,"line_end":113,"column_start":1,"column_end":38}},{"value":"/ [`Arc`]: struct@std::sync::Arc","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9098723,"byte_end":9098757,"line_start":114,"line_end":114,"column_start":1,"column_end":35}},{"value":"/ [`std::sync::Mutex`]: struct@std::sync::Mutex","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9098758,"byte_end":9098807,"line_start":115,"line_end":115,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9098808,"byte_end":9098845,"line_start":116,"line_end":116,"column_start":1,"column_end":38}},{"value":"/ [`lock`]: method@Mutex::lock","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9098846,"byte_end":9098878,"line_start":117,"line_end":117,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":7257},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9099341,"byte_end":9099351,"line_start":132,"line_end":132,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":7260}],"decl_id":null,"docs":" A handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9098980,"byte_end":9099011,"line_start":124,"line_end":124,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9099012,"byte_end":9099015,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9099016,"byte_end":9099095,"line_start":126,"line_end":126,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally borrows the `Mutex`, so the mutex will not be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9099096,"byte_end":9099171,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ dropped while a guard exists.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9099172,"byte_end":9099205,"line_start":128,"line_end":128,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9099206,"byte_end":9099209,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9099210,"byte_end":9099288,"line_start":130,"line_end":130,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9099289,"byte_end":9099329,"line_start":131,"line_end":131,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":7261},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9100138,"byte_end":9100153,"line_start":151,"line_end":151,"column_start":12,"column_end":27},"name":"OwnedMutexGuard","qualname":"::sync::mutex::OwnedMutexGuard","value":"OwnedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":7263}],"decl_id":null,"docs":" An owned handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ An owned handle to a held `Mutex`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9099396,"byte_end":9099434,"line_start":136,"line_end":136,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9099435,"byte_end":9099438,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This guard is only available from a `Mutex` that is wrapped in an [`Arc`]. It","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9099439,"byte_end":9099520,"line_start":138,"line_end":138,"column_start":1,"column_end":82}},{"value":"/ is identical to `MutexGuard`, except that rather than borrowing the `Mutex`,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9099521,"byte_end":9099601,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"/ it clones the `Arc`, incrementing the reference count. This means that","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9099602,"byte_end":9099676,"line_start":140,"line_end":140,"column_start":1,"column_end":75}},{"value":"/ unlike `MutexGuard`, it will have the `'static` lifetime.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9099677,"byte_end":9099738,"line_start":141,"line_end":141,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9099739,"byte_end":9099742,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9099743,"byte_end":9099822,"line_start":143,"line_end":143,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally keeps a reference-couned pointer to the original","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9099823,"byte_end":9099901,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ `Mutex`, so even if the lock goes away, the guard remains valid.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9099902,"byte_end":9099970,"line_start":145,"line_end":145,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9099971,"byte_end":9099974,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9099975,"byte_end":9100053,"line_start":147,"line_end":147,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9100054,"byte_end":9100094,"line_start":148,"line_end":148,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9100095,"byte_end":9100098,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9100099,"byte_end":9100126,"line_start":150,"line_end":150,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":8096},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9100861,"byte_end":9100873,"line_start":169,"line_end":169,"column_start":12,"column_end":24},"name":"TryLockError","qualname":"::sync::mutex::TryLockError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Mutex::try_lock`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Mutex::try_lock`] function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9100653,"byte_end":9100710,"line_start":163,"line_end":163,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9100711,"byte_end":9100714,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ A `try_lock` operation can only fail if the mutex is already locked.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9100715,"byte_end":9100787,"line_start":165,"line_end":165,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9100788,"byte_end":9100791,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ [`Mutex::try_lock`]: Mutex::try_lock","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9100792,"byte_end":9100832,"line_start":167,"line_end":167,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":7277},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9102089,"byte_end":9102092,"line_start":213,"line_end":213,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9101886,"byte_end":9101944,"line_start":204,"line_end":204,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9101949,"byte_end":9101952,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9101957,"byte_end":9101971,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9101976,"byte_end":9101979,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9101984,"byte_end":9101991,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9101996,"byte_end":9102023,"line_start":209,"line_end":209,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9102028,"byte_end":9102031,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ let lock = Mutex::new(5);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9102036,"byte_end":9102065,"line_start":211,"line_end":211,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9102070,"byte_end":9102077,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7278},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9102717,"byte_end":9102721,"line_start":240,"line_end":240,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub async fn lock<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task\n to yield until the lock has been acquired.\n When the lock has been acquired, function returns a [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9102257,"byte_end":9102303,"line_start":223,"line_end":223,"column_start":5,"column_end":51}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9102308,"byte_end":9102354,"line_start":224,"line_end":224,"column_start":5,"column_end":51}},{"value":"/ When the lock has been acquired, function returns a [`MutexGuard`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9102359,"byte_end":9102430,"line_start":225,"line_end":225,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9102435,"byte_end":9102438,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9102443,"byte_end":9102457,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9102462,"byte_end":9102465,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9102470,"byte_end":9102477,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9102482,"byte_end":9102509,"line_start":230,"line_end":230,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9102514,"byte_end":9102517,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9102522,"byte_end":9102540,"line_start":232,"line_end":232,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9102545,"byte_end":9102566,"line_start":233,"line_end":233,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9102571,"byte_end":9102605,"line_start":234,"line_end":234,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9102610,"byte_end":9102613,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.lock().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9102618,"byte_end":9102657,"line_start":236,"line_end":236,"column_start":5,"column_end":44}},{"value":"/     *n = 2;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9102662,"byte_end":9102677,"line_start":237,"line_end":237,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9102682,"byte_end":9102687,"line_start":238,"line_end":238,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9102692,"byte_end":9102699,"line_start":239,"line_end":239,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7281},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9103748,"byte_end":9103758,"line_start":271,"line_end":271,"column_start":18,"column_end":28},"name":"lock_owned","qualname":"<Mutex<T>>::lock_owned","value":"pub async fn lock_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired. When the lock has been acquired, this returns an\n [`OwnedMutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9102827,"byte_end":9102901,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ been acquired. When the lock has been acquired, this returns an","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9102906,"byte_end":9102973,"line_start":246,"line_end":246,"column_start":5,"column_end":72}},{"value":"/ [`OwnedMutexGuard`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9102978,"byte_end":9103002,"line_start":247,"line_end":247,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9103007,"byte_end":9103010,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::lock`], except that the returned","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9103015,"byte_end":9103088,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ guard references the `Mutex` with an [`Arc`] rather than by borrowing","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9103093,"byte_end":9103166,"line_start":250,"line_end":250,"column_start":5,"column_end":78}},{"value":"/ it. Therefore, the `Mutex` must be wrapped in an `Arc` to call this","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9103171,"byte_end":9103242,"line_start":251,"line_end":251,"column_start":5,"column_end":76}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9103247,"byte_end":9103322,"line_start":252,"line_end":252,"column_start":5,"column_end":80}},{"value":"/ the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9103327,"byte_end":9103369,"line_start":253,"line_end":253,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9103374,"byte_end":9103377,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9103382,"byte_end":9103396,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9103401,"byte_end":9103404,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9103409,"byte_end":9103416,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9103421,"byte_end":9103448,"line_start":258,"line_end":258,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9103453,"byte_end":9103476,"line_start":259,"line_end":259,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9103481,"byte_end":9103484,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9103489,"byte_end":9103507,"line_start":261,"line_end":261,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9103512,"byte_end":9103533,"line_start":262,"line_end":262,"column_start":5,"column_end":26}},{"value":"/     let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9103538,"byte_end":9103582,"line_start":263,"line_end":263,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9103587,"byte_end":9103590,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.clone().lock_owned().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9103595,"byte_end":9103648,"line_start":265,"line_end":265,"column_start":5,"column_end":58}},{"value":"/     *n = 2;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9103653,"byte_end":9103668,"line_start":266,"line_end":266,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9103673,"byte_end":9103678,"line_start":267,"line_end":267,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9103683,"byte_end":9103690,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9103695,"byte_end":9103698,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9103703,"byte_end":9103730,"line_start":270,"line_end":270,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7288},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9104635,"byte_end":9104643,"line_start":301,"line_end":301,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Result<MutexGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the\n lock is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9104167,"byte_end":9104236,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/ lock is currently held somewhere else.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9104241,"byte_end":9104283,"line_start":285,"line_end":285,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9104288,"byte_end":9104291,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9104296,"byte_end":9104330,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9104335,"byte_end":9104349,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9104354,"byte_end":9104357,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9104362,"byte_end":9104369,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9104374,"byte_end":9104401,"line_start":291,"line_end":291,"column_start":5,"column_end":32}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9104406,"byte_end":9104469,"line_start":292,"line_end":292,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9104474,"byte_end":9104477,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(1);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9104482,"byte_end":9104512,"line_start":294,"line_end":294,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9104517,"byte_end":9104520,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.try_lock()?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9104525,"byte_end":9104555,"line_start":296,"line_end":296,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9104560,"byte_end":9104582,"line_start":297,"line_end":297,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9104587,"byte_end":9104599,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9104604,"byte_end":9104611,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9104616,"byte_end":9104623,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7289},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9105764,"byte_end":9105778,"line_start":332,"line_end":332,"column_start":12,"column_end":26},"name":"try_lock_owned","qualname":"<Mutex<T>>::try_lock_owned","value":"pub fn try_lock_owned(Arc<Self>) -> Result<OwnedMutexGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the lock\n is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the lock","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9104852,"byte_end":9104926,"line_start":308,"line_end":308,"column_start":5,"column_end":79}},{"value":"/ is currently held somewhere else.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9104931,"byte_end":9104968,"line_start":309,"line_end":309,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9104973,"byte_end":9104976,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::try_lock`], except that the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9104981,"byte_end":9105049,"line_start":311,"line_end":311,"column_start":5,"column_end":73}},{"value":"/ returned  guard references the `Mutex` with an [`Arc`] rather than by","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9105054,"byte_end":9105127,"line_start":312,"line_end":312,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `Mutex` must be wrapped in an `Arc` to call","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9105132,"byte_end":9105208,"line_start":313,"line_end":313,"column_start":5,"column_end":81}},{"value":"/ this method, and the guard will live for the `'static` lifetime, as it","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9105213,"byte_end":9105287,"line_start":314,"line_end":314,"column_start":5,"column_end":79}},{"value":"/ keeps the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9105292,"byte_end":9105340,"line_start":315,"line_end":315,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9105345,"byte_end":9105348,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9105353,"byte_end":9105387,"line_start":317,"line_end":317,"column_start":5,"column_end":39}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9105392,"byte_end":9105419,"line_start":318,"line_end":318,"column_start":5,"column_end":32}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9105424,"byte_end":9105438,"line_start":319,"line_end":319,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9105443,"byte_end":9105446,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9105451,"byte_end":9105458,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9105463,"byte_end":9105490,"line_start":322,"line_end":322,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9105495,"byte_end":9105518,"line_start":323,"line_end":323,"column_start":5,"column_end":28}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9105523,"byte_end":9105586,"line_start":324,"line_end":324,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9105591,"byte_end":9105594,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9105599,"byte_end":9105639,"line_start":326,"line_end":326,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9105644,"byte_end":9105647,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.clone().try_lock_owned()?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9105652,"byte_end":9105696,"line_start":328,"line_end":328,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9105701,"byte_end":9105723,"line_start":329,"line_end":329,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9105728,"byte_end":9105740,"line_start":330,"line_end":330,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9105745,"byte_end":9105752,"line_start":331,"line_end":331,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7290},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9106336,"byte_end":9106346,"line_start":353,"line_end":353,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.\n # Examples","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9106003,"byte_end":9106057,"line_start":339,"line_end":339,"column_start":5,"column_end":59}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9106062,"byte_end":9106076,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9106081,"byte_end":9106084,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9106089,"byte_end":9106096,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9106101,"byte_end":9106128,"line_start":343,"line_end":343,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9106133,"byte_end":9106136,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9106141,"byte_end":9106159,"line_start":345,"line_end":345,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9106164,"byte_end":9106185,"line_start":346,"line_end":346,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9106190,"byte_end":9106224,"line_start":347,"line_end":347,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9106229,"byte_end":9106232,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.into_inner();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9106237,"byte_end":9106272,"line_start":349,"line_end":349,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9106277,"byte_end":9106302,"line_start":350,"line_end":350,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9106307,"byte_end":9106312,"line_start":351,"line_end":351,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9106317,"byte_end":9106324,"line_start":352,"line_end":352,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8101},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9111376,"byte_end":9111382,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"Notify","qualname":"::sync::notify::Notify","value":"Notify {  }","parent":null,"children":[{"krate":0,"index":8102},{"krate":0,"index":8103}],"decl_id":null,"docs":" Notify a single task to wake up.","sig":null,"attributes":[{"value":"/ Notify a single task to wake up.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9108566,"byte_end":9108602,"line_start":13,"line_end":13,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9108603,"byte_end":9108606,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `Notify` provides a basic mechanism to notify a single task of an event.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9108607,"byte_end":9108683,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ `Notify` itself does not carry any data. Instead, it is to be used to signal","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9108684,"byte_end":9108764,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ another task to perform an operation.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9108765,"byte_end":9108806,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9108807,"byte_end":9108810,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ `Notify` can be thought of as a [`Semaphore`] starting with 0 permits.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9108811,"byte_end":9108885,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ [`notified().await`] waits for a permit to become available, and [`notify()`]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9108886,"byte_end":9108967,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/ sets a permit **if there currently are no available permits**.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9108968,"byte_end":9109034,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9109035,"byte_end":9109038,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The synchronization details of `Notify` are similar to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9109039,"byte_end":9109097,"line_start":23,"line_end":23,"column_start":1,"column_end":59}},{"value":"/ [`thread::park`][park] and [`Thread::unpark`][unpark] from std. A [`Notify`]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9109098,"byte_end":9109178,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ value contains a single permit. [`notified().await`] waits for the permit to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9109179,"byte_end":9109259,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ be made available, consumes the permit, and resumes.  [`notify()`] sets the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9109260,"byte_end":9109339,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ permit, waking a pending task if there is one.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9109340,"byte_end":9109390,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9109391,"byte_end":9109394,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ If `notify()` is called **before** `notfied().await`, then the next call to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9109395,"byte_end":9109474,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ `notified().await` will complete immediately, consuming the permit. Any","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9109475,"byte_end":9109550,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ subsequent calls to `notified().await` will wait for a new permit.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9109551,"byte_end":9109621,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9109622,"byte_end":9109625,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If `notify()` is called **multiple** times before `notified().await`, only a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9109626,"byte_end":9109706,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ **single** permit is stored. The next call to `notified().await` will","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9109707,"byte_end":9109780,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ complete immediately, but the one after will wait for a new permit.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9109781,"byte_end":9109852,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9109853,"byte_end":9109856,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9109857,"byte_end":9109871,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9109872,"byte_end":9109875,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9109876,"byte_end":9109892,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9109893,"byte_end":9109896,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9109897,"byte_end":9109904,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9109905,"byte_end":9109933,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9109934,"byte_end":9109957,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9109958,"byte_end":9109961,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9109962,"byte_end":9109980,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9109981,"byte_end":9110002,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110003,"byte_end":9110048,"line_start":47,"line_end":47,"column_start":1,"column_end":46}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110049,"byte_end":9110086,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110087,"byte_end":9110090,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110091,"byte_end":9110124,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110125,"byte_end":9110162,"line_start":51,"line_end":51,"column_start":1,"column_end":38}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110163,"byte_end":9110209,"line_start":52,"line_end":52,"column_start":1,"column_end":47}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110210,"byte_end":9110221,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110222,"byte_end":9110225,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110226,"byte_end":9110267,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/     notify.notify();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110268,"byte_end":9110292,"line_start":56,"line_end":56,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110293,"byte_end":9110298,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110299,"byte_end":9110306,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110307,"byte_end":9110310,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Unbound mpsc channel.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110311,"byte_end":9110336,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110337,"byte_end":9110340,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110341,"byte_end":9110348,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110349,"byte_end":9110377,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110378,"byte_end":9110381,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110382,"byte_end":9110417,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110418,"byte_end":9110443,"line_start":66,"line_end":66,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110444,"byte_end":9110447,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ struct Channel<T> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110448,"byte_end":9110471,"line_start":68,"line_end":68,"column_start":1,"column_end":24}},{"value":"/     values: Mutex<VecDeque<T>>,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110472,"byte_end":9110507,"line_start":69,"line_end":69,"column_start":1,"column_end":36}},{"value":"/     notify: Notify,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110508,"byte_end":9110531,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110532,"byte_end":9110537,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110538,"byte_end":9110541,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ impl<T> Channel<T> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110542,"byte_end":9110566,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/     pub fn send(&self, value: T) {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110567,"byte_end":9110605,"line_start":74,"line_end":74,"column_start":1,"column_end":39}},{"value":"/         self.values.lock().unwrap()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110606,"byte_end":9110645,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"/             .push_back(value);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110646,"byte_end":9110680,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110681,"byte_end":9110684,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/         // Notify the consumer a value is available","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110685,"byte_end":9110740,"line_start":78,"line_end":78,"column_start":1,"column_end":56}},{"value":"/         self.notify.notify();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110741,"byte_end":9110774,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110775,"byte_end":9110784,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110785,"byte_end":9110788,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     pub async fn recv(&self) -> T {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110789,"byte_end":9110828,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/         loop {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110829,"byte_end":9110847,"line_start":83,"line_end":83,"column_start":1,"column_end":19}},{"value":"/             // Drain values","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110848,"byte_end":9110879,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/             if let Some(value) = self.values.lock().unwrap().pop_front() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110880,"byte_end":9110958,"line_start":85,"line_end":85,"column_start":1,"column_end":79}},{"value":"/                 return value;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110959,"byte_end":9110992,"line_start":86,"line_end":86,"column_start":1,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9110993,"byte_end":9111010,"line_start":87,"line_end":87,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9111011,"byte_end":9111014,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/             // Wait for values to be available","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9111015,"byte_end":9111065,"line_start":89,"line_end":89,"column_start":1,"column_end":51}},{"value":"/             self.notify.notified().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9111066,"byte_end":9111111,"line_start":90,"line_end":90,"column_start":1,"column_end":46}},{"value":"/         }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9111112,"byte_end":9111125,"line_start":91,"line_end":91,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9111126,"byte_end":9111135,"line_start":92,"line_end":92,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9111136,"byte_end":9111141,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9111142,"byte_end":9111149,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9111150,"byte_end":9111153,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [park]: std::thread::park","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9111154,"byte_end":9111183,"line_start":96,"line_end":96,"column_start":1,"column_end":30}},{"value":"/ [unpark]: std::thread::Thread::unpark","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9111184,"byte_end":9111225,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9111226,"byte_end":9111270,"line_start":98,"line_end":98,"column_start":1,"column_end":45}},{"value":"/ [`notify()`]: Notify::notify()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9111271,"byte_end":9111305,"line_start":99,"line_end":99,"column_start":1,"column_end":35}},{"value":"/ [`Semaphore`]: crate::sync::Semaphore","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9111306,"byte_end":9111347,"line_start":100,"line_end":100,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":7358},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9112614,"byte_end":9112617,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"new","qualname":"<Notify>::new","value":"pub fn new() -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9112410,"byte_end":9112466,"line_start":155,"line_end":155,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9112471,"byte_end":9112474,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9112479,"byte_end":9112493,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9112498,"byte_end":9112501,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9112506,"byte_end":9112513,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9112518,"byte_end":9112546,"line_start":160,"line_end":160,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9112551,"byte_end":9112554,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let notify = Notify::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9112559,"byte_end":9112590,"line_start":162,"line_end":162,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9112595,"byte_end":9112602,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7359},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9113689,"byte_end":9113697,"line_start":200,"line_end":200,"column_start":18,"column_end":26},"name":"notified","qualname":"<Notify>::notified","value":"pub async fn notified<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for a notification.","sig":null,"attributes":[{"value":"/ Wait for a notification.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9112759,"byte_end":9112787,"line_start":171,"line_end":171,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9112792,"byte_end":9112795,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Each `Notify` value holds a single permit. If a permit is available from","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9112800,"byte_end":9112876,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ an earlier call to [`notify()`], then `notified().await` will complete","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9112881,"byte_end":9112955,"line_start":174,"line_end":174,"column_start":5,"column_end":79}},{"value":"/ immediately, consuming that permit. Otherwise, `notified().await` waits","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9112960,"byte_end":9113035,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ for a permit to be made available by the next call to `notify()`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9113040,"byte_end":9113109,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9113114,"byte_end":9113117,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ [`notify()`]: Notify::notify","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9113122,"byte_end":9113154,"line_start":178,"line_end":178,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9113159,"byte_end":9113162,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9113167,"byte_end":9113181,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9113186,"byte_end":9113189,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9113194,"byte_end":9113201,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9113206,"byte_end":9113234,"line_start":183,"line_end":183,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9113239,"byte_end":9113262,"line_start":184,"line_end":184,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9113267,"byte_end":9113270,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9113275,"byte_end":9113293,"line_start":186,"line_end":186,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9113298,"byte_end":9113319,"line_start":187,"line_end":187,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9113324,"byte_end":9113369,"line_start":188,"line_end":188,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9113374,"byte_end":9113411,"line_start":189,"line_end":189,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9113416,"byte_end":9113419,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9113424,"byte_end":9113457,"line_start":191,"line_end":191,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9113462,"byte_end":9113499,"line_start":192,"line_end":192,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9113504,"byte_end":9113550,"line_start":193,"line_end":193,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9113555,"byte_end":9113566,"line_start":194,"line_end":194,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9113571,"byte_end":9113574,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9113579,"byte_end":9113620,"line_start":196,"line_end":196,"column_start":5,"column_end":46}},{"value":"/     notify.notify();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9113625,"byte_end":9113649,"line_start":197,"line_end":197,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9113654,"byte_end":9113659,"line_start":198,"line_end":198,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9113664,"byte_end":9113671,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7362},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9115193,"byte_end":9115199,"line_start":248,"line_end":248,"column_start":12,"column_end":18},"name":"notify","qualname":"<Notify>::notify","value":"pub fn notify(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies a waiting task","sig":null,"attributes":[{"value":"/ Notifies a waiting task","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9114034,"byte_end":9114061,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9114066,"byte_end":9114069,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Otherwise, a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9114074,"byte_end":9114145,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ permit is stored in this `Notify` value and the **next** call to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9114150,"byte_end":9114218,"line_start":217,"line_end":217,"column_start":5,"column_end":73}},{"value":"/ [`notified().await`] will complete immediately consuming the permit made","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9114223,"byte_end":9114299,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ available by this call to `notify()`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9114304,"byte_end":9114345,"line_start":219,"line_end":219,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9114350,"byte_end":9114353,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ At most one permit may be stored by `Notify`. Many sequential calls to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9114358,"byte_end":9114432,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ `notify` will result in a single permit being stored. The next call to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9114437,"byte_end":9114511,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ `notified().await` will complete immediately, but the one after that","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9114516,"byte_end":9114588,"line_start":223,"line_end":223,"column_start":5,"column_end":77}},{"value":"/ will wait.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9114593,"byte_end":9114607,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9114612,"byte_end":9114615,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9114620,"byte_end":9114664,"line_start":226,"line_end":226,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9114669,"byte_end":9114672,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9114677,"byte_end":9114691,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9114696,"byte_end":9114699,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9114704,"byte_end":9114711,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9114716,"byte_end":9114744,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9114749,"byte_end":9114772,"line_start":232,"line_end":232,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9114777,"byte_end":9114780,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9114785,"byte_end":9114803,"line_start":234,"line_end":234,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9114808,"byte_end":9114829,"line_start":235,"line_end":235,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9114834,"byte_end":9114879,"line_start":236,"line_end":236,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9114884,"byte_end":9114921,"line_start":237,"line_end":237,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9114926,"byte_end":9114929,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9114934,"byte_end":9114967,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9114972,"byte_end":9115009,"line_start":240,"line_end":240,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9115014,"byte_end":9115060,"line_start":241,"line_end":241,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9115065,"byte_end":9115076,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9115081,"byte_end":9115084,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9115089,"byte_end":9115130,"line_start":244,"line_end":244,"column_start":5,"column_end":46}},{"value":"/     notify.notify();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9115135,"byte_end":9115159,"line_start":245,"line_end":245,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9115164,"byte_end":9115169,"line_start":246,"line_end":246,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9115174,"byte_end":9115181,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":7384},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":7385},{"krate":0,"index":7386},{"krate":0,"index":7387},{"krate":0,"index":7388},{"krate":0,"index":7389},{"krate":0,"index":7390},{"krate":0,"index":7391},{"krate":0,"index":7392},{"krate":0,"index":7393},{"krate":0,"index":7394},{"krate":0,"index":15541},{"krate":0,"index":7395},{"krate":0,"index":15543},{"krate":0,"index":7396},{"krate":0,"index":7397},{"krate":0,"index":15545},{"krate":0,"index":7398},{"krate":0,"index":15547},{"krate":0,"index":7399},{"krate":0,"index":7400},{"krate":0,"index":7401},{"krate":0,"index":7402},{"krate":0,"index":8130},{"krate":0,"index":8133},{"krate":0,"index":8136},{"krate":0,"index":8139},{"krate":0,"index":7403},{"krate":0,"index":7411},{"krate":0,"index":7412},{"krate":0,"index":8167},{"krate":0,"index":8171},{"krate":0,"index":8170},{"krate":0,"index":7418},{"krate":0,"index":7420},{"krate":0,"index":7433},{"krate":0,"index":7436},{"krate":0,"index":7440},{"krate":0,"index":7443},{"krate":0,"index":7447},{"krate":0,"index":7471},{"krate":0,"index":7473},{"krate":0,"index":7475},{"krate":0,"index":7479},{"krate":0,"index":7483},{"krate":0,"index":7484},{"krate":0,"index":7485},{"krate":0,"index":7486},{"krate":0,"index":7487},{"krate":0,"index":7501}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21247,"byte_end":21271,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A channel for sending a single message between asynchronous tasks.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9126975,"byte_end":9127045,"line_start":3,"line_end":3,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":8130},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9127524,"byte_end":9127530,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":8132}],"decl_id":null,"docs":" Sends a value to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Sends a value to the associated `Receiver`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9127377,"byte_end":9127424,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9127425,"byte_end":9127428,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9127429,"byte_end":9127495,"line_start":19,"line_end":19,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":8136},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9127722,"byte_end":9127730,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":8138}],"decl_id":null,"docs":" Receive a value from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive a value from the associated `Sender`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9127573,"byte_end":9127622,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9127623,"byte_end":9127626,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9127627,"byte_end":9127693,"line_start":27,"line_end":27,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":7403},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9127781,"byte_end":9127786,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::oneshot::error","value":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":7404},{"krate":0,"index":8142},{"krate":0,"index":8152},{"krate":0,"index":8149},{"krate":0,"index":8150},{"krate":0,"index":8145},{"krate":0,"index":8146},{"krate":0,"index":8154},{"krate":0,"index":8165},{"krate":0,"index":8162},{"krate":0,"index":8163},{"krate":0,"index":8159},{"krate":0,"index":8160},{"krate":0,"index":7405},{"krate":0,"index":7407},{"krate":0,"index":7408},{"krate":0,"index":7410}],"decl_id":null,"docs":" Oneshot error types\n","sig":null,"attributes":[{"value":"/ Oneshot error types","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9127793,"byte_end":9127816,"line_start":34,"line_end":34,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":8142},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9127958,"byte_end":9127967,"line_start":40,"line_end":40,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::oneshot::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Future` implementation for `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Future` implementation for `Receiver`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9127841,"byte_end":9127906,"line_start":38,"line_end":38,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8155},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9128189,"byte_end":9128194,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::oneshot::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":8154},"children":[],"decl_id":null,"docs":" The send half of the channel has not yet sent a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel has not yet sent a value.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9128122,"byte_end":9128180,"line_start":45,"line_end":45,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8157},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9128283,"byte_end":9128289,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::oneshot::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":8154},"children":[],"decl_id":null,"docs":" The send half of the channel was dropped without sending a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel was dropped without sending a value.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9128205,"byte_end":9128274,"line_start":48,"line_end":48,"column_start":9,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":8154},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9128099,"byte_end":9128111,"line_start":44,"line_end":44,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::oneshot::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The send half of the channel has not yet sent a value.\n    Empty,\n\n    /// The send half of the channel was dropped without sending a value.\n    Closed,\n}","parent":null,"children":[{"krate":0,"index":8155},{"krate":0,"index":8157}],"decl_id":null,"docs":" Error returned by the `try_recv` function on `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `try_recv` function on `Receiver`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9127989,"byte_end":9128049,"line_start":42,"line_end":42,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":7418},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9130286,"byte_end":9130293,"line_start":126,"line_end":126,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a new one-shot channel for sending single values across asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Create a new one-shot channel for sending single values across asynchronous","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9129471,"byte_end":9129550,"line_start":96,"line_end":96,"column_start":1,"column_end":80}},{"value":"/ tasks.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9129551,"byte_end":9129561,"line_start":97,"line_end":97,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9129562,"byte_end":9129565,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ The function returns separate \"send\" and \"receive\" handles. The `Sender`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9129566,"byte_end":9129642,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ handle is used by the producer to send the value. The `Receiver` handle is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9129643,"byte_end":9129721,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/ used by the consumer to receive the value.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9129722,"byte_end":9129768,"line_start":101,"line_end":101,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9129769,"byte_end":9129772,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9129773,"byte_end":9129819,"line_start":103,"line_end":103,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9129820,"byte_end":9129823,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9129824,"byte_end":9129838,"line_start":105,"line_end":105,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9129839,"byte_end":9129842,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9129843,"byte_end":9129850,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9129851,"byte_end":9129880,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9129881,"byte_end":9129884,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9129885,"byte_end":9129903,"line_start":110,"line_end":110,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9129904,"byte_end":9129925,"line_start":111,"line_end":111,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9129926,"byte_end":9129968,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9129969,"byte_end":9129972,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9129973,"byte_end":9130006,"line_start":114,"line_end":114,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9130007,"byte_end":9130047,"line_start":115,"line_end":115,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9130048,"byte_end":9130097,"line_start":116,"line_end":116,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9130098,"byte_end":9130111,"line_start":117,"line_end":117,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9130112,"byte_end":9130123,"line_start":118,"line_end":118,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9130124,"byte_end":9130127,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9130128,"byte_end":9130152,"line_start":120,"line_end":120,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9130153,"byte_end":9130200,"line_start":121,"line_end":121,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9130201,"byte_end":9130254,"line_start":122,"line_end":122,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9130255,"byte_end":9130264,"line_start":123,"line_end":123,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9130265,"byte_end":9130270,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9130271,"byte_end":9130278,"line_start":125,"line_end":125,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7422},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9132329,"byte_end":9132333,"line_start":184,"line_end":184,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value on this channel, returning it back if it could\n not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value on this channel, returning it back if it could","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9130758,"byte_end":9130833,"line_start":144,"line_end":144,"column_start":5,"column_end":80}},{"value":"/ not be sent.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9130838,"byte_end":9130854,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9130859,"byte_end":9130862,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This method consumes `self` as only one value may ever be sent on a oneshot","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9130867,"byte_end":9130946,"line_start":147,"line_end":147,"column_start":5,"column_end":84}},{"value":"/ channel. It is not marked async because sending a message to an oneshot","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9130951,"byte_end":9131026,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ channel never requires any form of waiting.  Because of this, the `send`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9131031,"byte_end":9131107,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/ method can be used in both synchronous and asynchronous code without","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9131112,"byte_end":9131184,"line_start":150,"line_end":150,"column_start":5,"column_end":77}},{"value":"/ problems.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9131189,"byte_end":9131202,"line_start":151,"line_end":151,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9131207,"byte_end":9131210,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9131215,"byte_end":9131291,"line_start":153,"line_end":153,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9131296,"byte_end":9131372,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been deallocated. Note that a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9131377,"byte_end":9131449,"line_start":155,"line_end":155,"column_start":5,"column_end":77}},{"value":"/ return value of `Err` means that the data will never be received, but","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9131454,"byte_end":9131527,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ a return value of `Ok` does *not* mean that the data will be received.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9131532,"byte_end":9131606,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ It is possible for the corresponding receiver to hang up immediately","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9131611,"byte_end":9131683,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ after this function returns `Ok`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9131688,"byte_end":9131725,"line_start":159,"line_end":159,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9131730,"byte_end":9131733,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9131738,"byte_end":9131752,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9131757,"byte_end":9131760,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Send a value to another task","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9131765,"byte_end":9131797,"line_start":163,"line_end":163,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9131802,"byte_end":9131805,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9131810,"byte_end":9131817,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9131822,"byte_end":9131851,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9131856,"byte_end":9131859,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9131864,"byte_end":9131882,"line_start":168,"line_end":168,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9131887,"byte_end":9131908,"line_start":169,"line_end":169,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9131913,"byte_end":9131955,"line_start":170,"line_end":170,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9131960,"byte_end":9131963,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9131968,"byte_end":9132001,"line_start":172,"line_end":172,"column_start":5,"column_end":38}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9132006,"byte_end":9132046,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9132051,"byte_end":9132100,"line_start":174,"line_end":174,"column_start":5,"column_end":54}},{"value":"/         }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9132105,"byte_end":9132118,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9132123,"byte_end":9132134,"line_start":176,"line_end":176,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9132139,"byte_end":9132142,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/     match rx.await {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9132147,"byte_end":9132171,"line_start":178,"line_end":178,"column_start":5,"column_end":29}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9132176,"byte_end":9132223,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9132228,"byte_end":9132281,"line_start":180,"line_end":180,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9132286,"byte_end":9132295,"line_start":181,"line_end":181,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9132300,"byte_end":9132305,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9132310,"byte_end":9132317,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7425},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9132734,"byte_end":9132745,"line_start":201,"line_end":201,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Sender<T>>::poll_closed","value":"pub fn poll_closed(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7427},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135987,"byte_end":9135993,"line_start":316,"line_end":316,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the associated [`Receiver`] handle to close.","sig":null,"attributes":[{"value":"/ Waits for the associated [`Receiver`] handle to close.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134102,"byte_end":9134160,"line_start":249,"line_end":249,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134165,"byte_end":9134168,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134173,"byte_end":9134247,"line_start":251,"line_end":251,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134252,"byte_end":9134286,"line_start":252,"line_end":252,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134291,"byte_end":9134294,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ This function is useful when paired with `select!` to abort a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134299,"byte_end":9134364,"line_start":254,"line_end":254,"column_start":5,"column_end":70}},{"value":"/ computation when the receiver is no longer interested in the result.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134369,"byte_end":9134441,"line_start":255,"line_end":255,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134446,"byte_end":9134449,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134454,"byte_end":9134466,"line_start":257,"line_end":257,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134471,"byte_end":9134474,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Returns a `Future` which must be awaited on.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134479,"byte_end":9134527,"line_start":259,"line_end":259,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134532,"byte_end":9134535,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134540,"byte_end":9134566,"line_start":261,"line_end":261,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134571,"byte_end":9134601,"line_start":262,"line_end":262,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134606,"byte_end":9134609,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134614,"byte_end":9134628,"line_start":264,"line_end":264,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134633,"byte_end":9134636,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134641,"byte_end":9134656,"line_start":266,"line_end":266,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134661,"byte_end":9134664,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134669,"byte_end":9134676,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134681,"byte_end":9134710,"line_start":269,"line_end":269,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134715,"byte_end":9134718,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134723,"byte_end":9134741,"line_start":271,"line_end":271,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134746,"byte_end":9134767,"line_start":272,"line_end":272,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel::<()>();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134772,"byte_end":9134824,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134829,"byte_end":9134832,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134837,"byte_end":9134870,"line_start":275,"line_end":275,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134875,"byte_end":9134896,"line_start":276,"line_end":276,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134901,"byte_end":9134912,"line_start":277,"line_end":277,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134917,"byte_end":9134920,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/     tx.closed().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134925,"byte_end":9134951,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9134956,"byte_end":9134997,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135002,"byte_end":9135007,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135012,"byte_end":9135019,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135024,"byte_end":9135027,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ Paired with select","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135032,"byte_end":9135054,"line_start":284,"line_end":284,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135059,"byte_end":9135062,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135067,"byte_end":9135074,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135079,"byte_end":9135108,"line_start":287,"line_end":287,"column_start":5,"column_end":34}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135113,"byte_end":9135151,"line_start":288,"line_end":288,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135156,"byte_end":9135159,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ use futures::{select, FutureExt};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135164,"byte_end":9135201,"line_start":290,"line_end":290,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135206,"byte_end":9135209,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ async fn compute() -> String {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135214,"byte_end":9135248,"line_start":292,"line_end":292,"column_start":5,"column_end":39}},{"value":"/     // Complex computation returning a `String`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135253,"byte_end":9135304,"line_start":293,"line_end":293,"column_start":5,"column_end":56}},{"value":"/ # \"hello\".to_string()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135309,"byte_end":9135334,"line_start":294,"line_end":294,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135339,"byte_end":9135344,"line_start":295,"line_end":295,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135349,"byte_end":9135352,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135357,"byte_end":9135375,"line_start":297,"line_end":297,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135380,"byte_end":9135401,"line_start":298,"line_end":298,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135406,"byte_end":9135452,"line_start":299,"line_end":299,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135457,"byte_end":9135460,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135465,"byte_end":9135498,"line_start":301,"line_end":301,"column_start":5,"column_end":38}},{"value":"/         select! {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135503,"byte_end":9135524,"line_start":302,"line_end":302,"column_start":5,"column_end":26}},{"value":"/             _ = tx.closed().fuse() => {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135529,"byte_end":9135572,"line_start":303,"line_end":303,"column_start":5,"column_end":48}},{"value":"/                 // The receiver dropped, no need to do any further work","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135577,"byte_end":9135652,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135657,"byte_end":9135674,"line_start":305,"line_end":305,"column_start":5,"column_end":22}},{"value":"/             value = compute().fuse() => {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135679,"byte_end":9135724,"line_start":306,"line_end":306,"column_start":5,"column_end":50}},{"value":"/                 tx.send(value).unwrap()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135729,"byte_end":9135772,"line_start":307,"line_end":307,"column_start":5,"column_end":48}},{"value":"/             }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135777,"byte_end":9135794,"line_start":308,"line_end":308,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135799,"byte_end":9135812,"line_start":309,"line_end":309,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135817,"byte_end":9135828,"line_start":310,"line_end":310,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135833,"byte_end":9135836,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/     // Wait for up to 10 seconds","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135841,"byte_end":9135877,"line_start":312,"line_end":312,"column_start":5,"column_end":41}},{"value":"/     let _ = time::timeout(Duration::from_secs(10), rx).await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135882,"byte_end":9135947,"line_start":313,"line_end":313,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135952,"byte_end":9135957,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9135962,"byte_end":9135969,"line_start":315,"line_end":315,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7432},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9136863,"byte_end":9136872,"line_start":349,"line_end":349,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the associated [`Receiver`] handle has been dropped.","sig":null,"attributes":[{"value":"/ Returns `true` if the associated [`Receiver`] handle has been dropped.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9136104,"byte_end":9136178,"line_start":322,"line_end":322,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9136183,"byte_end":9136186,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9136191,"byte_end":9136265,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9136270,"byte_end":9136304,"line_start":325,"line_end":325,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9136309,"byte_end":9136312,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ If `true` is returned, a call to `send` will always result in an error.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9136317,"byte_end":9136392,"line_start":327,"line_end":327,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9136397,"byte_end":9136400,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9136405,"byte_end":9136431,"line_start":329,"line_end":329,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9136436,"byte_end":9136466,"line_start":330,"line_end":330,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9136471,"byte_end":9136474,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9136479,"byte_end":9136493,"line_start":332,"line_end":332,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9136498,"byte_end":9136501,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9136506,"byte_end":9136513,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9136518,"byte_end":9136547,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9136552,"byte_end":9136555,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9136560,"byte_end":9136578,"line_start":337,"line_end":337,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9136583,"byte_end":9136604,"line_start":338,"line_end":338,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9136609,"byte_end":9136651,"line_start":339,"line_end":339,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9136656,"byte_end":9136659,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9136664,"byte_end":9136697,"line_start":341,"line_end":341,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9136702,"byte_end":9136705,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/     drop(rx);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9136710,"byte_end":9136727,"line_start":343,"line_end":343,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9136732,"byte_end":9136735,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9136740,"byte_end":9136772,"line_start":345,"line_end":345,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9136777,"byte_end":9136829,"line_start":346,"line_end":346,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9136834,"byte_end":9136839,"line_start":347,"line_end":347,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9136844,"byte_end":9136851,"line_start":348,"line_end":348,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7438},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138850,"byte_end":9138855,"line_start":422,"line_end":422,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Prevents the associated [`Sender`] handle from sending a value.","sig":null,"attributes":[{"value":"/ Prevents the associated [`Sender`] handle from sending a value.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9137212,"byte_end":9137279,"line_start":366,"line_end":366,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9137284,"byte_end":9137287,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after calling `close` is guaranteed","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9137292,"byte_end":9137366,"line_start":368,"line_end":368,"column_start":5,"column_end":79}},{"value":"/ to fail. After calling `close`, [`try_recv`] should be called to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9137371,"byte_end":9137439,"line_start":369,"line_end":369,"column_start":5,"column_end":73}},{"value":"/ receive a value if one was sent **before** the call to `close`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9137444,"byte_end":9137510,"line_start":370,"line_end":370,"column_start":5,"column_end":71}},{"value":"/ completed.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9137515,"byte_end":9137529,"line_start":371,"line_end":371,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9137534,"byte_end":9137537,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This function is useful to perform a graceful shutdown and ensure that a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9137542,"byte_end":9137618,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ value will not be sent into the channel and never received.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9137623,"byte_end":9137686,"line_start":374,"line_end":374,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9137691,"byte_end":9137694,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9137699,"byte_end":9137721,"line_start":376,"line_end":376,"column_start":5,"column_end":27}},{"value":"/ [`try_recv`]: Receiver::try_recv","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9137726,"byte_end":9137762,"line_start":377,"line_end":377,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9137767,"byte_end":9137770,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9137775,"byte_end":9137789,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9137794,"byte_end":9137797,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Prevent a value from being sent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9137802,"byte_end":9137837,"line_start":381,"line_end":381,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9137842,"byte_end":9137845,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9137850,"byte_end":9137857,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9137862,"byte_end":9137891,"line_start":384,"line_end":384,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9137896,"byte_end":9137946,"line_start":385,"line_end":385,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9137951,"byte_end":9137954,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9137959,"byte_end":9137977,"line_start":387,"line_end":387,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9137982,"byte_end":9138003,"line_start":388,"line_end":388,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138008,"byte_end":9138054,"line_start":389,"line_end":389,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138059,"byte_end":9138062,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138067,"byte_end":9138100,"line_start":391,"line_end":391,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138105,"byte_end":9138108,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138113,"byte_end":9138132,"line_start":393,"line_end":393,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138137,"byte_end":9138140,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138145,"byte_end":9138177,"line_start":395,"line_end":395,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138182,"byte_end":9138234,"line_start":396,"line_end":396,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138239,"byte_end":9138242,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138247,"byte_end":9138276,"line_start":398,"line_end":398,"column_start":5,"column_end":34}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138281,"byte_end":9138324,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138329,"byte_end":9138361,"line_start":400,"line_end":400,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138366,"byte_end":9138375,"line_start":401,"line_end":401,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138380,"byte_end":9138385,"line_start":402,"line_end":402,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138390,"byte_end":9138397,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138402,"byte_end":9138405,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Receive a value sent **before** calling `close`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138410,"byte_end":9138461,"line_start":405,"line_end":405,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138466,"byte_end":9138469,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138474,"byte_end":9138481,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138486,"byte_end":9138515,"line_start":408,"line_end":408,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138520,"byte_end":9138523,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138528,"byte_end":9138546,"line_start":410,"line_end":410,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138551,"byte_end":9138572,"line_start":411,"line_end":411,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138577,"byte_end":9138623,"line_start":412,"line_end":412,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138628,"byte_end":9138631,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.send(\"will receive\").is_ok());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138636,"byte_end":9138685,"line_start":414,"line_end":414,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138690,"byte_end":9138693,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138698,"byte_end":9138717,"line_start":416,"line_end":416,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138722,"byte_end":9138725,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/     let msg = rx.try_recv().unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138730,"byte_end":9138771,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(msg, \"will receive\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138776,"byte_end":9138816,"line_start":419,"line_end":419,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138821,"byte_end":9138826,"line_start":420,"line_end":420,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138831,"byte_end":9138838,"line_start":421,"line_end":421,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7439},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140838,"byte_end":9140846,"line_start":490,"line_end":490,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to receive a value.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138953,"byte_end":9138985,"line_start":427,"line_end":427,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138990,"byte_end":9138993,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ If a pending value exists in the channel, it is returned. If no value","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9138998,"byte_end":9139071,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/ has been sent, the current task **will not** be registered for","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9139076,"byte_end":9139142,"line_start":430,"line_end":430,"column_start":5,"column_end":71}},{"value":"/ future notification.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9139147,"byte_end":9139171,"line_start":431,"line_end":431,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9139176,"byte_end":9139179,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This function is useful to call from outside the context of an","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9139184,"byte_end":9139250,"line_start":433,"line_end":433,"column_start":5,"column_end":71}},{"value":"/ asynchronous task.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9139255,"byte_end":9139277,"line_start":434,"line_end":434,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9139282,"byte_end":9139285,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9139290,"byte_end":9139302,"line_start":436,"line_end":436,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9139307,"byte_end":9139310,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ - `Ok(T)` if a value is pending in the channel.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9139315,"byte_end":9139366,"line_start":438,"line_end":438,"column_start":5,"column_end":56}},{"value":"/ - `Err(TryRecvError::Empty)` if no value has been sent yet.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9139371,"byte_end":9139434,"line_start":439,"line_end":439,"column_start":5,"column_end":68}},{"value":"/ - `Err(TryRecvError::Closed)` if the sender has dropped without sending","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9139439,"byte_end":9139514,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/   a value.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9139519,"byte_end":9139533,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9139538,"byte_end":9139541,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9139546,"byte_end":9139560,"line_start":443,"line_end":443,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9139565,"byte_end":9139568,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ `try_recv` before a value is sent, then after.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9139573,"byte_end":9139623,"line_start":445,"line_end":445,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9139628,"byte_end":9139631,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9139636,"byte_end":9139643,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9139648,"byte_end":9139677,"line_start":448,"line_end":448,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9139682,"byte_end":9139732,"line_start":449,"line_end":449,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9139737,"byte_end":9139740,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9139745,"byte_end":9139763,"line_start":451,"line_end":451,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9139768,"byte_end":9139789,"line_start":452,"line_end":452,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9139794,"byte_end":9139840,"line_start":453,"line_end":453,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9139845,"byte_end":9139848,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9139853,"byte_end":9139882,"line_start":455,"line_end":455,"column_start":5,"column_end":34}},{"value":"/         // The channel is currently empty","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9139887,"byte_end":9139932,"line_start":456,"line_end":456,"column_start":5,"column_end":50}},{"value":"/         Err(TryRecvError::Empty) => {}","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9139937,"byte_end":9139979,"line_start":457,"line_end":457,"column_start":5,"column_end":47}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9139984,"byte_end":9140016,"line_start":458,"line_end":458,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140021,"byte_end":9140030,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140035,"byte_end":9140038,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/     // Send a value","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140043,"byte_end":9140066,"line_start":461,"line_end":461,"column_start":5,"column_end":28}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140071,"byte_end":9140105,"line_start":462,"line_end":462,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140110,"byte_end":9140113,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140118,"byte_end":9140147,"line_start":464,"line_end":464,"column_start":5,"column_end":34}},{"value":"/         Ok(value) => assert_eq!(value, \"hello\"),","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140152,"byte_end":9140204,"line_start":465,"line_end":465,"column_start":5,"column_end":57}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140209,"byte_end":9140241,"line_start":466,"line_end":466,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140246,"byte_end":9140255,"line_start":467,"line_end":467,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140260,"byte_end":9140265,"line_start":468,"line_end":468,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140270,"byte_end":9140277,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140282,"byte_end":9140285,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ `try_recv` when the sender dropped before sending a value","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140290,"byte_end":9140351,"line_start":471,"line_end":471,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140356,"byte_end":9140359,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140364,"byte_end":9140371,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140376,"byte_end":9140405,"line_start":474,"line_end":474,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140410,"byte_end":9140460,"line_start":475,"line_end":475,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140465,"byte_end":9140468,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140473,"byte_end":9140491,"line_start":477,"line_end":477,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140496,"byte_end":9140517,"line_start":478,"line_end":478,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140522,"byte_end":9140574,"line_start":479,"line_end":479,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140579,"byte_end":9140582,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140587,"byte_end":9140604,"line_start":481,"line_end":481,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140609,"byte_end":9140612,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140617,"byte_end":9140646,"line_start":483,"line_end":483,"column_start":5,"column_end":34}},{"value":"/         // The channel will never receive a value.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140651,"byte_end":9140705,"line_start":484,"line_end":484,"column_start":5,"column_end":59}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140710,"byte_end":9140753,"line_start":485,"line_end":485,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140758,"byte_end":9140790,"line_start":486,"line_end":486,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140795,"byte_end":9140804,"line_start":487,"line_end":487,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140809,"byte_end":9140814,"line_start":488,"line_end":488,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9140819,"byte_end":9140826,"line_start":489,"line_end":489,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8234},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9209337,"byte_end":9209346,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::sync::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":8235}],"decl_id":null,"docs":" Counting semaphore performing asynchronous permit aquisition.","sig":null,"attributes":[{"value":"/ Counting semaphore performing asynchronous permit aquisition.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9208686,"byte_end":9208751,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9208752,"byte_end":9208755,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ A semaphore maintains a set of permits. Permits are used to synchronize","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9208756,"byte_end":9208831,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ access to a shared resource. A semaphore differs from a mutex in that it","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9208832,"byte_end":9208908,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ can allow more than one concurrent caller to access the shared resource at a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9208909,"byte_end":9208989,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ time.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9208990,"byte_end":9208999,"line_start":9,"line_end":9,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9209000,"byte_end":9209003,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ When `acquire` is called and the semaphore has remaining permits, the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9209004,"byte_end":9209077,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ function immediately returns a permit. However, if no remaining permits are","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9209078,"byte_end":9209157,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ available, `acquire` (asynchronously) waits until an outstanding permit is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9209158,"byte_end":9209236,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ dropped. At this point, the freed permit is assigned to the caller.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9209237,"byte_end":9209308,"line_start":14,"line_end":14,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":8238},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9209595,"byte_end":9209610,"line_start":28,"line_end":28,"column_start":12,"column_end":27},"name":"SemaphorePermit","qualname":"::sync::semaphore::SemaphorePermit","value":"SemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":8240},{"krate":0,"index":8241}],"decl_id":null,"docs":" A permit from the semaphore.","sig":null,"attributes":[{"value":"/ A permit from the semaphore.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9209411,"byte_end":9209443,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9209444,"byte_end":9209447,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire`] method.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9209448,"byte_end":9209499,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9209500,"byte_end":9209503,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`acquire`]: crate::sync::Semaphore::acquire()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9209504,"byte_end":9209554,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"must_use","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9209555,"byte_end":9209566,"line_start":26,"line_end":26,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8245},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9209871,"byte_end":9209891,"line_start":40,"line_end":40,"column_start":12,"column_end":32},"name":"OwnedSemaphorePermit","qualname":"::sync::semaphore::OwnedSemaphorePermit","value":"OwnedSemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":8246},{"krate":0,"index":8247}],"decl_id":null,"docs":" An owned permit from the semaphore.","sig":null,"attributes":[{"value":"/ An owned permit from the semaphore.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9209662,"byte_end":9209701,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9209702,"byte_end":9209705,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire_owned`] method.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9209706,"byte_end":9209763,"line_start":35,"line_end":35,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9209764,"byte_end":9209767,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`acquire_owned`]: crate::sync::Semaphore::acquire_owned()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9209768,"byte_end":9209830,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"must_use","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9209831,"byte_end":9209842,"line_start":38,"line_end":38,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8250},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9210187,"byte_end":9210202,"line_start":52,"line_end":52,"column_start":12,"column_end":27},"name":"TryAcquireError","qualname":"::sync::semaphore::TryAcquireError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Semaphore::try_acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::try_acquire`] function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9209940,"byte_end":9210004,"line_start":45,"line_end":45,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9210005,"byte_end":9210008,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ A `try_acquire` operation can only fail if the semaphore has no available","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9210009,"byte_end":9210086,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/ permits.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9210087,"byte_end":9210099,"line_start":48,"line_end":48,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9210100,"byte_end":9210103,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore::try_acquire`]: Semaphore::try_acquire","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9210104,"byte_end":9210158,"line_start":50,"line_end":50,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":7736},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9210756,"byte_end":9210759,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<Semaphore>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9210681,"byte_end":9210744,"line_start":70,"line_end":70,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7737},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9210935,"byte_end":9210952,"line_start":78,"line_end":78,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<Semaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.\n","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9210871,"byte_end":9210923,"line_start":77,"line_end":77,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":7738},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9211199,"byte_end":9211210,"line_start":85,"line_end":85,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<Semaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9211022,"byte_end":9211064,"line_start":82,"line_end":82,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9211069,"byte_end":9211072,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function will panic if the limit is exceeded.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9211077,"byte_end":9211187,"line_start":84,"line_end":84,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":7739},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9211330,"byte_end":9211337,"line_start":90,"line_end":90,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"pub async fn acquire<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires permit from the semaphore.\n","sig":null,"attributes":[{"value":"/ Acquires permit from the semaphore.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9211273,"byte_end":9211312,"line_start":89,"line_end":89,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":7742},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9211573,"byte_end":9211584,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"pub fn try_acquire(&Self) -> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.\n","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9211512,"byte_end":9211561,"line_start":98,"line_end":98,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":7743},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9212045,"byte_end":9212058,"line_start":114,"line_end":114,"column_start":18,"column_end":31},"name":"acquire_owned","qualname":"<Semaphore>::acquire_owned","value":"pub async fn acquire_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires permit from the semaphore.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9211867,"byte_end":9211906,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9211911,"byte_end":9211914,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9211919,"byte_end":9211987,"line_start":111,"line_end":111,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9211992,"byte_end":9211995,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9212000,"byte_end":9212027,"line_start":113,"line_end":113,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7746},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9212438,"byte_end":9212455,"line_start":127,"line_end":127,"column_start":12,"column_end":29},"name":"try_acquire_owned","qualname":"<Semaphore>::try_acquire_owned","value":"pub fn try_acquire_owned(Arc<Self>)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9212256,"byte_end":9212305,"line_start":122,"line_end":122,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9212310,"byte_end":9212313,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9212318,"byte_end":9212386,"line_start":124,"line_end":124,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9212391,"byte_end":9212394,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9212399,"byte_end":9212426,"line_start":126,"line_end":126,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7749},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9212970,"byte_end":9212976,"line_start":142,"line_end":142,"column_start":12,"column_end":18},"name":"forget","qualname":"<SemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9212795,"byte_end":9212865,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9212870,"byte_end":9212939,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9212944,"byte_end":9212958,"line_start":141,"line_end":141,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":7751},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9213231,"byte_end":9213237,"line_start":151,"line_end":151,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9213056,"byte_end":9213126,"line_start":148,"line_end":148,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9213131,"byte_end":9213200,"line_start":149,"line_end":149,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9213205,"byte_end":9213219,"line_start":150,"line_end":150,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":8255},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9216260,"byte_end":9216266,"line_start":71,"line_end":71,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":8257},{"krate":0,"index":8258}],"decl_id":null,"docs":" An asynchronous reader-writer lock","sig":null,"attributes":[{"value":"/ An asynchronous reader-writer lock","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9213730,"byte_end":9213768,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9213769,"byte_end":9213772,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9213773,"byte_end":9213850,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9213851,"byte_end":9213930,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9213931,"byte_end":9214010,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9214011,"byte_end":9214069,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9214070,"byte_end":9214073,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ In comparison, a [`Mutex`] does not distinguish between readers or writers","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9214074,"byte_end":9214152,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ that acquire the lock, therefore causing any tasks waiting for the lock to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9214153,"byte_end":9214231,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ become available to yield. An `RwLock` will allow any number of readers to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9214232,"byte_end":9214310,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ acquire the lock as long as a writer is not holding the lock.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9214311,"byte_end":9214376,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9214377,"byte_end":9214380,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The priority policy of Tokio's read-write lock is _fair_ (or","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9214381,"byte_end":9214445,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/ [_write-preferring_]), in order to ensure that readers cannot starve","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9214446,"byte_end":9214518,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/ writers. Fairness is ensured using a first-in, first-out queue for the tasks","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9214519,"byte_end":9214599,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ awaiting the lock; if a task that wishes to acquire the write lock is at the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9214600,"byte_end":9214680,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ head of the queue, read locks will not be given out until the write lock has","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9214681,"byte_end":9214761,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ been released. This is in contrast to the Rust standard library's","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9214762,"byte_end":9214831,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ `std::sync::RwLock`, where the priority policy is dependent on the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9214832,"byte_end":9214902,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ operating system's implementation.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9214903,"byte_end":9214941,"line_start":30,"line_end":30,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9214942,"byte_end":9214945,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9214946,"byte_end":9215023,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies [`Send`] to be shared across threads. The RAII guards","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215024,"byte_end":9215109,"line_start":33,"line_end":33,"column_start":1,"column_end":86}},{"value":"/ returned from the locking methods implement [`Deref`](trait@std::ops::Deref)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215110,"byte_end":9215190,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ (and [`DerefMut`](trait@std::ops::DerefMut)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215191,"byte_end":9215238,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/ for the `write` methods) to allow access to the content of the lock.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215239,"byte_end":9215311,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215312,"byte_end":9215315,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215316,"byte_end":9215330,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215331,"byte_end":9215334,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215335,"byte_end":9215342,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215343,"byte_end":9215371,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215372,"byte_end":9215375,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215376,"byte_end":9215394,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215395,"byte_end":9215416,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"/     let lock = RwLock::new(5);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215417,"byte_end":9215451,"line_start":45,"line_end":45,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215452,"byte_end":9215455,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     // many reader locks can be held at once","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215456,"byte_end":9215504,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/     {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215505,"byte_end":9215514,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/         let r1 = lock.read().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215515,"byte_end":9215554,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/         let r2 = lock.read().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215555,"byte_end":9215594,"line_start":50,"line_end":50,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*r1, 5);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215595,"byte_end":9215626,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/         assert_eq!(*r2, 5);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215627,"byte_end":9215658,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/     } // read locks are dropped at this point","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215659,"byte_end":9215708,"line_start":53,"line_end":53,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215709,"byte_end":9215712,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     // only one write lock may be held, however","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215713,"byte_end":9215764,"line_start":55,"line_end":55,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215765,"byte_end":9215774,"line_start":56,"line_end":56,"column_start":1,"column_end":10}},{"value":"/         let mut w = lock.write().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215775,"byte_end":9215818,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/         *w += 1;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215819,"byte_end":9215839,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/         assert_eq!(*w, 6);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215840,"byte_end":9215870,"line_start":59,"line_end":59,"column_start":1,"column_end":31}},{"value":"/     } // write lock is dropped here","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215871,"byte_end":9215910,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215911,"byte_end":9215916,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215917,"byte_end":9215924,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215925,"byte_end":9215928,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@super::Mutex","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215929,"byte_end":9215963,"line_start":64,"line_end":64,"column_start":1,"column_end":35}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215964,"byte_end":9215993,"line_start":65,"line_end":65,"column_start":1,"column_end":30}},{"value":"/ [`RwLockReadGuard`]: struct@RwLockReadGuard","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9215994,"byte_end":9216041,"line_start":66,"line_end":66,"column_start":1,"column_end":48}},{"value":"/ [`RwLockWriteGuard`]: struct@RwLockWriteGuard","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9216042,"byte_end":9216091,"line_start":67,"line_end":67,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9216092,"byte_end":9216129,"line_start":68,"line_end":68,"column_start":1,"column_end":38}},{"value":"/ [_write-preferring_]: https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock#Priority_policies","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9216130,"byte_end":9216231,"line_start":69,"line_end":69,"column_start":1,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":8262},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9216628,"byte_end":9216643,"line_start":87,"line_end":87,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":8265},{"krate":0,"index":8266}],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9216400,"byte_end":9216472,"line_start":79,"line_end":79,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9216473,"byte_end":9216485,"line_start":80,"line_end":80,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9216486,"byte_end":9216489,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read`] method on","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9216490,"byte_end":9216545,"line_start":82,"line_end":82,"column_start":1,"column_end":56}},{"value":"/ [`RwLock`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9216546,"byte_end":9216561,"line_start":83,"line_end":83,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9216562,"byte_end":9216565,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ [`read`]: method@RwLock::read","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9216566,"byte_end":9216599,"line_start":85,"line_end":85,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":8271},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9216994,"byte_end":9217010,"line_start":101,"line_end":101,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":8274},{"krate":0,"index":8275}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9216725,"byte_end":9216801,"line_start":92,"line_end":92,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9216802,"byte_end":9216814,"line_start":93,"line_end":93,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9216815,"byte_end":9216818,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write`] and method","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9216819,"byte_end":9216876,"line_start":95,"line_end":95,"column_start":1,"column_end":58}},{"value":"/ on [`RwLock`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9216877,"byte_end":9216895,"line_start":96,"line_end":96,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9216896,"byte_end":9216899,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ [`write`]: method@RwLock::write","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9216900,"byte_end":9216935,"line_start":98,"line_end":98,"column_start":1,"column_end":36}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9216936,"byte_end":9216965,"line_start":99,"line_end":99,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":7787},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9219075,"byte_end":9219078,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"pub fn new(T) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9218865,"byte_end":9218928,"line_start":162,"line_end":162,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9218933,"byte_end":9218936,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9218941,"byte_end":9218955,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9218960,"byte_end":9218963,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9218968,"byte_end":9218975,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9218980,"byte_end":9219008,"line_start":167,"line_end":167,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9219013,"byte_end":9219016,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9219021,"byte_end":9219051,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9219056,"byte_end":9219063,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7788},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9220293,"byte_end":9220297,"line_start":212,"line_end":212,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"pub async fn read<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with shared read access, causing the current task","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9219255,"byte_end":9219326,"line_start":181,"line_end":181,"column_start":5,"column_end":76}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9219331,"byte_end":9219377,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9219382,"byte_end":9219385,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no more writers which","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9219390,"byte_end":9219459,"line_start":184,"line_end":184,"column_start":5,"column_end":74}},{"value":"/ hold the lock. There may be other readers currently inside the lock when","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9219464,"byte_end":9219540,"line_start":185,"line_end":185,"column_start":5,"column_end":81}},{"value":"/ this method returns.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9219545,"byte_end":9219569,"line_start":186,"line_end":186,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9219574,"byte_end":9219577,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9219582,"byte_end":9219596,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9219601,"byte_end":9219604,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9219609,"byte_end":9219616,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9219621,"byte_end":9219644,"line_start":191,"line_end":191,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9219649,"byte_end":9219677,"line_start":192,"line_end":192,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9219682,"byte_end":9219685,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9219690,"byte_end":9219708,"line_start":194,"line_end":194,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9219713,"byte_end":9219734,"line_start":195,"line_end":195,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9219739,"byte_end":9219783,"line_start":196,"line_end":196,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9219788,"byte_end":9219822,"line_start":197,"line_end":197,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9219827,"byte_end":9219830,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9219835,"byte_end":9219869,"line_start":199,"line_end":199,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9219874,"byte_end":9219900,"line_start":200,"line_end":200,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9219905,"byte_end":9219908,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9219913,"byte_end":9219946,"line_start":202,"line_end":202,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9219951,"byte_end":9220021,"line_start":203,"line_end":203,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9220026,"byte_end":9220066,"line_start":204,"line_end":204,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9220071,"byte_end":9220101,"line_start":205,"line_end":205,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has paniced\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9220106,"byte_end":9220162,"line_start":206,"line_end":206,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9220167,"byte_end":9220170,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9220175,"byte_end":9220233,"line_start":208,"line_end":208,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9220238,"byte_end":9220254,"line_start":209,"line_end":209,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9220259,"byte_end":9220263,"line_start":210,"line_end":210,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9220268,"byte_end":9220275,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7792},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9221328,"byte_end":9221333,"line_start":243,"line_end":243,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"pub async fn write<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with exclusive write access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with exclusive write access, causing the current task","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9220687,"byte_end":9220762,"line_start":221,"line_end":221,"column_start":5,"column_end":80}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9220767,"byte_end":9220813,"line_start":222,"line_end":222,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9220818,"byte_end":9220821,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This function will not return while other writers or other readers","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9220826,"byte_end":9220896,"line_start":224,"line_end":224,"column_start":5,"column_end":75}},{"value":"/ currently have access to the lock.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9220901,"byte_end":9220939,"line_start":225,"line_end":225,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9220944,"byte_end":9220947,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this rwlock","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9220952,"byte_end":9221025,"line_start":227,"line_end":227,"column_start":5,"column_end":78}},{"value":"/ when dropped.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9221030,"byte_end":9221047,"line_start":228,"line_end":228,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9221052,"byte_end":9221055,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9221060,"byte_end":9221074,"line_start":230,"line_end":230,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9221079,"byte_end":9221082,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9221087,"byte_end":9221094,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9221099,"byte_end":9221127,"line_start":233,"line_end":233,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9221132,"byte_end":9221135,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9221140,"byte_end":9221158,"line_start":235,"line_end":235,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9221163,"byte_end":9221184,"line_start":236,"line_end":236,"column_start":5,"column_end":26}},{"value":"/   let lock = RwLock::new(1);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9221189,"byte_end":9221221,"line_start":237,"line_end":237,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9221226,"byte_end":9221229,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9221234,"byte_end":9221271,"line_start":239,"line_end":239,"column_start":5,"column_end":42}},{"value":"/   *n = 2;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9221276,"byte_end":9221289,"line_start":240,"line_end":240,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9221294,"byte_end":9221298,"line_start":241,"line_end":241,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9221303,"byte_end":9221310,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7796},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9221848,"byte_end":9221858,"line_start":256,"line_end":256,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.\n","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9221783,"byte_end":9221836,"line_start":255,"line_end":255,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":7864},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watch","qualname":"::sync::watch","value":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":7865},{"krate":0,"index":7866},{"krate":0,"index":7867},{"krate":0,"index":7868},{"krate":0,"index":7869},{"krate":0,"index":7870},{"krate":0,"index":7871},{"krate":0,"index":15685},{"krate":0,"index":7872},{"krate":0,"index":15687},{"krate":0,"index":7873},{"krate":0,"index":7874},{"krate":0,"index":7875},{"krate":0,"index":7876},{"krate":0,"index":7877},{"krate":0,"index":7878},{"krate":0,"index":7879},{"krate":0,"index":7880},{"krate":0,"index":15699},{"krate":0,"index":7881},{"krate":0,"index":15701},{"krate":0,"index":7882},{"krate":0,"index":7883},{"krate":0,"index":7884},{"krate":0,"index":8289},{"krate":0,"index":8293},{"krate":0,"index":8296},{"krate":0,"index":8299},{"krate":0,"index":8302},{"krate":0,"index":8306},{"krate":0,"index":7885},{"krate":0,"index":8316},{"krate":0,"index":8322},{"krate":0,"index":7892},{"krate":0,"index":8325},{"krate":0,"index":8330},{"krate":0,"index":8328},{"krate":0,"index":8332},{"krate":0,"index":8335},{"krate":0,"index":7893},{"krate":0,"index":7894},{"krate":0,"index":7898},{"krate":0,"index":7903},{"krate":0,"index":7910},{"krate":0,"index":7915},{"krate":0,"index":7918},{"krate":0,"index":7921},{"krate":0,"index":7929},{"krate":0,"index":7931},{"krate":0,"index":7934},{"krate":0,"index":7938},{"krate":0,"index":7941},{"krate":0,"index":7943},{"krate":0,"index":7945},{"krate":0,"index":7946},{"krate":0,"index":7949}],"decl_id":null,"docs":" A single-producer, multi-consumer channel that only retains the *last* sent\n value.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21247,"byte_end":21271,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A single-producer, multi-consumer channel that only retains the *last* sent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9235373,"byte_end":9235452,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"/ value.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9235453,"byte_end":9235463,"line_start":2,"line_end":2,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9235464,"byte_end":9235467,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This channel is useful for watching for changes to a value from multiple","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9235468,"byte_end":9235544,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ points in the code base, for example, changes to configuration values.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9235545,"byte_end":9235619,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9235620,"byte_end":9235623,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9235624,"byte_end":9235635,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9235636,"byte_end":9235639,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`channel`] returns a [`Sender`] / [`Receiver`] pair. These are","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9235640,"byte_end":9235707,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/ the producer and sender halves of the channel. The channel is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9235708,"byte_end":9235773,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"/ created with an initial value. [`Receiver::recv`] will always","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9235774,"byte_end":9235839,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/ be ready upon creation and will yield either this initial value or","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9235840,"byte_end":9235910,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"/ the latest value that has been sent by `Sender`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9235911,"byte_end":9235963,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9235964,"byte_end":9235967,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Calls to [`Receiver::recv`] will always yield the latest value.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9235968,"byte_end":9236035,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236036,"byte_end":9236039,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236040,"byte_end":9236054,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236055,"byte_end":9236058,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236059,"byte_end":9236066,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236067,"byte_end":9236094,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236095,"byte_end":9236098,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236099,"byte_end":9236163,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236164,"byte_end":9236215,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236216,"byte_end":9236219,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236220,"byte_end":9236253,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/         while let Some(value) = rx.recv().await {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236254,"byte_end":9236307,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/             println!(\"received = {:?}\", value);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236308,"byte_end":9236359,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/         }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236360,"byte_end":9236373,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236374,"byte_end":9236385,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236386,"byte_end":9236389,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/     tx.broadcast(\"world\")?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236390,"byte_end":9236421,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236422,"byte_end":9236434,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236435,"byte_end":9236442,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236443,"byte_end":9236450,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236451,"byte_end":9236454,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Closing","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236455,"byte_end":9236468,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236469,"byte_end":9236472,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Sender::closed`] allows the producer to detect when all [`Receiver`]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236473,"byte_end":9236547,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"/ handles have been dropped. This indicates that there is no further interest","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236548,"byte_end":9236627,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ in the values being produced and work can be stopped.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236628,"byte_end":9236685,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236686,"byte_end":9236689,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Thread safety","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236690,"byte_end":9236709,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236710,"byte_end":9236713,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Both [`Sender`] and [`Receiver`] are thread safe. They can be moved to other","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236714,"byte_end":9236794,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ threads and can be used in a concurrent environment. Clones of [`Receiver`]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236795,"byte_end":9236874,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ handles may be moved to separate threads and also used concurrently.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236875,"byte_end":9236947,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236948,"byte_end":9236951,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::watch::Sender","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236952,"byte_end":9236994,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/ [`Receiver`]: crate::sync::watch::Receiver","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9236995,"byte_end":9237041,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/ [`Receiver::recv`]: crate::sync::watch::Receiver::recv","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9237042,"byte_end":9237100,"line_start":50,"line_end":50,"column_start":1,"column_end":59}},{"value":"/ [`channel`]: crate::sync::watch::channel","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9237101,"byte_end":9237145,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/ [`Sender::closed`]: crate::sync::watch::Sender::closed","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9237146,"byte_end":9237204,"line_start":52,"line_end":52,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":8289},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9237692,"byte_end":9237700,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::watch::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":8291},{"krate":0,"index":8292}],"decl_id":null,"docs":" Receives values from the associated [`Sender`](struct@Sender).","sig":null,"attributes":[{"value":"/ Receives values from the associated [`Sender`](struct@Sender).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9237526,"byte_end":9237592,"line_start":65,"line_end":65,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9237593,"byte_end":9237596,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9237597,"byte_end":9237663,"line_start":67,"line_end":67,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":8296},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9238007,"byte_end":9238013,"line_start":81,"line_end":81,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::watch::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":8298}],"decl_id":null,"docs":" Sends values to the associated [`Receiver`](struct@Receiver).","sig":null,"attributes":[{"value":"/ Sends values to the associated [`Receiver`](struct@Receiver).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9237842,"byte_end":9237907,"line_start":77,"line_end":77,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9237908,"byte_end":9237911,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9237912,"byte_end":9237978,"line_start":79,"line_end":79,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":8302},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9238334,"byte_end":9238337,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"Ref","qualname":"::sync::watch::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":8305}],"decl_id":null,"docs":" Returns a reference to the inner value","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9238051,"byte_end":9238093,"line_start":85,"line_end":85,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9238094,"byte_end":9238097,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Outstanding borrows hold a read lock on the inner value. This means that","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9238098,"byte_end":9238174,"line_start":87,"line_end":87,"column_start":1,"column_end":77}},{"value":"/ long lived borrows could cause the produce half to block. It is recommended","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9238175,"byte_end":9238254,"line_start":88,"line_end":88,"column_start":1,"column_end":80}},{"value":"/ to keep the borrow as short lived as possible.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9238255,"byte_end":9238305,"line_start":89,"line_end":89,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":7885},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9238393,"byte_end":9238398,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::watch::error","value":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":7886},{"krate":0,"index":8310},{"krate":0,"index":8313},{"krate":0,"index":7887},{"krate":0,"index":7890}],"decl_id":null,"docs":" Watch error types\n","sig":null,"attributes":[{"value":"/ Watch error types","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9238405,"byte_end":9238426,"line_start":96,"line_end":96,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":8310},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9238534,"byte_end":9238543,"line_start":102,"line_end":102,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::watch::error::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":8312}],"decl_id":null,"docs":" Error produced when sending a value fails.\n","sig":null,"attributes":[{"value":"/ Error produced when sending a value fails.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9238451,"byte_end":9238497,"line_start":100,"line_end":100,"column_start":5,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":7894},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9240322,"byte_end":9240329,"line_start":177,"line_end":177,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::watch::channel","value":"pub fn channel<T: Clone>(T) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new watch channel, returning the \"send\" and \"receive\" handles.","sig":null,"attributes":[{"value":"/ Creates a new watch channel, returning the \"send\" and \"receive\" handles.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9239554,"byte_end":9239630,"line_start":150,"line_end":150,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9239631,"byte_end":9239634,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ All values sent by [`Sender`] will become visible to the [`Receiver`] handles.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9239635,"byte_end":9239717,"line_start":152,"line_end":152,"column_start":1,"column_end":83}},{"value":"/ Only the last value sent is made available to the [`Receiver`] half. All","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9239718,"byte_end":9239794,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/ intermediate values are dropped.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9239795,"byte_end":9239831,"line_start":154,"line_end":154,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9239832,"byte_end":9239835,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9239836,"byte_end":9239850,"line_start":156,"line_end":156,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9239851,"byte_end":9239854,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9239855,"byte_end":9239862,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9239863,"byte_end":9239890,"line_start":159,"line_end":159,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9239891,"byte_end":9239894,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9239895,"byte_end":9239959,"line_start":161,"line_end":161,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9239960,"byte_end":9240011,"line_start":162,"line_end":162,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9240012,"byte_end":9240015,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9240016,"byte_end":9240049,"line_start":164,"line_end":164,"column_start":1,"column_end":34}},{"value":"/         while let Some(value) = rx.recv().await {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9240050,"byte_end":9240103,"line_start":165,"line_end":165,"column_start":1,"column_end":54}},{"value":"/             println!(\"received = {:?}\", value);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9240104,"byte_end":9240155,"line_start":166,"line_end":166,"column_start":1,"column_end":52}},{"value":"/         }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9240156,"byte_end":9240169,"line_start":167,"line_end":167,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9240170,"byte_end":9240181,"line_start":168,"line_end":168,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9240182,"byte_end":9240185,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     tx.broadcast(\"world\")?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9240186,"byte_end":9240217,"line_start":170,"line_end":170,"column_start":1,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9240218,"byte_end":9240230,"line_start":171,"line_end":171,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9240231,"byte_end":9240238,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9240239,"byte_end":9240246,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9240247,"byte_end":9240250,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9240251,"byte_end":9240280,"line_start":175,"line_end":175,"column_start":1,"column_end":30}},{"value":"/ [`Receiver`]: struct@Receiver","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9240281,"byte_end":9240314,"line_start":176,"line_end":176,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":7900},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9241498,"byte_end":9241504,"line_start":219,"line_end":219,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Receiver<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9241036,"byte_end":9241091,"line_start":205,"line_end":205,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9241096,"byte_end":9241099,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9241104,"byte_end":9241180,"line_start":207,"line_end":207,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9241185,"byte_end":9241261,"line_start":208,"line_end":208,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9241266,"byte_end":9241297,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9241302,"byte_end":9241305,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9241310,"byte_end":9241324,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9241329,"byte_end":9241332,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9241337,"byte_end":9241344,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9241349,"byte_end":9241376,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9241381,"byte_end":9241384,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let (_, rx) = watch::channel(\"hello\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9241389,"byte_end":9241431,"line_start":216,"line_end":216,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*rx.borrow(), \"hello\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9241436,"byte_end":9241474,"line_start":217,"line_end":217,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9241479,"byte_end":9241486,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7901},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9241664,"byte_end":9241677,"line_start":226,"line_end":226,"column_start":12,"column_end":25},"name":"poll_recv_ref","qualname":"<Receiver<T>>::poll_recv_ref","value":"pub fn poll_recv_ref<'a>(&'a mut Self, &mut Context) -> Poll<Option<Ref>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7905},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9243398,"byte_end":9243402,"line_start":282,"line_end":282,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Attempts to clone the latest value sent via the channel.","sig":null,"attributes":[{"value":"/ Attempts to clone the latest value sent via the channel.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9242316,"byte_end":9242376,"line_start":249,"line_end":249,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9242381,"byte_end":9242384,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ If this is the first time the function is called on a `Receiver`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9242389,"byte_end":9242457,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/ instance, then the function completes immediately with the **current**","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9242462,"byte_end":9242536,"line_start":252,"line_end":252,"column_start":5,"column_end":79}},{"value":"/ value held by the channel. On the next call, the function waits until","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9242541,"byte_end":9242614,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ a new value is sent in the channel.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9242619,"byte_end":9242658,"line_start":254,"line_end":254,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9242663,"byte_end":9242666,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if the `Sender` half is dropped.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9242671,"byte_end":9242726,"line_start":256,"line_end":256,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9242731,"byte_end":9242734,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9242739,"byte_end":9242753,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9242758,"byte_end":9242761,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9242766,"byte_end":9242773,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9242778,"byte_end":9242805,"line_start":261,"line_end":261,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9242810,"byte_end":9242813,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9242818,"byte_end":9242836,"line_start":263,"line_end":263,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9242841,"byte_end":9242862,"line_start":264,"line_end":264,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9242867,"byte_end":9242918,"line_start":265,"line_end":265,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9242923,"byte_end":9242926,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/     let v = rx.recv().await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9242931,"byte_end":9242972,"line_start":267,"line_end":267,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, \"hello\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9242977,"byte_end":9243008,"line_start":268,"line_end":268,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9243013,"byte_end":9243016,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9243021,"byte_end":9243054,"line_start":270,"line_end":270,"column_start":5,"column_end":38}},{"value":"/         tx.broadcast(\"goodbye\").unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9243059,"byte_end":9243104,"line_start":271,"line_end":271,"column_start":5,"column_end":50}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9243109,"byte_end":9243120,"line_start":272,"line_end":272,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9243125,"byte_end":9243128,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/     // Waits for the new task to spawn and send the value.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9243133,"byte_end":9243195,"line_start":274,"line_end":274,"column_start":5,"column_end":67}},{"value":"/     let v = rx.recv().await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9243200,"byte_end":9243241,"line_start":275,"line_end":275,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, \"goodbye\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9243246,"byte_end":9243279,"line_start":276,"line_end":276,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9243284,"byte_end":9243287,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/     let v = rx.recv().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9243292,"byte_end":9243324,"line_start":278,"line_end":278,"column_start":5,"column_end":37}},{"value":"/     assert!(v.is_none());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9243329,"byte_end":9243358,"line_start":279,"line_end":279,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9243363,"byte_end":9243368,"line_start":280,"line_end":280,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9243373,"byte_end":9243380,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7923},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9244468,"byte_end":9244477,"line_start":322,"line_end":322,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<Sender<T>>::broadcast","value":"pub fn broadcast(&Self, T) -> Result<(), error::SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Broadcasts a new value via the channel, notifying all receivers.\n","sig":null,"attributes":[{"value":"/ Broadcasts a new value via the channel, notifying all receivers.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9244388,"byte_end":9244456,"line_start":321,"line_end":321,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":7924},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9245308,"byte_end":9245314,"line_start":348,"line_end":348,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when all receivers have dropped.","sig":null,"attributes":[{"value":"/ Completes when all receivers have dropped.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9245097,"byte_end":9245143,"line_start":344,"line_end":344,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9245148,"byte_end":9245151,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This allows the producer to get notified when interest in the produced","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9245156,"byte_end":9245230,"line_start":346,"line_end":346,"column_start":5,"column_end":79}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9245235,"byte_end":9245290,"line_start":347,"line_end":347,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":8337},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":8339},{"krate":0,"index":8341},{"krate":0,"index":8348},{"krate":0,"index":8349},{"krate":0,"index":8350},{"krate":0,"index":8351},{"krate":0,"index":8352},{"krate":0,"index":8356},{"krate":0,"index":8357},{"krate":0,"index":8363},{"krate":0,"index":8374},{"krate":0,"index":8452},{"krate":0,"index":8453},{"krate":0,"index":8454},{"krate":0,"index":8455},{"krate":0,"index":8516}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21559,"byte_end":21586,"line_start":247,"line_end":247,"column_start":13,"column_end":40}},{"value":"/ Asynchronous green-threads.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9247060,"byte_end":9247091,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9247092,"byte_end":9247095,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## What are Tasks?","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9247096,"byte_end":9247118,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9247119,"byte_end":9247122,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9247123,"byte_end":9247204,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9247205,"byte_end":9247285,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9247286,"byte_end":9247366,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9247367,"byte_end":9247441,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9247442,"byte_end":9247517,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ something similar.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9247518,"byte_end":9247540,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9247541,"byte_end":9247544,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Key points about tasks include:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9247545,"byte_end":9247580,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9247581,"byte_end":9247584,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9247585,"byte_end":9247659,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9247660,"byte_end":9247739,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   between tasks does not require a context switch and has fairly low","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9247740,"byte_end":9247812,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9247813,"byte_end":9247888,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/   quite cheap, especially compared to OS threads.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9247889,"byte_end":9247942,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9247943,"byte_end":9247946,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9247947,"byte_end":9248024,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9248025,"byte_end":9248098,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   operating system allows each thread to run for a period of time, and then","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9248099,"byte_end":9248178,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9248179,"byte_end":9248257,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9248258,"byte_end":9248330,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9248331,"byte_end":9248406,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9248407,"byte_end":9248481,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9248482,"byte_end":9248557,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/   executing the next task.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9248558,"byte_end":9248588,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9248589,"byte_end":9248592,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9248593,"byte_end":9248671,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9248672,"byte_end":9248747,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9248748,"byte_end":9248825,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9248826,"byte_end":9248905,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/   should generally not perform system calls or other operations that could","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9248906,"byte_end":9248984,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9248985,"byte_end":9249060,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9249061,"byte_end":9249136,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/   running blocking operations in an asynchronous context.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9249137,"byte_end":9249198,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9249199,"byte_end":9249202,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [rt]: crate::runtime","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9249203,"byte_end":9249227,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9249228,"byte_end":9249292,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9249293,"byte_end":9249353,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9249354,"byte_end":9249443,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/ [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9249444,"byte_end":9249532,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9249533,"byte_end":9249536,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Working with Tasks","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9249537,"byte_end":9249562,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9249563,"byte_end":9249566,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This module provides the following APIs for working with tasks:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9249567,"byte_end":9249634,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9249635,"byte_end":9249638,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Spawning","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9249639,"byte_end":9249655,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9249656,"byte_end":9249659,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9249660,"byte_end":9249739,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ function can be thought of as an async equivalent to the standard library's","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9249740,"byte_end":9249819,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9249820,"byte_end":9249899,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ [future], and creates a new task to run that work concurrently:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9249900,"byte_end":9249967,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9249968,"byte_end":9249971,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9249972,"byte_end":9249979,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9249980,"byte_end":9250000,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250001,"byte_end":9250004,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # async fn doc() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250005,"byte_end":9250027,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ task::spawn(async {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250028,"byte_end":9250051,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/     // perform some work here...","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250052,"byte_end":9250088,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250089,"byte_end":9250096,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250097,"byte_end":9250104,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250105,"byte_end":9250112,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250113,"byte_end":9250116,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250117,"byte_end":9250196,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250197,"byte_end":9250275,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ the spawned task. For example:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250276,"byte_end":9250310,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250311,"byte_end":9250314,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250315,"byte_end":9250322,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250323,"byte_end":9250343,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250344,"byte_end":9250347,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250348,"byte_end":9250428,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250429,"byte_end":9250463,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250464,"byte_end":9250478,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/     \"hello world!\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250479,"byte_end":9250501,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250502,"byte_end":9250509,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250510,"byte_end":9250513,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250514,"byte_end":9250524,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250525,"byte_end":9250528,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Await the result of the spawned task.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250529,"byte_end":9250573,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/ let result = join.await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250574,"byte_end":9250603,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"hello world!\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250604,"byte_end":9250643,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250644,"byte_end":9250656,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250657,"byte_end":9250664,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250665,"byte_end":9250672,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250673,"byte_end":9250676,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250677,"byte_end":9250757,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ task panics, awaiting its `JoinHandle` will return a [`JoinError`]`. For","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250758,"byte_end":9250834,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"/ example:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250835,"byte_end":9250847,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250848,"byte_end":9250851,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250852,"byte_end":9250859,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250860,"byte_end":9250880,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250881,"byte_end":9250884,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250885,"byte_end":9250923,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250924,"byte_end":9250958,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"/     panic!(\"something bad happened!\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9250959,"byte_end":9251000,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251001,"byte_end":9251008,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251009,"byte_end":9251012,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // The returned result indicates that the task failed.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251013,"byte_end":9251071,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/ assert!(join.await.is_err());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251072,"byte_end":9251105,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251106,"byte_end":9251113,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251114,"byte_end":9251121,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251122,"byte_end":9251125,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt-core\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251126,"byte_end":9251199,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ feature flag is enabled.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251200,"byte_end":9251228,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251229,"byte_end":9251232,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn`]: crate::task::spawn()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251233,"byte_end":9251274,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ [future]: std::future::Future","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251275,"byte_end":9251308,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251309,"byte_end":9251355,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251356,"byte_end":9251399,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [thread_join]: std::thread::JoinHandle","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251400,"byte_end":9251442,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`JoinError`]: crate::task::JoinError","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251443,"byte_end":9251484,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251485,"byte_end":9251488,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Blocking and Yielding","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251489,"byte_end":9251518,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251519,"byte_end":9251522,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251523,"byte_end":9251603,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ operations that can block. A blocking operation performed in a task running","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251604,"byte_end":9251683,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251684,"byte_end":9251763,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ preventing other tasks from running.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251764,"byte_end":9251804,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251805,"byte_end":9251808,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251809,"byte_end":9251883,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251884,"byte_end":9251964,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251965,"byte_end":9251968,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ #### spawn_blocking","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251969,"byte_end":9251992,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251993,"byte_end":9251996,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9251997,"byte_end":9252077,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/ discussed in the previous section, but rather than spawning an","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252078,"byte_end":9252144,"line_start":128,"line_end":128,"column_start":1,"column_end":67}},{"value":"/ _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252145,"byte_end":9252212,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"/ _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252213,"byte_end":9252287,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/ example:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252288,"byte_end":9252300,"line_start":131,"line_end":131,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252301,"byte_end":9252304,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252305,"byte_end":9252312,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252313,"byte_end":9252333,"line_start":134,"line_end":134,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252334,"byte_end":9252337,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252338,"byte_end":9252361,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252362,"byte_end":9252391,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252392,"byte_end":9252454,"line_start":138,"line_end":138,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252455,"byte_end":9252462,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252463,"byte_end":9252470,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252471,"byte_end":9252478,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252479,"byte_end":9252482,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252483,"byte_end":9252557,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"/ which we can use to await the result of the blocking operation:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252558,"byte_end":9252625,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252626,"byte_end":9252629,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252630,"byte_end":9252641,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ # use tokio::task;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252642,"byte_end":9252664,"line_start":147,"line_end":147,"column_start":1,"column_end":23}},{"value":"/ # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252665,"byte_end":9252729,"line_start":148,"line_end":148,"column_start":1,"column_end":65}},{"value":"/ let join = task::spawn_blocking(|| {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252730,"byte_end":9252770,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252771,"byte_end":9252833,"line_start":150,"line_end":150,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252834,"byte_end":9252862,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252863,"byte_end":9252870,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252871,"byte_end":9252874,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ let result = join.await?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252875,"byte_end":9252904,"line_start":154,"line_end":154,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252905,"byte_end":9252950,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252951,"byte_end":9252963,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252964,"byte_end":9252971,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252972,"byte_end":9252979,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252980,"byte_end":9252983,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ #### block_in_place","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9252984,"byte_end":9253007,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9253008,"byte_end":9253011,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ When using the [threaded runtime][rt-threaded], the [`task::block_in_place`]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9253012,"byte_end":9253092,"line_start":162,"line_end":162,"column_start":1,"column_end":81}},{"value":"/ function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9253093,"byte_end":9253167,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9253168,"byte_end":9253244,"line_start":164,"line_end":164,"column_start":1,"column_end":77}},{"value":"/ `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9253245,"byte_end":9253319,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9253320,"byte_end":9253399,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9253400,"byte_end":9253482,"line_start":167,"line_end":167,"column_start":1,"column_end":83}},{"value":"/ context switches.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9253483,"byte_end":9253504,"line_start":168,"line_end":168,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9253505,"byte_end":9253508,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9253509,"byte_end":9253525,"line_start":170,"line_end":170,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9253526,"byte_end":9253529,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9253530,"byte_end":9253537,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9253538,"byte_end":9253558,"line_start":173,"line_end":173,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9253559,"byte_end":9253562,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9253563,"byte_end":9253586,"line_start":175,"line_end":175,"column_start":1,"column_end":24}},{"value":"/ let result = task::block_in_place(|| {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9253587,"byte_end":9253629,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9253630,"byte_end":9253692,"line_start":177,"line_end":177,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9253693,"byte_end":9253721,"line_start":178,"line_end":178,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9253722,"byte_end":9253729,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9253730,"byte_end":9253733,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9253734,"byte_end":9253779,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9253780,"byte_end":9253787,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9253788,"byte_end":9253795,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9253796,"byte_end":9253799,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ #### yield_now","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9253800,"byte_end":9253818,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9253819,"byte_end":9253822,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9253823,"byte_end":9253897,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"/ that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9253898,"byte_end":9253976,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"/ and `await`ing this function will cause the current task to yield to the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9253977,"byte_end":9254053,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"/ Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9254054,"byte_end":9254111,"line_start":190,"line_end":190,"column_start":1,"column_end":58}},{"value":"/ scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9254112,"byte_end":9254190,"line_start":191,"line_end":191,"column_start":1,"column_end":79}},{"value":"/ to execute. For example:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9254191,"byte_end":9254219,"line_start":192,"line_end":192,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9254220,"byte_end":9254223,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9254224,"byte_end":9254235,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"/ use tokio::task;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9254236,"byte_end":9254256,"line_start":195,"line_end":195,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9254257,"byte_end":9254260,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9254261,"byte_end":9254299,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"/ async {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9254300,"byte_end":9254311,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"/     task::spawn(async {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9254312,"byte_end":9254339,"line_start":199,"line_end":199,"column_start":1,"column_end":28}},{"value":"/         // ...","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9254340,"byte_end":9254358,"line_start":200,"line_end":200,"column_start":1,"column_end":19}},{"value":"/         println!(\"spawned task done!\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9254359,"byte_end":9254401,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9254402,"byte_end":9254413,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9254414,"byte_end":9254417,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9254418,"byte_end":9254485,"line_start":204,"line_end":204,"column_start":1,"column_end":68}},{"value":"/     task::yield_now().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9254486,"byte_end":9254518,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"/     println!(\"main task done!\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9254519,"byte_end":9254555,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9254556,"byte_end":9254561,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"/ # .await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9254562,"byte_end":9254575,"line_start":208,"line_end":208,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9254576,"byte_end":9254583,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9254584,"byte_end":9254591,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9254592,"byte_end":9254595,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9254596,"byte_end":9254653,"line_start":212,"line_end":212,"column_start":1,"column_end":58}},{"value":"/ [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9254654,"byte_end":9254711,"line_start":213,"line_end":213,"column_start":1,"column_end":58}},{"value":"/ [rt-threaded]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9254712,"byte_end":9254771,"line_start":214,"line_end":214,"column_start":1,"column_end":60}},{"value":"/ [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9254772,"byte_end":9254821,"line_start":215,"line_end":215,"column_start":1,"column_end":50}},{"value":"/ [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9254822,"byte_end":9254871,"line_start":216,"line_end":216,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":8342},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/blocking.rs","byte_start":9257471,"byte_end":9257485,"line_start":48,"line_end":48,"column_start":12,"column_end":26},"name":"block_in_place","qualname":"::task::blocking::block_in_place","value":"pub fn block_in_place<F, R>(F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided blocking function on the current thread without\n blocking the executor.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-threaded\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":22029,"byte_end":22060,"line_start":272,"line_end":272,"column_start":13,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":8345},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/blocking.rs","byte_start":9260374,"byte_end":9260388,"line_start":112,"line_end":112,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"::task::blocking::spawn_blocking","value":"pub fn spawn_blocking<F, R>(F) -> JoinHandle<R> where F: FnOnce() -> R +\nSend + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[{"value":"cfg(feature = \"blocking\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":16564,"byte_end":16592,"line_start":15,"line_end":15,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":8364},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/spawn.rs","byte_start":9264560,"byte_end":9264565,"line_start":125,"line_end":125,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<T>(T) -> JoinHandle<T::Output> where T: Future + Send + 'static,\nT::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21701,"byte_end":21728,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":8366},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/yield_now.rs","byte_start":9265638,"byte_end":9265647,"line_start":16,"line_end":16,"column_start":18,"column_end":27},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Yields execution back to the Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21701,"byte_end":21728,"line_start":256,"line_end":256,"column_start":13,"column_end":40}},{"value":"must_use = \"yield_now does nothing unless polled/`await`-ed\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/yield_now.rs","byte_start":9265557,"byte_end":9265620,"line_start":15,"line_end":15,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8517},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9270045,"byte_end":9270053,"line_start":112,"line_end":112,"column_start":16,"column_end":24},"name":"LocalSet","qualname":"::task::local::LocalSet","value":"LocalSet {  }","parent":null,"children":[{"krate":0,"index":8518},{"krate":0,"index":8519},{"krate":0,"index":8520}],"decl_id":null,"docs":" A set of tasks which are executed on the same thread.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":22242,"byte_end":22269,"line_start":282,"line_end":282,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":8526},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9272065,"byte_end":9272076,"line_start":193,"line_end":193,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"::task::local::spawn_local","value":"pub fn spawn_local<F>(F) -> JoinHandle<F::Output> where F: Future + 'static,\nF::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` future on the local task set.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":22242,"byte_end":22269,"line_start":282,"line_end":282,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":8407},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9272973,"byte_end":9272976,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalSet>::new","value":"pub fn new() -> LocalSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a new local task set.\n","sig":null,"attributes":[{"value":"/ Returns a new local task set.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9272928,"byte_end":9272961,"line_start":222,"line_end":222,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":8408},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9274681,"byte_end":9274692,"line_start":276,"line_end":276,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"<LocalSet>::spawn_local","value":"pub fn spawn_local<F>(&Self, F) -> JoinHandle<F::Output> where F: Future +\n'static, F::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` task onto the local task set.","sig":null,"attributes":[{"value":"/ Spawns a `!Send` task onto the local task set.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9273518,"byte_end":9273568,"line_start":240,"line_end":240,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9273573,"byte_end":9273576,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This task is guaranteed to be run on the current thread.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9273581,"byte_end":9273641,"line_start":242,"line_end":242,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9273646,"byte_end":9273649,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ Unlike the free function [`spawn_local`], this method may be used to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9273654,"byte_end":9273726,"line_start":244,"line_end":244,"column_start":5,"column_end":77}},{"value":"/ spawn local tasks when the task set is _not_ running. For example:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9273731,"byte_end":9273801,"line_start":245,"line_end":245,"column_start":5,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9273806,"byte_end":9273817,"line_start":246,"line_end":246,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9273822,"byte_end":9273842,"line_start":247,"line_end":247,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9273847,"byte_end":9273850,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9273855,"byte_end":9273873,"line_start":249,"line_end":249,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9273878,"byte_end":9273899,"line_start":250,"line_end":250,"column_start":5,"column_end":26}},{"value":"/     let local = task::LocalSet::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9273904,"byte_end":9273946,"line_start":251,"line_end":251,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9273951,"byte_end":9273954,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/     // Spawn a future on the local set. This future will be run when","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9273959,"byte_end":9274031,"line_start":253,"line_end":253,"column_start":5,"column_end":77}},{"value":"/     // we call `run_until` to drive the task set.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9274036,"byte_end":9274089,"line_start":254,"line_end":254,"column_start":5,"column_end":58}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9274094,"byte_end":9274127,"line_start":255,"line_end":255,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9274132,"byte_end":9274149,"line_start":256,"line_end":256,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9274154,"byte_end":9274165,"line_start":257,"line_end":257,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9274170,"byte_end":9274173,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/     // Run the local task set.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9274178,"byte_end":9274212,"line_start":259,"line_end":259,"column_start":5,"column_end":39}},{"value":"/     local.run_until(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9274217,"byte_end":9274253,"line_start":260,"line_end":260,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9274258,"byte_end":9274276,"line_start":261,"line_end":261,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9274281,"byte_end":9274298,"line_start":262,"line_end":262,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9274303,"byte_end":9274306,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/     // When `run` finishes, we can spawn _more_ futures, which will","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9274311,"byte_end":9274382,"line_start":264,"line_end":264,"column_start":5,"column_end":76}},{"value":"/     // run in subsequent calls to `run_until`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9274387,"byte_end":9274437,"line_start":265,"line_end":265,"column_start":5,"column_end":55}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9274442,"byte_end":9274475,"line_start":266,"line_end":266,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9274480,"byte_end":9274497,"line_start":267,"line_end":267,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9274502,"byte_end":9274513,"line_start":268,"line_end":268,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9274518,"byte_end":9274521,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     local.run_until(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9274526,"byte_end":9274562,"line_start":270,"line_end":270,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9274567,"byte_end":9274585,"line_start":271,"line_end":271,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9274590,"byte_end":9274607,"line_start":272,"line_end":272,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9274612,"byte_end":9274617,"line_start":273,"line_end":273,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9274622,"byte_end":9274629,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9274634,"byte_end":9274669,"line_start":275,"line_end":275,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":8410},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9277427,"byte_end":9277435,"line_start":349,"line_end":349,"column_start":12,"column_end":20},"name":"block_on","qualname":"<LocalSet>::block_on","value":"pub fn block_on<F>(&Self, &mut crate::runtime::Runtime, F) -> F::Output where\nF: Future","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the provided runtime, driving any local\n futures spawned on this task set on the current thread.","sig":null,"attributes":[{"value":"/ Runs a future to completion on the provided runtime, driving any local","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9275035,"byte_end":9275109,"line_start":287,"line_end":287,"column_start":5,"column_end":79}},{"value":"/ futures spawned on this task set on the current thread.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9275114,"byte_end":9275173,"line_start":288,"line_end":288,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9275178,"byte_end":9275181,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9275186,"byte_end":9275253,"line_start":290,"line_end":290,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9275258,"byte_end":9275331,"line_start":291,"line_end":291,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime. The future","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9275336,"byte_end":9275412,"line_start":292,"line_end":292,"column_start":5,"column_end":81}},{"value":"/ may also call [`spawn_local`] to spawn_local additional local futures on the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9275417,"byte_end":9275497,"line_start":293,"line_end":293,"column_start":5,"column_end":85}},{"value":"/ current thread.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9275502,"byte_end":9275521,"line_start":294,"line_end":294,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9275526,"byte_end":9275529,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9275534,"byte_end":9275600,"line_start":296,"line_end":296,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9275605,"byte_end":9275608,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9275613,"byte_end":9275625,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9275630,"byte_end":9275633,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9275638,"byte_end":9275710,"line_start":300,"line_end":300,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9275715,"byte_end":9275788,"line_start":301,"line_end":301,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9275793,"byte_end":9275796,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9275801,"byte_end":9275812,"line_start":303,"line_end":303,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9275817,"byte_end":9275820,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Since this function internally calls [`Runtime::block_on`], and drives","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9275825,"byte_end":9275899,"line_start":305,"line_end":305,"column_start":5,"column_end":79}},{"value":"/ futures in the local task set inside that call to `block_on`, the local","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9275904,"byte_end":9275979,"line_start":306,"line_end":306,"column_start":5,"column_end":80}},{"value":"/ futures may not use [in-place blocking]. If a blocking call needs to be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9275984,"byte_end":9276059,"line_start":307,"line_end":307,"column_start":5,"column_end":80}},{"value":"/ issued from a local task, the [`spawn_blocking`] API may be used instead.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9276064,"byte_end":9276141,"line_start":308,"line_end":308,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9276146,"byte_end":9276149,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ For example, this will panic:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9276154,"byte_end":9276187,"line_start":310,"line_end":310,"column_start":5,"column_end":38}},{"value":"/ ```should_panic","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9276192,"byte_end":9276211,"line_start":311,"line_end":311,"column_start":5,"column_end":24}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9276216,"byte_end":9276248,"line_start":312,"line_end":312,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9276253,"byte_end":9276273,"line_start":313,"line_end":313,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9276278,"byte_end":9276281,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9276286,"byte_end":9276327,"line_start":315,"line_end":315,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9276332,"byte_end":9276370,"line_start":316,"line_end":316,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9276375,"byte_end":9276410,"line_start":317,"line_end":317,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9276415,"byte_end":9276459,"line_start":318,"line_end":318,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::block_in_place(|| {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9276464,"byte_end":9276523,"line_start":319,"line_end":319,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9276528,"byte_end":9276550,"line_start":320,"line_end":320,"column_start":5,"column_end":27}},{"value":"/         });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9276555,"byte_end":9276570,"line_start":321,"line_end":321,"column_start":5,"column_end":20}},{"value":"/         // ...","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9276575,"byte_end":9276593,"line_start":322,"line_end":322,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9276598,"byte_end":9276609,"line_start":323,"line_end":323,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9276614,"byte_end":9276642,"line_start":324,"line_end":324,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9276647,"byte_end":9276653,"line_start":325,"line_end":325,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9276658,"byte_end":9276665,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ This, however, will not panic:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9276670,"byte_end":9276704,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9276709,"byte_end":9276716,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9276721,"byte_end":9276753,"line_start":329,"line_end":329,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9276758,"byte_end":9276778,"line_start":330,"line_end":330,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9276783,"byte_end":9276786,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9276791,"byte_end":9276832,"line_start":332,"line_end":332,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9276837,"byte_end":9276875,"line_start":333,"line_end":333,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9276880,"byte_end":9276915,"line_start":334,"line_end":334,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9276920,"byte_end":9276964,"line_start":335,"line_end":335,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::spawn_blocking(|| {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9276969,"byte_end":9277028,"line_start":336,"line_end":336,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9277033,"byte_end":9277055,"line_start":337,"line_end":337,"column_start":5,"column_end":27}},{"value":"/         }).await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9277060,"byte_end":9277081,"line_start":338,"line_end":338,"column_start":5,"column_end":26}},{"value":"/         // ...","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9277086,"byte_end":9277104,"line_start":339,"line_end":339,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9277109,"byte_end":9277120,"line_start":340,"line_end":340,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9277125,"byte_end":9277153,"line_start":341,"line_end":341,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9277158,"byte_end":9277164,"line_start":342,"line_end":342,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9277169,"byte_end":9277176,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9277181,"byte_end":9277184,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9277189,"byte_end":9277224,"line_start":345,"line_end":345,"column_start":5,"column_end":40}},{"value":"/ [`Runtime::block_on`]: method@crate::runtime::Runtime::block_on","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9277229,"byte_end":9277296,"line_start":346,"line_end":346,"column_start":5,"column_end":72}},{"value":"/ [in-place blocking]: fn@crate::task::block_in_place","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9277301,"byte_end":9277356,"line_start":347,"line_end":347,"column_start":5,"column_end":60}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9277361,"byte_end":9277415,"line_start":348,"line_end":348,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":8412},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9278686,"byte_end":9278695,"line_start":384,"line_end":384,"column_start":18,"column_end":27},"name":"run_until","qualname":"<LocalSet>::run_until","value":"pub async fn run_until<F, '_>(&'_ Self, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the local set, returning its output.","sig":null,"attributes":[{"value":"/ Run a future to completion on the local set, returning its output.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9277594,"byte_end":9277664,"line_start":356,"line_end":356,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9277669,"byte_end":9277672,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This returns a future that runs the given future with a local set,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9277677,"byte_end":9277747,"line_start":358,"line_end":358,"column_start":5,"column_end":75}},{"value":"/ allowing it to call [`spawn_local`] to spawn additional `!Send` futures.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9277752,"byte_end":9277828,"line_start":359,"line_end":359,"column_start":5,"column_end":81}},{"value":"/ Any local futures spawned on the local set will be driven in the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9277833,"byte_end":9277901,"line_start":360,"line_end":360,"column_start":5,"column_end":73}},{"value":"/ background until the future passed to `run_until` completes. When the future","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9277906,"byte_end":9277986,"line_start":361,"line_end":361,"column_start":5,"column_end":85}},{"value":"/ passed to `run` finishes, any local futures which have not completed","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9277991,"byte_end":9278063,"line_start":362,"line_end":362,"column_start":5,"column_end":77}},{"value":"/ will remain on the local set, and will be driven on subsequent calls to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9278068,"byte_end":9278143,"line_start":363,"line_end":363,"column_start":5,"column_end":80}},{"value":"/ `run_until` or when [awaiting the local set] itself.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9278148,"byte_end":9278204,"line_start":364,"line_end":364,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9278209,"byte_end":9278212,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9278217,"byte_end":9278231,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9278236,"byte_end":9278239,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9278244,"byte_end":9278255,"line_start":368,"line_end":368,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9278260,"byte_end":9278280,"line_start":369,"line_end":369,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9278285,"byte_end":9278288,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9278293,"byte_end":9278311,"line_start":371,"line_end":371,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9278316,"byte_end":9278337,"line_start":372,"line_end":372,"column_start":5,"column_end":26}},{"value":"/     task::LocalSet::new().run_until(async {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9278342,"byte_end":9278389,"line_start":373,"line_end":373,"column_start":5,"column_end":52}},{"value":"/         task::spawn_local(async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9278394,"byte_end":9278436,"line_start":374,"line_end":374,"column_start":5,"column_end":47}},{"value":"/             // ...","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9278441,"byte_end":9278463,"line_start":375,"line_end":375,"column_start":5,"column_end":27}},{"value":"/         }).await.unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9278468,"byte_end":9278498,"line_start":376,"line_end":376,"column_start":5,"column_end":35}},{"value":"/         // ...","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9278503,"byte_end":9278521,"line_start":377,"line_end":377,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9278526,"byte_end":9278543,"line_start":378,"line_end":378,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9278548,"byte_end":9278553,"line_start":379,"line_end":379,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9278558,"byte_end":9278565,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9278570,"byte_end":9278573,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9278578,"byte_end":9278613,"line_start":382,"line_end":382,"column_start":5,"column_end":40}},{"value":"/ [awaiting the local set]: #awaiting-a-localset","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9278618,"byte_end":9278668,"line_start":383,"line_end":383,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":8469},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287612,"byte_end":9287620,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { inner }","parent":null,"children":[{"krate":0,"index":8471}],"decl_id":null,"docs":" A key for task-local data.","sig":null,"attributes":[{"value":"/ A key for task-local data.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9286779,"byte_end":9286809,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9286810,"byte_end":9286813,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This type is generated by the `task_local!` macro.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9286814,"byte_end":9286868,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9286869,"byte_end":9286872,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Unlike [`std::thread::LocalKey`], `tokio::task::LocalKey` will","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9286873,"byte_end":9286939,"line_start":66,"line_end":66,"column_start":1,"column_end":67}},{"value":"/ _not_ lazily initialize the value on first access. Instead, the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9286940,"byte_end":9287007,"line_start":67,"line_end":67,"column_start":1,"column_end":68}},{"value":"/ value is first initialized when the future containing","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287008,"byte_end":9287065,"line_start":68,"line_end":68,"column_start":1,"column_end":58}},{"value":"/ the task-local is first polled by a futures executor, like Tokio.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287066,"byte_end":9287135,"line_start":69,"line_end":69,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287136,"byte_end":9287139,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287140,"byte_end":9287154,"line_start":71,"line_end":71,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287155,"byte_end":9287158,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287159,"byte_end":9287166,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287167,"byte_end":9287189,"line_start":74,"line_end":74,"column_start":1,"column_end":23}},{"value":"/ tokio::task_local! {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287190,"byte_end":9287214,"line_start":75,"line_end":75,"column_start":1,"column_end":25}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287215,"byte_end":9287242,"line_start":76,"line_end":76,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287243,"byte_end":9287248,"line_start":77,"line_end":77,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287249,"byte_end":9287252,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287253,"byte_end":9287285,"line_start":79,"line_end":79,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 1);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287286,"byte_end":9287322,"line_start":80,"line_end":80,"column_start":1,"column_end":37}},{"value":"/ }).await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287323,"byte_end":9287336,"line_start":81,"line_end":81,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287337,"byte_end":9287340,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(2, async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287341,"byte_end":9287373,"line_start":83,"line_end":83,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 2);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287374,"byte_end":9287410,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287411,"byte_end":9287414,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/     NUMBER.scope(3, async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287415,"byte_end":9287451,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/         assert_eq!(NUMBER.get(), 3);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287452,"byte_end":9287492,"line_start":87,"line_end":87,"column_start":1,"column_end":41}},{"value":"/     }).await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287493,"byte_end":9287510,"line_start":88,"line_end":88,"column_start":1,"column_end":18}},{"value":"/ }).await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287511,"byte_end":9287524,"line_start":89,"line_end":89,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287525,"byte_end":9287532,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287533,"byte_end":9287540,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ [`std::thread::LocalKey`]: struct@std::thread::LocalKey","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287541,"byte_end":9287600,"line_start":92,"line_end":92,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":8471},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287662,"byte_end":9287667,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"name":"inner","qualname":"::task::task_local::LocalKey::inner","value":"std::thread::LocalKey<std::cell::RefCell<std::option::Option<T>>>","parent":{"krate":0,"index":8469},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8474},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9288195,"byte_end":9288200,"line_start":116,"line_end":116,"column_start":18,"column_end":23},"name":"scope","qualname":"<LocalKey<T>>::scope","value":"pub async fn scope<F>(&'static Self, T, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the future `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the future `F`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287745,"byte_end":9287809,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287814,"byte_end":9287817,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287822,"byte_end":9287883,"line_start":101,"line_end":101,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287888,"byte_end":9287891,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287896,"byte_end":9287912,"line_start":103,"line_end":103,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287917,"byte_end":9287920,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287925,"byte_end":9287932,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287937,"byte_end":9287959,"line_start":106,"line_end":106,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287964,"byte_end":9287988,"line_start":107,"line_end":107,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287993,"byte_end":9288020,"line_start":108,"line_end":108,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9288025,"byte_end":9288030,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9288035,"byte_end":9288038,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9288043,"byte_end":9288075,"line_start":111,"line_end":111,"column_start":5,"column_end":37}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9288080,"byte_end":9288135,"line_start":112,"line_end":112,"column_start":5,"column_end":60}},{"value":"/ }).await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9288140,"byte_end":9288153,"line_start":113,"line_end":113,"column_start":5,"column_end":18}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9288158,"byte_end":9288165,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9288170,"byte_end":9288177,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8478},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9288674,"byte_end":9288678,"line_start":134,"line_end":134,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9288425,"byte_end":9288491,"line_start":128,"line_end":128,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9288496,"byte_end":9288499,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9288504,"byte_end":9288516,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9288521,"byte_end":9288524,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9288529,"byte_end":9288590,"line_start":132,"line_end":132,"column_start":5,"column_end":66}},{"value":"/ of a future containing a task-local with the corresponding key.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9288595,"byte_end":9288662,"line_start":133,"line_end":133,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":8481},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9289166,"byte_end":9289174,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"pub fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9288919,"byte_end":9288985,"line_start":144,"line_end":144,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9288990,"byte_end":9288993,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ If the task-local with the accociated key is not present, this","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9288998,"byte_end":9289064,"line_start":146,"line_end":146,"column_start":5,"column_end":71}},{"value":"/ method will return an `AccessError`. For a panicking variant,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9289069,"byte_end":9289134,"line_start":147,"line_end":147,"column_start":5,"column_end":70}},{"value":"/ see `with`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9289139,"byte_end":9289154,"line_start":148,"line_end":148,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8487},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9289634,"byte_end":9289637,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"get","qualname":"<LocalKey<T>>::get","value":"pub fn get(&'static Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the task-local value\n if the task-local value implements `Copy`.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the task-local value","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9289529,"byte_end":9289571,"line_start":164,"line_end":164,"column_start":5,"column_end":47}},{"value":"/ if the task-local value implements `Copy`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9289576,"byte_end":9289622,"line_start":165,"line_end":165,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":8529},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9291126,"byte_end":9291137,"line_start":224,"line_end":224,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":8530}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).\n","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9291001,"byte_end":9291076,"line_start":222,"line_end":222,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":8541},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","parent":null,"children":[{"krate":0,"index":8542},{"krate":0,"index":8543},{"krate":0,"index":8544},{"krate":0,"index":8620},{"krate":0,"index":8621},{"krate":0,"index":8641},{"krate":0,"index":8642},{"krate":0,"index":8643},{"krate":0,"index":8644},{"krate":0,"index":8645},{"krate":0,"index":8822},{"krate":0,"index":8835},{"krate":0,"index":8836},{"krate":0,"index":8872},{"krate":0,"index":8873},{"krate":0,"index":8896},{"krate":0,"index":8897},{"krate":0,"index":8898},{"krate":0,"index":8899},{"krate":0,"index":8900},{"krate":0,"index":8934},{"krate":0,"index":8935},{"krate":0,"index":8936},{"krate":0,"index":8937},{"krate":0,"index":8938},{"krate":0,"index":9174},{"krate":0,"index":9198},{"krate":0,"index":9199},{"krate":0,"index":9200},{"krate":0,"index":8939},{"krate":0,"index":9003},{"krate":0,"index":9004},{"krate":0,"index":9009}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23098,"byte_end":23122,"line_start":324,"line_end":324,"column_start":13,"column_end":37}},{"value":"/ Utilities for tracking time.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9291510,"byte_end":9291542,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9291543,"byte_end":9291546,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a number of types for executing code after a set period","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9291547,"byte_end":9291627,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ of time.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9291628,"byte_end":9291640,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9291641,"byte_end":9291644,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * `Delay` is a future that does no work and completes at a specific `Instant`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9291645,"byte_end":9291726,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"/   in time.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9291727,"byte_end":9291741,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9291742,"byte_end":9291745,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `Interval` is a stream yielding a value at a fixed period. It is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9291746,"byte_end":9291816,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/   initialized with a `Duration` and repeatedly yields each time the duration","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9291817,"byte_end":9291897,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/   elapses.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9291898,"byte_end":9291912,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9291913,"byte_end":9291916,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * `Timeout`: Wraps a future or stream, setting an upper bound to the amount","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9291917,"byte_end":9291996,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/   of time it is allowed to execute. If the future or stream does not","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9291997,"byte_end":9292069,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/   complete in time, then it is canceled and an error is returned.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292070,"byte_end":9292139,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292140,"byte_end":9292143,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * `DelayQueue`: A queue where items are returned once the requested delay","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292144,"byte_end":9292221,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/   has expired.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292222,"byte_end":9292240,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292241,"byte_end":9292244,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ These types are sufficient for handling a large number of scenarios","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292245,"byte_end":9292316,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ involving time.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292317,"byte_end":9292336,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292337,"byte_end":9292340,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ These types must be used from within the context of the `Runtime`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292341,"byte_end":9292411,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292412,"byte_end":9292415,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292416,"byte_end":9292430,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292431,"byte_end":9292434,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292435,"byte_end":9292481,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292482,"byte_end":9292485,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292486,"byte_end":9292493,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::delay_for;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292494,"byte_end":9292525,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292526,"byte_end":9292529,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292530,"byte_end":9292558,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292559,"byte_end":9292562,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292563,"byte_end":9292566,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292567,"byte_end":9292585,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292586,"byte_end":9292607,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292608,"byte_end":9292660,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292661,"byte_end":9292701,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292702,"byte_end":9292707,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292708,"byte_end":9292715,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292716,"byte_end":9292719,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Require that an operation takes no more than 300ms. Note that this uses the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292720,"byte_end":9292799,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ `timeout` function on the `FutureExt` trait. This trait is included in the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292800,"byte_end":9292878,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ prelude.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292879,"byte_end":9292891,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292892,"byte_end":9292895,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292896,"byte_end":9292903,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{timeout, Duration};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292904,"byte_end":9292945,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292946,"byte_end":9292949,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ async fn long_future() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292950,"byte_end":9292978,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/     // do work here","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9292979,"byte_end":9293002,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293003,"byte_end":9293008,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293009,"byte_end":9293012,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293013,"byte_end":9293035,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/ let res = timeout(Duration::from_secs(1), long_future()).await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293036,"byte_end":9293103,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293104,"byte_end":9293107,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ if res.is_err() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293108,"byte_end":9293129,"line_start":56,"line_end":56,"column_start":1,"column_end":22}},{"value":"/     println!(\"operation timed out\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293130,"byte_end":9293170,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293171,"byte_end":9293176,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293177,"byte_end":9293184,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293185,"byte_end":9293192,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293193,"byte_end":9293196,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ A simple example using [`interval`] to execute a task every two seconds.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293197,"byte_end":9293273,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293274,"byte_end":9293277,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The difference between [`interval`] and [`delay_for`] is that an","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293278,"byte_end":9293346,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"/ [`interval`] measures the time since the last tick, which means that","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293347,"byte_end":9293419,"line_start":65,"line_end":65,"column_start":1,"column_end":73}},{"value":"/ `.tick().await` may wait for a shorter time than the duration specified","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293420,"byte_end":9293495,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ for the interval if some time has passed between calls to `.tick().await`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293496,"byte_end":9293574,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293575,"byte_end":9293578,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`delay_for`], the task","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293579,"byte_end":9293657,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293658,"byte_end":9293728,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293729,"byte_end":9293741,"line_start":71,"line_end":71,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293742,"byte_end":9293745,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293746,"byte_end":9293753,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293754,"byte_end":9293774,"line_start":74,"line_end":74,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293775,"byte_end":9293778,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293779,"byte_end":9293820,"line_start":76,"line_end":76,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293821,"byte_end":9293847,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/     time::delay_for(time::Duration::from_secs(1)).await","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293848,"byte_end":9293907,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293908,"byte_end":9293913,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293914,"byte_end":9293917,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293918,"byte_end":9293936,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293937,"byte_end":9293958,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9293959,"byte_end":9294031,"line_start":83,"line_end":83,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9294032,"byte_end":9294056,"line_start":84,"line_end":84,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9294057,"byte_end":9294091,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9294092,"byte_end":9294137,"line_start":86,"line_end":86,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9294138,"byte_end":9294147,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9294148,"byte_end":9294153,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9294154,"byte_end":9294161,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9294162,"byte_end":9294165,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ [`delay_for`]: crate::time::delay_for()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9294166,"byte_end":9294209,"line_start":91,"line_end":91,"column_start":1,"column_end":44}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9294210,"byte_end":9294251,"line_start":92,"line_end":92,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":8544},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay_queue","qualname":"::time::delay_queue","value":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","parent":null,"children":[{"krate":0,"index":8545},{"krate":0,"index":8546},{"krate":0,"index":8547},{"krate":0,"index":8548},{"krate":0,"index":8549},{"krate":0,"index":8550},{"krate":0,"index":8551},{"krate":0,"index":8552},{"krate":0,"index":8553},{"krate":0,"index":8554},{"krate":0,"index":8555},{"krate":0,"index":8556},{"krate":0,"index":8557},{"krate":0,"index":15823},{"krate":0,"index":8558},{"krate":0,"index":8559},{"krate":0,"index":8560},{"krate":0,"index":8561},{"krate":0,"index":9026},{"krate":0,"index":9034},{"krate":0,"index":9037},{"krate":0,"index":9042},{"krate":0,"index":9045},{"krate":0,"index":9049},{"krate":0,"index":9047},{"krate":0,"index":9051},{"krate":0,"index":9055},{"krate":0,"index":9058},{"krate":0,"index":9065},{"krate":0,"index":8562},{"krate":0,"index":8563},{"krate":0,"index":8590},{"krate":0,"index":8592},{"krate":0,"index":8595},{"krate":0,"index":8599},{"krate":0,"index":8609},{"krate":0,"index":8612},{"krate":0,"index":8614}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9300402,"byte_end":9300434,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9300435,"byte_end":9300438,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See [`DelayQueue`] for more details.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9300439,"byte_end":9300479,"line_start":3,"line_end":3,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9300480,"byte_end":9300483,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9300484,"byte_end":9300521,"line_start":5,"line_end":5,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":9026},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9304780,"byte_end":9304790,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"DelayQueue","qualname":"::time::delay_queue::DelayQueue","value":"DelayQueue {  }","parent":null,"children":[{"krate":0,"index":9028},{"krate":0,"index":9029},{"krate":0,"index":9030},{"krate":0,"index":9031},{"krate":0,"index":9032},{"krate":0,"index":9033}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9300762,"byte_end":9300794,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9300795,"byte_end":9300798,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Once an element is inserted into the `DelayQueue`, it is yielded once the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9300799,"byte_end":9300876,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ specified deadline has been reached.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9300877,"byte_end":9300917,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9300918,"byte_end":9300921,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9300922,"byte_end":9300933,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9300934,"byte_end":9300937,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Elements are inserted into `DelayQueue` using the [`insert`] or","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9300938,"byte_end":9301005,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ [`insert_at`] methods. A deadline is provided with the item and a [`Key`] is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9301006,"byte_end":9301086,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ returned. The key is used to remove the entry or to change the deadline at","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9301087,"byte_end":9301165,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ which it should be yielded back.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9301166,"byte_end":9301202,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9301203,"byte_end":9301206,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Once delays have been configured, the `DelayQueue` is used via its","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9301207,"byte_end":9301277,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ [`Stream`] implementation. [`poll`] is called. If an entry has reached its","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9301278,"byte_end":9301356,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ deadline, it is returned. If not, `Poll::Pending` indicating that the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9301357,"byte_end":9301430,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ current task will be notified once the deadline has been reached.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9301431,"byte_end":9301500,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9301501,"byte_end":9301504,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # `Stream` implementation","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9301505,"byte_end":9301534,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9301535,"byte_end":9301538,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Items are retrieved from the queue via [`Stream::poll`]. If no delays have","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9301539,"byte_end":9301617,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ expired, no items are returned. In this case, `NotReady` is returned and the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9301618,"byte_end":9301698,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ current task is registered to be notified once the next item's delay has","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9301699,"byte_end":9301775,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ expired.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9301776,"byte_end":9301788,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9301789,"byte_end":9301792,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ If no items are in the queue, i.e. `is_empty()` returns `true`, then `poll`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9301793,"byte_end":9301872,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ returns `Ready(None)`. This indicates that the stream has reached an end.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9301873,"byte_end":9301950,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ However, if a new item is inserted *after*, `poll` will once again start","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9301951,"byte_end":9302027,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ returning items or `NotReady.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9302028,"byte_end":9302061,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9302062,"byte_end":9302065,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Items are returned ordered by their expirations. Items that are configured","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9302066,"byte_end":9302144,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ to expire first will be returned first. There are no ordering guarantees","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9302145,"byte_end":9302221,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ for items configured to expire the same instant. Also note that delays are","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9302222,"byte_end":9302300,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ rounded to the closest millisecond.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9302301,"byte_end":9302340,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9302341,"byte_end":9302344,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9302345,"byte_end":9302365,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9302366,"byte_end":9302369,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The [`DelayQueue`] is backed by a separate instance of the same timer wheel used internally by","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9302370,"byte_end":9302468,"line_start":53,"line_end":53,"column_start":1,"column_end":99}},{"value":"/ Tokio's standalone timer utilities such as [`delay_for`]. Because of this, it offers the same","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9302469,"byte_end":9302566,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ performance and scalability benefits.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9302567,"byte_end":9302608,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9302609,"byte_end":9302612,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ State associated with each entry is stored in a [`slab`]. This amortizes the cost of allocation,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9302613,"byte_end":9302713,"line_start":57,"line_end":57,"column_start":1,"column_end":101}},{"value":"/ and allows reuse of the memory allocated for expired entires.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9302714,"byte_end":9302779,"line_start":58,"line_end":58,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9302780,"byte_end":9302783,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Capacity can be checked using [`capacity`] and allocated preemptively by using","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9302784,"byte_end":9302866,"line_start":60,"line_end":60,"column_start":1,"column_end":83}},{"value":"/ the [`reserve`] method.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9302867,"byte_end":9302894,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9302895,"byte_end":9302898,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9302899,"byte_end":9302910,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9302911,"byte_end":9302914,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Using `DelayQueue` to manage cache entries.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9302915,"byte_end":9302962,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9302963,"byte_end":9302966,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9302967,"byte_end":9302985,"line_start":67,"line_end":67,"column_start":1,"column_end":19}},{"value":"/ use tokio::time::{delay_queue, DelayQueue, Error};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9302986,"byte_end":9303040,"line_start":68,"line_end":68,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303041,"byte_end":9303044,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ use futures::ready;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303045,"byte_end":9303068,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303069,"byte_end":9303103,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303104,"byte_end":9303139,"line_start":72,"line_end":72,"column_start":1,"column_end":36}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303140,"byte_end":9303168,"line_start":73,"line_end":73,"column_start":1,"column_end":29}},{"value":"/ # type CacheKey = String;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303169,"byte_end":9303198,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/ # type Value = String;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303199,"byte_end":9303225,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303226,"byte_end":9303229,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ struct Cache {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303230,"byte_end":9303248,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/     entries: HashMap<CacheKey, (Value, delay_queue::Key)>,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303249,"byte_end":9303311,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/     expirations: DelayQueue<CacheKey>,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303312,"byte_end":9303354,"line_start":79,"line_end":79,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303355,"byte_end":9303360,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303361,"byte_end":9303364,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ const TTL_SECS: u64 = 30;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303365,"byte_end":9303394,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303395,"byte_end":9303398,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ impl Cache {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303399,"byte_end":9303415,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/     fn insert(&mut self, key: CacheKey, value: Value) {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303416,"byte_end":9303475,"line_start":85,"line_end":85,"column_start":1,"column_end":60}},{"value":"/         let delay = self.expirations","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303476,"byte_end":9303516,"line_start":86,"line_end":86,"column_start":1,"column_end":41}},{"value":"/             .insert(key.clone(), Duration::from_secs(TTL_SECS));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303517,"byte_end":9303585,"line_start":87,"line_end":87,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303586,"byte_end":9303589,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/         self.entries.insert(key, (value, delay));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303590,"byte_end":9303643,"line_start":89,"line_end":89,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303644,"byte_end":9303653,"line_start":90,"line_end":90,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303654,"byte_end":9303657,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/     fn get(&self, key: &CacheKey) -> Option<&Value> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303658,"byte_end":9303715,"line_start":92,"line_end":92,"column_start":1,"column_end":58}},{"value":"/         self.entries.get(key)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303716,"byte_end":9303749,"line_start":93,"line_end":93,"column_start":1,"column_end":34}},{"value":"/             .map(|&(ref v, _)| v)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303750,"byte_end":9303787,"line_start":94,"line_end":94,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303788,"byte_end":9303797,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303798,"byte_end":9303801,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn remove(&mut self, key: &CacheKey) {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303802,"byte_end":9303848,"line_start":97,"line_end":97,"column_start":1,"column_end":47}},{"value":"/         if let Some((_, cache_key)) = self.entries.remove(key) {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303849,"byte_end":9303917,"line_start":98,"line_end":98,"column_start":1,"column_end":69}},{"value":"/             self.expirations.remove(&cache_key);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303918,"byte_end":9303970,"line_start":99,"line_end":99,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303971,"byte_end":9303984,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303985,"byte_end":9303994,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303995,"byte_end":9303998,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/     fn poll_purge(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Error>> {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9303999,"byte_end":9304082,"line_start":103,"line_end":103,"column_start":1,"column_end":84}},{"value":"/         while let Some(res) = ready!(self.expirations.poll_expired(cx)) {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9304083,"byte_end":9304160,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/             let entry = res?;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9304161,"byte_end":9304194,"line_start":105,"line_end":105,"column_start":1,"column_end":34}},{"value":"/             self.entries.remove(entry.get_ref());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9304195,"byte_end":9304248,"line_start":106,"line_end":106,"column_start":1,"column_end":54}},{"value":"/         }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9304249,"byte_end":9304262,"line_start":107,"line_end":107,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9304263,"byte_end":9304266,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9304267,"byte_end":9304298,"line_start":109,"line_end":109,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9304299,"byte_end":9304308,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9304309,"byte_end":9304314,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9304315,"byte_end":9304322,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9304323,"byte_end":9304326,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`insert`]: method@Self::insert","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9304327,"byte_end":9304362,"line_start":114,"line_end":114,"column_start":1,"column_end":36}},{"value":"/ [`insert_at`]: method@Self::insert_at","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9304363,"byte_end":9304404,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9304405,"byte_end":9304428,"line_start":116,"line_end":116,"column_start":1,"column_end":24}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9304429,"byte_end":9304505,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/ [`poll`]: method@Self::poll","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9304506,"byte_end":9304537,"line_start":118,"line_end":118,"column_start":1,"column_end":32}},{"value":"/ [`Stream::poll`]: method@Self::poll","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9304538,"byte_end":9304577,"line_start":119,"line_end":119,"column_start":1,"column_end":40}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9304578,"byte_end":9304615,"line_start":120,"line_end":120,"column_start":1,"column_end":38}},{"value":"/ [`delay_for`]: fn@super::delay_for","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9304616,"byte_end":9304654,"line_start":121,"line_end":121,"column_start":1,"column_end":39}},{"value":"/ [`slab`]: slab","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9304655,"byte_end":9304673,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/ [`capacity`]: method@Self::capacity","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9304674,"byte_end":9304713,"line_start":123,"line_end":123,"column_start":1,"column_end":40}},{"value":"/ [`reserve`]: method@Self::reserve","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9304714,"byte_end":9304751,"line_start":124,"line_end":124,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":9037},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9305481,"byte_end":9305488,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"Expired","qualname":"::time::delay_queue::Expired","value":"Expired {  }","parent":null,"children":[{"krate":0,"index":9039},{"krate":0,"index":9040},{"krate":0,"index":9041}],"decl_id":null,"docs":" An entry in `DelayQueue` that has expired and removed.","sig":null,"attributes":[{"value":"/ An entry in `DelayQueue` that has expired and removed.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9305287,"byte_end":9305345,"line_start":147,"line_end":147,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9305346,"byte_end":9305349,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ Values are returned by [`DelayQueue::poll`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9305350,"byte_end":9305398,"line_start":149,"line_end":149,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9305399,"byte_end":9305402,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue::poll`]: method@DelayQueue::poll","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9305403,"byte_end":9305452,"line_start":151,"line_end":151,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":9045},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9305956,"byte_end":9305959,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"Key","qualname":"::time::delay_queue::Key","value":"Key {  }","parent":null,"children":[{"krate":0,"index":9046}],"decl_id":null,"docs":" Token to a value stored in a `DelayQueue`.","sig":null,"attributes":[{"value":"/ Token to a value stored in a `DelayQueue`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9305656,"byte_end":9305702,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9305703,"byte_end":9305706,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Instances of `Key` are returned by [`DelayQueue::insert`]. See [`DelayQueue`]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9305707,"byte_end":9305788,"line_start":166,"line_end":166,"column_start":1,"column_end":82}},{"value":"/ documentation for more details.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9305789,"byte_end":9305824,"line_start":167,"line_end":167,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9305825,"byte_end":9305828,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9305829,"byte_end":9305866,"line_start":169,"line_end":169,"column_start":1,"column_end":38}},{"value":"/ [`DelayQueue::insert`]: method@DelayQueue::insert","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9305867,"byte_end":9305920,"line_start":170,"line_end":170,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":8565},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9306937,"byte_end":9306940,"line_start":216,"line_end":216,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayQueue<T>>::new","value":"pub fn new() -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue`","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9306637,"byte_end":9306675,"line_start":206,"line_end":206,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9306680,"byte_end":9306683,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ The queue will not allocate storage until items are inserted into it.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9306688,"byte_end":9306761,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9306766,"byte_end":9306769,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9306774,"byte_end":9306788,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9306793,"byte_end":9306796,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9306801,"byte_end":9306812,"line_start":212,"line_end":212,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9306817,"byte_end":9306851,"line_start":213,"line_end":213,"column_start":5,"column_end":39}},{"value":"/ let delay_queue: DelayQueue<u32> = DelayQueue::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9306856,"byte_end":9306913,"line_start":214,"line_end":214,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9306918,"byte_end":9306925,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8566},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9307858,"byte_end":9307871,"line_start":245,"line_end":245,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<DelayQueue<T>>::with_capacity","value":"pub fn with_capacity(usize) -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue` with the specified capacity.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9307010,"byte_end":9307077,"line_start":220,"line_end":220,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9307082,"byte_end":9307085,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The queue will be able to hold at least `capacity` elements without","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9307090,"byte_end":9307161,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ reallocating. If `capacity` is 0, the queue will not allocate for","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9307166,"byte_end":9307235,"line_start":223,"line_end":223,"column_start":5,"column_end":74}},{"value":"/ storage.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9307240,"byte_end":9307252,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9307257,"byte_end":9307260,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9307265,"byte_end":9307279,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9307284,"byte_end":9307287,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9307292,"byte_end":9307303,"line_start":228,"line_end":228,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9307308,"byte_end":9307342,"line_start":229,"line_end":229,"column_start":5,"column_end":39}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9307347,"byte_end":9307377,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9307382,"byte_end":9307385,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9307390,"byte_end":9307410,"line_start":232,"line_end":232,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9307415,"byte_end":9307438,"line_start":233,"line_end":233,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::with_capacity(10);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9307443,"byte_end":9307503,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9307508,"byte_end":9307511,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/     // These insertions are done without further allocation","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9307516,"byte_end":9307579,"line_start":236,"line_end":236,"column_start":5,"column_end":68}},{"value":"/     for i in 0..10 {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9307584,"byte_end":9307608,"line_start":237,"line_end":237,"column_start":5,"column_end":29}},{"value":"/         delay_queue.insert(i, Duration::from_secs(i));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9307613,"byte_end":9307671,"line_start":238,"line_end":238,"column_start":5,"column_end":63}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9307676,"byte_end":9307685,"line_start":239,"line_end":239,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9307690,"byte_end":9307693,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     // This will make the queue allocate additional storage","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9307698,"byte_end":9307761,"line_start":241,"line_end":241,"column_start":5,"column_end":68}},{"value":"/     delay_queue.insert(11, Duration::from_secs(11));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9307766,"byte_end":9307822,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9307827,"byte_end":9307834,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9307839,"byte_end":9307846,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8567},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309907,"byte_end":9309916,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"name":"insert_at","qualname":"<DelayQueue<T>>::insert_at","value":"pub fn insert_at(&mut Self, T, Instant) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire at a specific instant in\n time.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire at a specific instant in","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9308170,"byte_end":9308243,"line_start":256,"line_end":256,"column_start":5,"column_end":78}},{"value":"/ time.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9308248,"byte_end":9308257,"line_start":257,"line_end":257,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9308262,"byte_end":9308265,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert`, but takes an `Instant` instead","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9308270,"byte_end":9308344,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/ of a `Duration`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9308349,"byte_end":9308369,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9308374,"byte_end":9308377,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9308382,"byte_end":9308457,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll`]. If `when` has already been","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9308462,"byte_end":9308532,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9308537,"byte_end":9308601,"line_start":264,"line_end":264,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9308606,"byte_end":9308609,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9308614,"byte_end":9308689,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9308694,"byte_end":9308769,"line_start":267,"line_end":267,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll`] after","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9308774,"byte_end":9308844,"line_start":268,"line_end":268,"column_start":5,"column_end":75}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9308849,"byte_end":9308922,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9308927,"byte_end":9309003,"line_start":270,"line_end":270,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309008,"byte_end":9309042,"line_start":271,"line_end":271,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309047,"byte_end":9309050,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309055,"byte_end":9309107,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309112,"byte_end":9309115,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309120,"byte_end":9309132,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309137,"byte_end":9309140,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309145,"byte_end":9309205,"line_start":277,"line_end":277,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309210,"byte_end":9309213,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309218,"byte_end":9309232,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309237,"byte_end":9309240,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309245,"byte_end":9309260,"line_start":281,"line_end":281,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309265,"byte_end":9309268,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309273,"byte_end":9309284,"line_start":283,"line_end":283,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309289,"byte_end":9309342,"line_start":284,"line_end":284,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309347,"byte_end":9309350,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309355,"byte_end":9309375,"line_start":286,"line_end":286,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309380,"byte_end":9309403,"line_start":287,"line_end":287,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309408,"byte_end":9309456,"line_start":288,"line_end":288,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert_at(","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309461,"byte_end":9309501,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/         \"foo\", Instant::now() + Duration::from_secs(5));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309506,"byte_end":9309566,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309571,"byte_end":9309574,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309579,"byte_end":9309606,"line_start":292,"line_end":292,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309611,"byte_end":9309655,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309660,"byte_end":9309703,"line_start":294,"line_end":294,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309708,"byte_end":9309715,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309720,"byte_end":9309727,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309732,"byte_end":9309735,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: method@Self::poll","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309740,"byte_end":9309771,"line_start":298,"line_end":298,"column_start":5,"column_end":36}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309776,"byte_end":9309811,"line_start":299,"line_end":299,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309816,"byte_end":9309849,"line_start":300,"line_end":300,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309854,"byte_end":9309877,"line_start":301,"line_end":301,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9309882,"byte_end":9309895,"line_start":302,"line_end":302,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":8568},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9311276,"byte_end":9311288,"line_start":343,"line_end":343,"column_start":12,"column_end":24},"name":"poll_expired","qualname":"<DelayQueue<T>>::poll_expired","value":"pub fn poll_expired(&mut Self, &mut task::Context)\n-> Poll<Option<Result<Expired<T>, Error>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to pull out the next value of the delay queue, registering the\n current task for wakeup if the value is not yet available, and returning\n None if the queue is exhausted.\n","sig":null,"attributes":[{"value":"/ Attempts to pull out the next value of the delay queue, registering the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9311068,"byte_end":9311143,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ current task for wakeup if the value is not yet available, and returning","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9311148,"byte_end":9311224,"line_start":341,"line_end":341,"column_start":5,"column_end":81}},{"value":"/ None if the queue is exhausted.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9311229,"byte_end":9311264,"line_start":342,"line_end":342,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":8571},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9313660,"byte_end":9313666,"line_start":411,"line_end":411,"column_start":12,"column_end":18},"name":"insert","qualname":"<DelayQueue<T>>::insert","value":"pub fn insert(&mut Self, T, Duration) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire after the requested duration\n elapses.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire after the requested duration","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9311905,"byte_end":9311982,"line_start":363,"line_end":363,"column_start":5,"column_end":82}},{"value":"/ elapses.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9311987,"byte_end":9311999,"line_start":364,"line_end":364,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9312004,"byte_end":9312007,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert_at`, but takes a `Duration`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9312012,"byte_end":9312081,"line_start":366,"line_end":366,"column_start":5,"column_end":74}},{"value":"/ instead of an `Instant`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9312086,"byte_end":9312114,"line_start":367,"line_end":367,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9312119,"byte_end":9312122,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9312127,"byte_end":9312202,"line_start":369,"line_end":369,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll`]. If `when` has already been","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9312207,"byte_end":9312277,"line_start":370,"line_end":370,"column_start":5,"column_end":75}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9312282,"byte_end":9312346,"line_start":371,"line_end":371,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9312351,"byte_end":9312354,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9312359,"byte_end":9312434,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9312439,"byte_end":9312514,"line_start":374,"line_end":374,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll`] after","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9312519,"byte_end":9312589,"line_start":375,"line_end":375,"column_start":5,"column_end":75}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9312594,"byte_end":9312667,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9312672,"byte_end":9312748,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9312753,"byte_end":9312787,"line_start":378,"line_end":378,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9312792,"byte_end":9312795,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9312800,"byte_end":9312852,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9312857,"byte_end":9312860,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9312865,"byte_end":9312877,"line_start":382,"line_end":382,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9312882,"byte_end":9312885,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9312890,"byte_end":9312965,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ duration.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9312970,"byte_end":9312983,"line_start":385,"line_end":385,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9312988,"byte_end":9312991,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9312996,"byte_end":9313010,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9313015,"byte_end":9313018,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9313023,"byte_end":9313038,"line_start":389,"line_end":389,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9313043,"byte_end":9313046,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9313051,"byte_end":9313062,"line_start":391,"line_end":391,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9313067,"byte_end":9313099,"line_start":392,"line_end":392,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9313104,"byte_end":9313132,"line_start":393,"line_end":393,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9313137,"byte_end":9313140,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9313145,"byte_end":9313165,"line_start":395,"line_end":395,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9313170,"byte_end":9313193,"line_start":396,"line_end":396,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9313198,"byte_end":9313246,"line_start":397,"line_end":397,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9313251,"byte_end":9313319,"line_start":398,"line_end":398,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9313324,"byte_end":9313327,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9313332,"byte_end":9313359,"line_start":400,"line_end":400,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9313364,"byte_end":9313408,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9313413,"byte_end":9313456,"line_start":402,"line_end":402,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9313461,"byte_end":9313468,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9313473,"byte_end":9313480,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9313485,"byte_end":9313488,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: method@Self::poll","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9313493,"byte_end":9313524,"line_start":406,"line_end":406,"column_start":5,"column_end":36}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9313529,"byte_end":9313564,"line_start":407,"line_end":407,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9313569,"byte_end":9313602,"line_start":408,"line_end":408,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9313607,"byte_end":9313630,"line_start":409,"line_end":409,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9313635,"byte_end":9313648,"line_start":410,"line_end":410,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":8576},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9315211,"byte_end":9315217,"line_start":458,"line_end":458,"column_start":12,"column_end":18},"name":"remove","qualname":"<DelayQueue<T>>::remove","value":"pub fn remove(&mut Self, &Key) -> Expired<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the item associated with `key` from the queue.","sig":null,"attributes":[{"value":"/ Removes the item associated with `key` from the queue.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9314357,"byte_end":9314415,"line_start":430,"line_end":430,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9314420,"byte_end":9314423,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ There must be an item associated with `key`. The function returns the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9314428,"byte_end":9314501,"line_start":432,"line_end":432,"column_start":5,"column_end":78}},{"value":"/ removed item as well as the `Instant` at which it will the delay will","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9314506,"byte_end":9314579,"line_start":433,"line_end":433,"column_start":5,"column_end":78}},{"value":"/ have expired.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9314584,"byte_end":9314601,"line_start":434,"line_end":434,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9314606,"byte_end":9314609,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9314614,"byte_end":9314626,"line_start":436,"line_end":436,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9314631,"byte_end":9314634,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ The function panics if `key` is not contained by the queue.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9314639,"byte_end":9314702,"line_start":438,"line_end":438,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9314707,"byte_end":9314710,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9314715,"byte_end":9314729,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9314734,"byte_end":9314737,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9314742,"byte_end":9314757,"line_start":442,"line_end":442,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9314762,"byte_end":9314765,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9314770,"byte_end":9314781,"line_start":444,"line_end":444,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9314786,"byte_end":9314818,"line_start":445,"line_end":445,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9314823,"byte_end":9314851,"line_start":446,"line_end":446,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9314856,"byte_end":9314859,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9314864,"byte_end":9314884,"line_start":448,"line_end":448,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9314889,"byte_end":9314912,"line_start":449,"line_end":449,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9314917,"byte_end":9314965,"line_start":450,"line_end":450,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9314970,"byte_end":9315038,"line_start":451,"line_end":451,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9315043,"byte_end":9315046,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9315051,"byte_end":9315078,"line_start":453,"line_end":453,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9315083,"byte_end":9315127,"line_start":454,"line_end":454,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9315132,"byte_end":9315175,"line_start":455,"line_end":455,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9315180,"byte_end":9315187,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9315192,"byte_end":9315199,"line_start":457,"line_end":457,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8578},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9316869,"byte_end":9316877,"line_start":510,"line_end":510,"column_start":12,"column_end":20},"name":"reset_at","qualname":"<DelayQueue<T>>::reset_at","value":"pub fn reset_at(&mut Self, &Key, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire at `when`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire at `when`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9315755,"byte_end":9315828,"line_start":477,"line_end":477,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9315833,"byte_end":9315836,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset` but takes an `Instant` instead of","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9315841,"byte_end":9315916,"line_start":479,"line_end":479,"column_start":5,"column_end":80}},{"value":"/ a `Duration`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9315921,"byte_end":9315938,"line_start":480,"line_end":480,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9315943,"byte_end":9315946,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire at `when`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9315951,"byte_end":9316026,"line_start":482,"line_end":482,"column_start":5,"column_end":80}},{"value":"/ If `when` is in the past, then the item is immediately made available to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9316031,"byte_end":9316107,"line_start":483,"line_end":483,"column_start":5,"column_end":81}},{"value":"/ the caller.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9316112,"byte_end":9316127,"line_start":484,"line_end":484,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9316132,"byte_end":9316135,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9316140,"byte_end":9316152,"line_start":486,"line_end":486,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9316157,"byte_end":9316160,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future or if `key` is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9316165,"byte_end":9316239,"line_start":488,"line_end":488,"column_start":5,"column_end":79}},{"value":"/ not contained by the queue.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9316244,"byte_end":9316275,"line_start":489,"line_end":489,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9316280,"byte_end":9316283,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9316288,"byte_end":9316302,"line_start":491,"line_end":491,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9316307,"byte_end":9316310,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9316315,"byte_end":9316330,"line_start":493,"line_end":493,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9316335,"byte_end":9316338,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9316343,"byte_end":9316354,"line_start":495,"line_end":495,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9316359,"byte_end":9316412,"line_start":496,"line_end":496,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9316417,"byte_end":9316420,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9316425,"byte_end":9316445,"line_start":498,"line_end":498,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9316450,"byte_end":9316473,"line_start":499,"line_end":499,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9316478,"byte_end":9316526,"line_start":500,"line_end":500,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9316531,"byte_end":9316599,"line_start":501,"line_end":501,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9316604,"byte_end":9316607,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9316612,"byte_end":9316669,"line_start":503,"line_end":503,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9316674,"byte_end":9316677,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset_at(&key, Instant::now() + Duration::from_secs(10));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9316682,"byte_end":9316759,"line_start":505,"line_end":505,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9316764,"byte_end":9316767,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9316772,"byte_end":9316833,"line_start":507,"line_end":507,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9316838,"byte_end":9316845,"line_start":508,"line_end":508,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9316850,"byte_end":9316857,"line_start":509,"line_end":509,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8581},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318770,"byte_end":9318775,"line_start":567,"line_end":567,"column_start":12,"column_end":17},"name":"reset","qualname":"<DelayQueue<T>>::reset","value":"pub fn reset(&mut Self, &Key, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire after\n `timeout`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire after","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9317620,"byte_end":9317688,"line_start":532,"line_end":532,"column_start":5,"column_end":73}},{"value":"/ `timeout`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9317693,"byte_end":9317707,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9317712,"byte_end":9317715,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset_at` but takes a `Duration` instead","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9317720,"byte_end":9317795,"line_start":535,"line_end":535,"column_start":5,"column_end":80}},{"value":"/ of an `Instant`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9317800,"byte_end":9317820,"line_start":536,"line_end":536,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9317825,"byte_end":9317828,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire after","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9317833,"byte_end":9317903,"line_start":538,"line_end":538,"column_start":5,"column_end":75}},{"value":"/ `timeout`. If `timeout` is zero, then the item is immediately made","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9317908,"byte_end":9317978,"line_start":539,"line_end":539,"column_start":5,"column_end":75}},{"value":"/ available to the caller.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9317983,"byte_end":9318011,"line_start":540,"line_end":540,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318016,"byte_end":9318019,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318024,"byte_end":9318036,"line_start":542,"line_end":542,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318041,"byte_end":9318044,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318049,"byte_end":9318124,"line_start":544,"line_end":544,"column_start":5,"column_end":80}},{"value":"/ duration or if `key` is not contained by the queue.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318129,"byte_end":9318184,"line_start":545,"line_end":545,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318189,"byte_end":9318192,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318197,"byte_end":9318211,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318216,"byte_end":9318219,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318224,"byte_end":9318239,"line_start":549,"line_end":549,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318244,"byte_end":9318247,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318252,"byte_end":9318263,"line_start":551,"line_end":551,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318268,"byte_end":9318300,"line_start":552,"line_end":552,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318305,"byte_end":9318333,"line_start":553,"line_end":553,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318338,"byte_end":9318341,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318346,"byte_end":9318366,"line_start":555,"line_end":555,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318371,"byte_end":9318394,"line_start":556,"line_end":556,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318399,"byte_end":9318447,"line_start":557,"line_end":557,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318452,"byte_end":9318520,"line_start":558,"line_end":558,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318525,"byte_end":9318528,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318533,"byte_end":9318590,"line_start":560,"line_end":560,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318595,"byte_end":9318598,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset(&key, Duration::from_secs(10));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318603,"byte_end":9318660,"line_start":562,"line_end":562,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318665,"byte_end":9318668,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318673,"byte_end":9318734,"line_start":564,"line_end":564,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318739,"byte_end":9318746,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318751,"byte_end":9318758,"line_start":566,"line_end":566,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8582},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319617,"byte_end":9319622,"line_start":598,"line_end":598,"column_start":12,"column_end":17},"name":"clear","qualname":"<DelayQueue<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the queue, removing all items.","sig":null,"attributes":[{"value":"/ Clears the queue, removing all items.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318884,"byte_end":9318925,"line_start":571,"line_end":571,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318930,"byte_end":9318933,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ After calling `clear`, [`poll`] will return `Ok(Ready(None))`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9318938,"byte_end":9319004,"line_start":573,"line_end":573,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319009,"byte_end":9319012,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319017,"byte_end":9319083,"line_start":575,"line_end":575,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319088,"byte_end":9319091,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: method@Self::poll","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319096,"byte_end":9319127,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319132,"byte_end":9319135,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319140,"byte_end":9319154,"line_start":579,"line_end":579,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319159,"byte_end":9319162,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319167,"byte_end":9319178,"line_start":581,"line_end":581,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319183,"byte_end":9319215,"line_start":582,"line_end":582,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319220,"byte_end":9319248,"line_start":583,"line_end":583,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319253,"byte_end":9319256,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319261,"byte_end":9319281,"line_start":585,"line_end":585,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319286,"byte_end":9319309,"line_start":586,"line_end":586,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319314,"byte_end":9319362,"line_start":587,"line_end":587,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319367,"byte_end":9319370,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319375,"byte_end":9319433,"line_start":589,"line_end":589,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319438,"byte_end":9319441,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319446,"byte_end":9319487,"line_start":591,"line_end":591,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319492,"byte_end":9319495,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/     delay_queue.clear();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319500,"byte_end":9319528,"line_start":593,"line_end":593,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319533,"byte_end":9319536,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319541,"byte_end":9319581,"line_start":595,"line_end":595,"column_start":5,"column_end":45}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319586,"byte_end":9319593,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319598,"byte_end":9319605,"line_start":597,"line_end":597,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8583},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9320094,"byte_end":9320102,"line_start":615,"line_end":615,"column_start":12,"column_end":20},"name":"capacity","qualname":"<DelayQueue<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the queue can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the queue can hold without reallocating.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319777,"byte_end":9319852,"line_start":605,"line_end":605,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319857,"byte_end":9319860,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319865,"byte_end":9319879,"line_start":607,"line_end":607,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319884,"byte_end":9319887,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319892,"byte_end":9319903,"line_start":609,"line_end":609,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319908,"byte_end":9319940,"line_start":610,"line_end":610,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319945,"byte_end":9319948,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9319953,"byte_end":9320022,"line_start":612,"line_end":612,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(delay_queue.capacity(), 10);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9320027,"byte_end":9320070,"line_start":613,"line_end":613,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9320075,"byte_end":9320082,"line_start":614,"line_end":614,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8584},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9320670,"byte_end":9320673,"line_start":635,"line_end":635,"column_start":12,"column_end":15},"name":"len","qualname":"<DelayQueue<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements currently in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of elements currently in the queue.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9320161,"byte_end":9320219,"line_start":619,"line_end":619,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9320224,"byte_end":9320227,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9320232,"byte_end":9320246,"line_start":621,"line_end":621,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9320251,"byte_end":9320254,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9320259,"byte_end":9320270,"line_start":623,"line_end":623,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9320275,"byte_end":9320307,"line_start":624,"line_end":624,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9320312,"byte_end":9320340,"line_start":625,"line_end":625,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9320345,"byte_end":9320348,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9320353,"byte_end":9320373,"line_start":627,"line_end":627,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9320378,"byte_end":9320401,"line_start":628,"line_end":628,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9320406,"byte_end":9320483,"line_start":629,"line_end":629,"column_start":5,"column_end":82}},{"value":"/     assert_eq!(delay_queue.len(), 0);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9320488,"byte_end":9320529,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/     delay_queue.insert(3, Duration::from_secs(5));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9320534,"byte_end":9320588,"line_start":631,"line_end":631,"column_start":5,"column_end":59}},{"value":"/     assert_eq!(delay_queue.len(), 1);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9320593,"byte_end":9320634,"line_start":632,"line_end":632,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9320639,"byte_end":9320646,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9320651,"byte_end":9320658,"line_start":634,"line_end":634,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8585},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321882,"byte_end":9321889,"line_start":672,"line_end":672,"column_start":12,"column_end":19},"name":"reserve","qualname":"<DelayQueue<T>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more items to be queued\n without allocating.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more items to be queued","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9320727,"byte_end":9320798,"line_start":639,"line_end":639,"column_start":5,"column_end":76}},{"value":"/ without allocating.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9320803,"byte_end":9320826,"line_start":640,"line_end":640,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9320831,"byte_end":9320834,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ `reserve` does nothing if the queue already has sufficient capacity for","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9320839,"byte_end":9320914,"line_start":642,"line_end":642,"column_start":5,"column_end":80}},{"value":"/ `additional` more values. If more capacity is required, a new segment of","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9320919,"byte_end":9320995,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/ memory will be allocated and all existing values will be copied into it.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321000,"byte_end":9321076,"line_start":644,"line_end":644,"column_start":5,"column_end":81}},{"value":"/ As such, if the queue is already very large, a call to `reserve` can end","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321081,"byte_end":9321157,"line_start":645,"line_end":645,"column_start":5,"column_end":81}},{"value":"/ up being expensive.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321162,"byte_end":9321185,"line_start":646,"line_end":646,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321190,"byte_end":9321193,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ The queue may reserve more than `additional` extra space in order to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321198,"byte_end":9321270,"line_start":648,"line_end":648,"column_start":5,"column_end":77}},{"value":"/ avoid frequent reallocations.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321275,"byte_end":9321308,"line_start":649,"line_end":649,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321313,"byte_end":9321316,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321321,"byte_end":9321333,"line_start":651,"line_end":651,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321338,"byte_end":9321341,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity exceeds the maximum number of entries the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321346,"byte_end":9321418,"line_start":653,"line_end":653,"column_start":5,"column_end":77}},{"value":"/ queue can contain.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321423,"byte_end":9321445,"line_start":654,"line_end":654,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321450,"byte_end":9321453,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321458,"byte_end":9321472,"line_start":656,"line_end":656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321477,"byte_end":9321480,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321485,"byte_end":9321492,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321497,"byte_end":9321529,"line_start":659,"line_end":659,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321534,"byte_end":9321562,"line_start":660,"line_end":660,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321567,"byte_end":9321570,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321575,"byte_end":9321595,"line_start":662,"line_end":662,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321600,"byte_end":9321623,"line_start":663,"line_end":663,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321628,"byte_end":9321676,"line_start":664,"line_end":664,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321681,"byte_end":9321684,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(10));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321689,"byte_end":9321750,"line_start":666,"line_end":666,"column_start":5,"column_end":66}},{"value":"/     delay_queue.reserve(10);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321755,"byte_end":9321787,"line_start":667,"line_end":667,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321792,"byte_end":9321795,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.capacity() >= 11);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321800,"byte_end":9321846,"line_start":669,"line_end":669,"column_start":5,"column_end":51}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321851,"byte_end":9321858,"line_start":670,"line_end":670,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321863,"byte_end":9321870,"line_start":671,"line_end":671,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8586},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9322605,"byte_end":9322613,"line_start":696,"line_end":696,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<DelayQueue<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are no items in the queue.","sig":null,"attributes":[{"value":"/ Returns `true` if there are no items in the queue.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9321972,"byte_end":9322026,"line_start":676,"line_end":676,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9322031,"byte_end":9322034,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ Note that this function returns `false` even if all items have not yet","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9322039,"byte_end":9322113,"line_start":678,"line_end":678,"column_start":5,"column_end":79}},{"value":"/ expired and a call to `poll` will return `NotReady`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9322118,"byte_end":9322174,"line_start":679,"line_end":679,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9322179,"byte_end":9322182,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9322187,"byte_end":9322201,"line_start":681,"line_end":681,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9322206,"byte_end":9322209,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9322214,"byte_end":9322221,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9322226,"byte_end":9322258,"line_start":684,"line_end":684,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9322263,"byte_end":9322291,"line_start":685,"line_end":685,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9322296,"byte_end":9322299,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9322304,"byte_end":9322324,"line_start":687,"line_end":687,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9322329,"byte_end":9322352,"line_start":688,"line_end":688,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9322357,"byte_end":9322405,"line_start":689,"line_end":689,"column_start":5,"column_end":53}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9322410,"byte_end":9322450,"line_start":690,"line_end":690,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9322455,"byte_end":9322458,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(5));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9322463,"byte_end":9322523,"line_start":692,"line_end":692,"column_start":5,"column_end":65}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9322528,"byte_end":9322569,"line_start":693,"line_end":693,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9322574,"byte_end":9322581,"line_start":694,"line_end":694,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9322586,"byte_end":9322593,"line_start":695,"line_end":695,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8616},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9327276,"byte_end":9327283,"line_start":869,"line_end":869,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Expired<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9327221,"byte_end":9327264,"line_start":868,"line_end":868,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":8617},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9327392,"byte_end":9327399,"line_start":874,"line_end":874,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Expired<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner value.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9327329,"byte_end":9327380,"line_start":873,"line_end":873,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":8618},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9327517,"byte_end":9327527,"line_start":879,"line_end":879,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Expired<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the inner value.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the inner value.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9327457,"byte_end":9327505,"line_start":878,"line_end":878,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":8619},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9327638,"byte_end":9327646,"line_start":884,"line_end":884,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Expired<T>>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the deadline that the expiration was set to.\n","sig":null,"attributes":[{"value":"/ Returns the deadline that the expiration was set to.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9327570,"byte_end":9327626,"line_start":883,"line_end":883,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":8631},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9328224,"byte_end":9328235,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"delay_until","qualname":"::time::delay::delay_until","value":"pub fn delay_until(Instant) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Waits until `deadline` is reached.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9327850,"byte_end":9327888,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9327889,"byte_end":9327892,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9327893,"byte_end":9327968,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9327969,"byte_end":9328046,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9328047,"byte_end":9328082,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9328083,"byte_end":9328086,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9328087,"byte_end":9328105,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9328106,"byte_end":9328109,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9328110,"byte_end":9328186,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9328187,"byte_end":9328216,"line_start":17,"line_end":17,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":8632},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9329301,"byte_end":9329310,"line_start":55,"line_end":55,"column_start":8,"column_end":17},"name":"delay_for","qualname":"::time::delay::delay_for","value":"pub fn delay_for(Duration) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `duration` has elapsed.","sig":null,"attributes":[{"value":"/ Waits until `duration` has elapsed.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9328374,"byte_end":9328413,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9328414,"byte_end":9328417,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `delay_until(Instant::now() + duration)`. An asynchronous","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9328418,"byte_end":9328493,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ analog to `std::thread::sleep`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9328494,"byte_end":9328529,"line_start":26,"line_end":26,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9328530,"byte_end":9328533,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9328534,"byte_end":9328609,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9328610,"byte_end":9328687,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9328688,"byte_end":9328723,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9328724,"byte_end":9328727,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ To run something regularly on a schedule, see [`interval`].","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9328728,"byte_end":9328791,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9328792,"byte_end":9328795,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9328796,"byte_end":9328814,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9328815,"byte_end":9328818,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9328819,"byte_end":9328895,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9328896,"byte_end":9328925,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9328926,"byte_end":9328929,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9328930,"byte_end":9328944,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9328945,"byte_end":9328948,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\".","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9328949,"byte_end":9328996,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9328997,"byte_end":9329000,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9329001,"byte_end":9329008,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{delay_for, Duration};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9329009,"byte_end":9329052,"line_start":44,"line_end":44,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9329053,"byte_end":9329056,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9329057,"byte_end":9329075,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9329076,"byte_end":9329097,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9329098,"byte_end":9329150,"line_start":48,"line_end":48,"column_start":1,"column_end":53}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9329151,"byte_end":9329191,"line_start":49,"line_end":49,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9329192,"byte_end":9329197,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9329198,"byte_end":9329205,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9329206,"byte_end":9329209,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9329210,"byte_end":9329251,"line_start":53,"line_end":53,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":9068},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9329570,"byte_end":9329575,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"Delay","qualname":"::time::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":9069}],"decl_id":null,"docs":" Future returned by [`delay_until`](delay_until) and\n [`delay_for`](delay_for).\n","sig":null,"attributes":[{"value":"/ Future returned by [`delay_until`](delay_until) and","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9329388,"byte_end":9329443,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/ [`delay_for`](delay_for).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9329444,"byte_end":9329473,"line_start":60,"line_end":60,"column_start":1,"column_end":30}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9329491,"byte_end":9329558,"line_start":62,"line_end":62,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8635},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9330015,"byte_end":9330023,"line_start":77,"line_end":77,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Delay>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the instant at which the future will complete.\n","sig":null,"attributes":[{"value":"/ Returns the instant at which the future will complete.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9329945,"byte_end":9330003,"line_start":76,"line_end":76,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":8636},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9330227,"byte_end":9330237,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"is_elapsed","qualname":"<Delay>::is_elapsed","value":"pub fn is_elapsed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Delay` has elapsed","sig":null,"attributes":[{"value":"/ Returns `true` if the `Delay` has elapsed","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9330092,"byte_end":9330137,"line_start":81,"line_end":81,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9330142,"byte_end":9330145,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ A `Delay` is elapsed when the requested duration has elapsed.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9330150,"byte_end":9330215,"line_start":83,"line_end":83,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":8637},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9330626,"byte_end":9330631,"line_start":95,"line_end":95,"column_start":12,"column_end":17},"name":"reset","qualname":"<Delay>::reset","value":"pub fn reset(&mut Self, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Delay` instance to a new deadline.","sig":null,"attributes":[{"value":"/ Resets the `Delay` instance to a new deadline.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9330305,"byte_end":9330355,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9330360,"byte_end":9330363,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Calling this function allows changing the instant at which the `Delay`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9330368,"byte_end":9330442,"line_start":90,"line_end":90,"column_start":5,"column_end":79}},{"value":"/ future completes without having to create new associated state.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9330447,"byte_end":9330514,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9330519,"byte_end":9330522,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function can be called both before and after the future has","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9330527,"byte_end":9330595,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ completed.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9330600,"byte_end":9330614,"line_start":94,"line_end":94,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":9125},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9364101,"byte_end":9364106,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"Error","qualname":"::time::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors encountered by the timer implementation.","sig":null,"attributes":[{"value":"/ Errors encountered by the timer implementation.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9362988,"byte_end":9363039,"line_start":5,"line_end":5,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9363040,"byte_end":9363043,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two different errors that can occur:","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9363044,"byte_end":9363105,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9363106,"byte_end":9363109,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `shutdown` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9363110,"byte_end":9363184,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/   instance has been dropped. In this case, the operation will never be able","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9363185,"byte_end":9363264,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/   to complete and the `shutdown` error is returned. This is a permanent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9363265,"byte_end":9363340,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/   error, i.e., once this error is observed, timer operations will never","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9363341,"byte_end":9363416,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/   succeed in the future.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9363417,"byte_end":9363445,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9363446,"byte_end":9363449,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `at_capacity` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9363450,"byte_end":9363527,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/   instance is currently handling its maximum number of outstanding delays.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9363528,"byte_end":9363606,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/   In this case, the operation is not able to be performed at the current","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9363607,"byte_end":9363683,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/   moment, and `at_capacity` is returned. This is a transient error, i.e., at","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9363684,"byte_end":9363764,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   some point in the future, if the operation is attempted again, it might","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9363765,"byte_end":9363842,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/   succeed. Callers that observe this error should attempt to [shed load]. One","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9363843,"byte_end":9363924,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/   way to do this would be dropping the future that issued the timer operation.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9363925,"byte_end":9364007,"line_start":21,"line_end":21,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9364008,"byte_end":9364011,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [shed load]: https://en.wikipedia.org/wiki/Load_Shedding","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9364012,"byte_end":9364072,"line_start":23,"line_end":23,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":8827},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9364257,"byte_end":9364265,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Error>::shutdown","value":"pub fn shutdown() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a shutdown timer.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a shutdown timer.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9364194,"byte_end":9364245,"line_start":34,"line_end":34,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":8828},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9364397,"byte_end":9364408,"line_start":40,"line_end":40,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<Error>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being shutdown.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being shutdown.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9364314,"byte_end":9364385,"line_start":39,"line_end":39,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":8829},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9364596,"byte_end":9364607,"line_start":48,"line_end":48,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<Error>::at_capacity","value":"pub fn at_capacity() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a timer at capacity.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a timer at capacity.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9364530,"byte_end":9364584,"line_start":47,"line_end":47,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":8830},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9364744,"byte_end":9364758,"line_start":53,"line_end":53,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<Error>::is_at_capacity","value":"pub fn is_at_capacity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being at capacity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being at capacity.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9364658,"byte_end":9364732,"line_start":52,"line_end":52,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":9137},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9365598,"byte_end":9365605,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":9138}],"decl_id":null,"docs":" A measurement of the system clock, useful for talking to\n external entities like the file system or other processes.\n","sig":null,"attributes":[{"value":"/ A measurement of the system clock, useful for talking to","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9365402,"byte_end":9365462,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/ external entities like the file system or other processes.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9365463,"byte_end":9365525,"line_start":8,"line_end":8,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":8841},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9365852,"byte_end":9365855,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"pub fn now() -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an instant corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an instant corresponding to \"now\".","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9365659,"byte_end":9365705,"line_start":15,"line_end":15,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9365710,"byte_end":9365713,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9365718,"byte_end":9365732,"line_start":17,"line_end":17,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9365737,"byte_end":9365740,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9365745,"byte_end":9365752,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::Instant;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9365757,"byte_end":9365786,"line_start":20,"line_end":20,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9365791,"byte_end":9365794,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9365799,"byte_end":9365828,"line_start":22,"line_end":22,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9365833,"byte_end":9365840,"line_start":23,"line_end":23,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8842},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9365981,"byte_end":9365989,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Instant>::from_std","value":"pub fn from_std(std::time::Instant) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Create a `tokio::time::Instant` from a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Create a `tokio::time::Instant` from a `std::time::Instant`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9365905,"byte_end":9365969,"line_start":28,"line_end":28,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":8843},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9366125,"byte_end":9366133,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"into_std","qualname":"<Instant>::into_std","value":"pub fn into_std(Self) -> std::time::Instant","parent":null,"children":[],"decl_id":null,"docs":" Convert the value into a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Convert the value into a `std::time::Instant`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9366063,"byte_end":9366113,"line_start":33,"line_end":33,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":8844},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9366377,"byte_end":9366391,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"pub fn duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9366192,"byte_end":9366264,"line_start":38,"line_end":38,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9366269,"byte_end":9366272,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9366277,"byte_end":9366289,"line_start":40,"line_end":40,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9366294,"byte_end":9366297,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `earlier` is later than `self`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9366302,"byte_end":9366365,"line_start":42,"line_end":42,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8845},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9367082,"byte_end":9367104,"line_start":64,"line_end":64,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"pub fn checked_duration_since(&Self, Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9366487,"byte_end":9366562,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ None if that instant is later than this one.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9366567,"byte_end":9366615,"line_start":48,"line_end":48,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9366620,"byte_end":9366623,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9366628,"byte_end":9366642,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9366647,"byte_end":9366650,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9366655,"byte_end":9366662,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9366667,"byte_end":9366719,"line_start":53,"line_end":53,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9366724,"byte_end":9366727,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9366732,"byte_end":9366750,"line_start":55,"line_end":55,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9366755,"byte_end":9366776,"line_start":56,"line_end":56,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9366781,"byte_end":9366814,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9366819,"byte_end":9366864,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9366869,"byte_end":9366906,"line_start":59,"line_end":59,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.checked_duration_since(now));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9366911,"byte_end":9366973,"line_start":60,"line_end":60,"column_start":5,"column_end":67}},{"value":"/     println!(\"{:?}\", now.checked_duration_since(new_now)); // None","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9366978,"byte_end":9367048,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9367053,"byte_end":9367058,"line_start":62,"line_end":62,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9367063,"byte_end":9367070,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8846},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9367827,"byte_end":9367852,"line_start":85,"line_end":85,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"pub fn saturating_duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is earlier than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9367216,"byte_end":9367291,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is earlier than this one.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9367296,"byte_end":9367355,"line_start":69,"line_end":69,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9367360,"byte_end":9367363,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9367368,"byte_end":9367382,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9367387,"byte_end":9367390,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9367395,"byte_end":9367402,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9367407,"byte_end":9367459,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9367464,"byte_end":9367467,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9367472,"byte_end":9367490,"line_start":76,"line_end":76,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9367495,"byte_end":9367516,"line_start":77,"line_end":77,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9367521,"byte_end":9367554,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9367559,"byte_end":9367604,"line_start":79,"line_end":79,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9367609,"byte_end":9367646,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.saturating_duration_since(now));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9367651,"byte_end":9367716,"line_start":81,"line_end":81,"column_start":5,"column_end":70}},{"value":"/     println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9367721,"byte_end":9367793,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9367798,"byte_end":9367803,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9367808,"byte_end":9367815,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8847},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9368623,"byte_end":9368630,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9367959,"byte_end":9368029,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9368034,"byte_end":9368037,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9368042,"byte_end":9368054,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9368059,"byte_end":9368062,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function may panic if the current time is earlier than this","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9368067,"byte_end":9368135,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ instant, which is something that can happen if an `Instant` is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9368140,"byte_end":9368206,"line_start":94,"line_end":94,"column_start":5,"column_end":71}},{"value":"/ produced synthetically.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9368211,"byte_end":9368238,"line_start":95,"line_end":95,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9368243,"byte_end":9368246,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9368251,"byte_end":9368265,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9368270,"byte_end":9368273,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9368278,"byte_end":9368285,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9368290,"byte_end":9368342,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9368347,"byte_end":9368350,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9368355,"byte_end":9368373,"line_start":102,"line_end":102,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9368378,"byte_end":9368399,"line_start":103,"line_end":103,"column_start":5,"column_end":26}},{"value":"/     let instant = Instant::now();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9368404,"byte_end":9368441,"line_start":104,"line_end":104,"column_start":5,"column_end":42}},{"value":"/     let three_secs = Duration::from_secs(3);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9368446,"byte_end":9368494,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/     delay_for(three_secs).await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9368499,"byte_end":9368535,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/     assert!(instant.elapsed() >= three_secs);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9368540,"byte_end":9368589,"line_start":107,"line_end":107,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9368594,"byte_end":9368599,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9368604,"byte_end":9368611,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8848},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9368911,"byte_end":9368922,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9368694,"byte_end":9368769,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9368774,"byte_end":9368845,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9368850,"byte_end":9368899,"line_start":116,"line_end":116,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":8849},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9369261,"byte_end":9369272,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9369044,"byte_end":9369119,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9369124,"byte_end":9369195,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9369200,"byte_end":9369249,"line_start":123,"line_end":123,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":8885},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9372736,"byte_end":9372744,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"interval","qualname":"::time::interval::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `duration`. The first\n tick completes immediately.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `duration`. The first","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9370994,"byte_end":9371071,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ tick completes immediately.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371072,"byte_end":9371103,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371104,"byte_end":9371107,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371108,"byte_end":9371188,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371189,"byte_end":9371228,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371229,"byte_end":9371232,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is equivalent to `interval_at(Instant::now(), period)`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371233,"byte_end":9371306,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371307,"byte_end":9371310,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371311,"byte_end":9371323,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371324,"byte_end":9371327,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371328,"byte_end":9371373,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371374,"byte_end":9371377,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371378,"byte_end":9371392,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371393,"byte_end":9371396,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371397,"byte_end":9371404,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371405,"byte_end":9371443,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371444,"byte_end":9371447,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371448,"byte_end":9371466,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371467,"byte_end":9371488,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371489,"byte_end":9371558,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371559,"byte_end":9371562,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371563,"byte_end":9371593,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371594,"byte_end":9371624,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371625,"byte_end":9371655,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371656,"byte_end":9371659,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371660,"byte_end":9371703,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371704,"byte_end":9371709,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371710,"byte_end":9371717,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371718,"byte_end":9371721,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A simple example using `interval` to execute a task every two seconds.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371722,"byte_end":9371796,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371797,"byte_end":9371800,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The difference between `interval` and [`delay_for`] is that an `interval`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371801,"byte_end":9371878,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ measures the time since the last tick, which means that `.tick().await`","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371879,"byte_end":9371954,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ may wait for a shorter time than the duration specified for the interval","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9371955,"byte_end":9372031,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ if some time has passed between calls to `.tick().await`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9372032,"byte_end":9372093,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9372094,"byte_end":9372097,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`delay_for`], the task","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9372098,"byte_end":9372176,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9372177,"byte_end":9372247,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9372248,"byte_end":9372260,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9372261,"byte_end":9372264,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9372265,"byte_end":9372272,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9372273,"byte_end":9372293,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9372294,"byte_end":9372297,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9372298,"byte_end":9372339,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9372340,"byte_end":9372366,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/     time::delay_for(time::Duration::from_secs(1)).await","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9372367,"byte_end":9372426,"line_start":53,"line_end":53,"column_start":1,"column_end":60}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9372427,"byte_end":9372432,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9372433,"byte_end":9372436,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9372437,"byte_end":9372455,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9372456,"byte_end":9372477,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9372478,"byte_end":9372550,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9372551,"byte_end":9372575,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9372576,"byte_end":9372610,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9372611,"byte_end":9372656,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9372657,"byte_end":9372666,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9372667,"byte_end":9372672,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9372673,"byte_end":9372680,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9372681,"byte_end":9372684,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [`delay_for`]: crate::time::delay_for()","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9372685,"byte_end":9372728,"line_start":66,"line_end":66,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":8886},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9373630,"byte_end":9373641,"line_start":100,"line_end":100,"column_start":8,"column_end":19},"name":"interval_at","qualname":"::time::interval::interval_at","value":"pub fn interval_at(Instant, Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `period` with the\n first tick completing at `at`.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `period` with the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9372894,"byte_end":9372967,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/ first tick completing at `at`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9372968,"byte_end":9373002,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9373003,"byte_end":9373006,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9373007,"byte_end":9373087,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9373088,"byte_end":9373127,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9373128,"byte_end":9373131,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9373132,"byte_end":9373144,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9373145,"byte_end":9373148,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9373149,"byte_end":9373194,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9373195,"byte_end":9373198,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9373199,"byte_end":9373213,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9373214,"byte_end":9373217,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9373218,"byte_end":9373225,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{interval_at, Duration, Instant};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9373226,"byte_end":9373280,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9373281,"byte_end":9373284,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9373285,"byte_end":9373303,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9373304,"byte_end":9373325,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/     let start = Instant::now() + Duration::from_millis(50);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9373326,"byte_end":9373389,"line_start":90,"line_end":90,"column_start":1,"column_end":64}},{"value":"/     let mut interval = interval_at(start, Duration::from_millis(10));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9373390,"byte_end":9373463,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9373464,"byte_end":9373467,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9373468,"byte_end":9373498,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9373499,"byte_end":9373529,"line_start":94,"line_end":94,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9373530,"byte_end":9373560,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9373561,"byte_end":9373564,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     // approximately 70ms have elapsed.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9373565,"byte_end":9373608,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9373609,"byte_end":9373614,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9373615,"byte_end":9373622,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9160},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9373947,"byte_end":9373955,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"Interval","qualname":"::time::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":9161},{"krate":0,"index":9162}],"decl_id":null,"docs":" Stream returned by [`interval`](interval) and [`interval_at`](interval_at).\n","sig":null,"attributes":[{"value":"/ Stream returned by [`interval`](interval) and [`interval_at`](interval_at).","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9373839,"byte_end":9373918,"line_start":109,"line_end":109,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":8888},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9374200,"byte_end":9374209,"line_start":121,"line_end":121,"column_start":12,"column_end":21},"name":"poll_tick","qualname":"<Interval>::poll_tick","value":"pub fn poll_tick(&mut Self, &mut Context) -> Poll<Instant>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8889},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9375301,"byte_end":9375305,"line_start":158,"line_end":158,"column_start":18,"column_end":22},"name":"tick","qualname":"<Interval>::tick","value":"pub async fn tick<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the next instant in the interval has been reached.","sig":null,"attributes":[{"value":"/ Completes when the next instant in the interval has been reached.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9374696,"byte_end":9374765,"line_start":137,"line_end":137,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9374770,"byte_end":9374773,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9374778,"byte_end":9374792,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9374797,"byte_end":9374800,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9374805,"byte_end":9374812,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9374817,"byte_end":9374837,"line_start":142,"line_end":142,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9374842,"byte_end":9374845,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9374850,"byte_end":9374878,"line_start":144,"line_end":144,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9374883,"byte_end":9374886,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9374891,"byte_end":9374909,"line_start":146,"line_end":146,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9374914,"byte_end":9374935,"line_start":147,"line_end":147,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9374940,"byte_end":9375009,"line_start":148,"line_end":148,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9375014,"byte_end":9375017,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9375022,"byte_end":9375052,"line_start":150,"line_end":150,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9375057,"byte_end":9375087,"line_start":151,"line_end":151,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9375092,"byte_end":9375122,"line_start":152,"line_end":152,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9375127,"byte_end":9375130,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9375135,"byte_end":9375178,"line_start":154,"line_end":154,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9375183,"byte_end":9375188,"line_start":155,"line_end":155,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9375193,"byte_end":9375200,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9375205,"byte_end":9375245,"line_start":157,"line_end":157,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":8913},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376987,"byte_end":9376994,"line_start":49,"line_end":49,"column_start":8,"column_end":15},"name":"timeout","qualname":"::time::timeout::timeout","value":"pub fn timeout<T>(Duration, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified duration has elapsed.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9375972,"byte_end":9376049,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376050,"byte_end":9376053,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the duration has elapsed, then the completed","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376054,"byte_end":9376133,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ value is returned. Otherwise, an error is returned and the future is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376134,"byte_end":9376206,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ canceled.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376207,"byte_end":9376220,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376221,"byte_end":9376224,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376225,"byte_end":9376242,"line_start":21,"line_end":21,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376243,"byte_end":9376246,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376247,"byte_end":9376325,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376326,"byte_end":9376356,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376357,"byte_end":9376360,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376361,"byte_end":9376441,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376442,"byte_end":9376469,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376470,"byte_end":9376473,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376474,"byte_end":9376488,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376489,"byte_end":9376492,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376493,"byte_end":9376553,"line_start":31,"line_end":31,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376554,"byte_end":9376557,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376558,"byte_end":9376569,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376570,"byte_end":9376599,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376600,"byte_end":9376629,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376630,"byte_end":9376633,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376634,"byte_end":9376662,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376663,"byte_end":9376666,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376667,"byte_end":9376689,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376690,"byte_end":9376728,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376729,"byte_end":9376756,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376757,"byte_end":9376760,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376761,"byte_end":9376834,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ if let Err(_) = timeout(Duration::from_millis(10), rx).await {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376835,"byte_end":9376901,"line_start":44,"line_end":44,"column_start":1,"column_end":67}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376902,"byte_end":9376957,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376958,"byte_end":9376963,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376964,"byte_end":9376971,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9376972,"byte_end":9376979,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":8915},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9378216,"byte_end":9378226,"line_start":91,"line_end":91,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::time::timeout::timeout_at","value":"pub fn timeout_at<T>(Instant, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified instant in time.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified instant in time.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9377185,"byte_end":9377257,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9377258,"byte_end":9377261,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the instant is reached, then the completed","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9377262,"byte_end":9377339,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9377340,"byte_end":9377395,"line_start":60,"line_end":60,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9377396,"byte_end":9377399,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9377400,"byte_end":9377417,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9377418,"byte_end":9377421,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9377422,"byte_end":9377500,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9377501,"byte_end":9377531,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9377532,"byte_end":9377535,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9377536,"byte_end":9377616,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9377617,"byte_end":9377644,"line_start":68,"line_end":68,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9377645,"byte_end":9377648,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9377649,"byte_end":9377663,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9377664,"byte_end":9377667,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9377668,"byte_end":9377728,"line_start":72,"line_end":72,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9377729,"byte_end":9377732,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9377733,"byte_end":9377744,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::{Instant, timeout_at};","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9377745,"byte_end":9377788,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9377789,"byte_end":9377818,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9377819,"byte_end":9377822,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9377823,"byte_end":9377851,"line_start":78,"line_end":78,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9377852,"byte_end":9377855,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9377856,"byte_end":9377878,"line_start":80,"line_end":80,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9377879,"byte_end":9377917,"line_start":81,"line_end":81,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9377918,"byte_end":9377945,"line_start":82,"line_end":82,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9377946,"byte_end":9377949,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire 10 milliseconds into the","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9377950,"byte_end":9378028,"line_start":84,"line_end":84,"column_start":1,"column_end":79}},{"value":"/ // future.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9378029,"byte_end":9378043,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/ if let Err(_) = timeout_at(Instant::now() + Duration::from_millis(10), rx).await {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9378044,"byte_end":9378130,"line_start":86,"line_end":86,"column_start":1,"column_end":87}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9378131,"byte_end":9378186,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9378187,"byte_end":9378192,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9378193,"byte_end":9378200,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9378201,"byte_end":9378208,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9611},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9378601,"byte_end":9378608,"line_start":107,"line_end":107,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::time::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":9613},{"krate":0,"index":9614}],"decl_id":null,"docs":" Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":7985170,"byte_end":7985179,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9165},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9378765,"byte_end":9378772,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::time::timeout::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Timeout`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Timeout`.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9378693,"byte_end":9378725,"line_start":115,"line_end":115,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":8922},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9379123,"byte_end":9379130,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this timeout.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9379050,"byte_end":9379111,"line_start":132,"line_end":132,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":8923},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9379258,"byte_end":9379265,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this timeout.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9379177,"byte_end":9379246,"line_start":137,"line_end":137,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":8924},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9379394,"byte_end":9379404,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this timeout, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this timeout, returning the underlying value.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9379324,"byte_end":9379382,"line_start":142,"line_end":142,"column_start":5,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":9187},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9397537,"byte_end":9397545,"line_start":33,"line_end":33,"column_start":8,"column_end":16},"name":"throttle","qualname":"::time::throttle::throttle","value":"pub fn throttle<T>(Duration, T) -> Throttle<T> where T: Stream","parent":null,"children":[],"decl_id":null,"docs":" Slows down a stream by enforcing a delay between items.\n They will be produced not more often than the specified interval.","sig":null,"attributes":[{"value":"/ Slows down a stream by enforcing a delay between items.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9396963,"byte_end":9397022,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ They will be produced not more often than the specified interval.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9397023,"byte_end":9397092,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9397093,"byte_end":9397096,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9397097,"byte_end":9397110,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9397111,"byte_end":9397114,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Create a throttled stream.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9397115,"byte_end":9397145,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9397146,"byte_end":9397164,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9397165,"byte_end":9397193,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9397194,"byte_end":9397227,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ use tokio::time::throttle;","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9397228,"byte_end":9397258,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9397259,"byte_end":9397262,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9397263,"byte_end":9397285,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/ let mut item_stream = throttle(Duration::from_secs(2), futures::stream::repeat(\"one\"));","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9397286,"byte_end":9397377,"line_start":25,"line_end":25,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9397378,"byte_end":9397381,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9397382,"byte_end":9397392,"line_start":27,"line_end":27,"column_start":1,"column_end":11}},{"value":"/     // The string will be produced at most every 2 seconds","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9397393,"byte_end":9397455,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/     println!(\"{:?}\", item_stream.next().await);","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9397456,"byte_end":9397507,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9397508,"byte_end":9397513,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9397514,"byte_end":9397521,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9397522,"byte_end":9397529,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9563},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9398040,"byte_end":9398048,"line_start":55,"line_end":55,"column_start":16,"column_end":24},"name":"Throttle","qualname":"::time::throttle::Throttle","value":"Throttle {  }","parent":null,"children":[{"krate":0,"index":9565},{"krate":0,"index":9566},{"krate":0,"index":9567},{"krate":0,"index":9568}],"decl_id":null,"docs":" Stream for the [`throttle`](throttle) function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":7985170,"byte_end":7985179,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":9191},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9398515,"byte_end":9398522,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Throttle<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9398408,"byte_end":9398481,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9398486,"byte_end":9398503,"line_start":72,"line_end":72,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":9192},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9398831,"byte_end":9398838,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Throttle<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this combinator\n is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this combinator","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9398570,"byte_end":9398648,"line_start":77,"line_end":77,"column_start":5,"column_end":83}},{"value":"/ is pulling from.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9398653,"byte_end":9398673,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9398678,"byte_end":9398681,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the stream","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9398686,"byte_end":9398766,"line_start":80,"line_end":80,"column_start":5,"column_end":85}},{"value":"/ which may otherwise confuse this combinator.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9398771,"byte_end":9398819,"line_start":81,"line_end":81,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":9193},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9399133,"byte_end":9399143,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Throttle<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9398898,"byte_end":9398960,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9398965,"byte_end":9398968,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so care","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9398973,"byte_end":9399050,"line_start":88,"line_end":88,"column_start":5,"column_end":82}},{"value":"/ should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9399055,"byte_end":9399121,"line_start":89,"line_end":89,"column_start":5,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":8971},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":9396096,"byte_end":9396101,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Owned","qualname":"::time::wheel::stack::Stack::Owned","value":"type Owned: Borrow<Self::Borrowed>;","parent":{"krate":0,"index":8970},"children":[],"decl_id":null,"docs":" Type of the item stored in the stack\n","sig":null,"attributes":[{"value":"/ Type of the item stored in the stack","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":9396046,"byte_end":9396086,"line_start":5,"line_end":5,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":8972},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":9396159,"byte_end":9396167,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"Borrowed","qualname":"::time::wheel::stack::Stack::Borrowed","value":"type Borrowed;","parent":{"krate":0,"index":8970},"children":[],"decl_id":null,"docs":" Borrowed item\n","sig":null,"attributes":[{"value":"/ Borrowed item","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":9396132,"byte_end":9396149,"line_start":8,"line_end":8,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":8973},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":9396256,"byte_end":9396261,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Store","qualname":"::time::wheel::stack::Stack::Store","value":"type Store;","parent":{"krate":0,"index":8970},"children":[],"decl_id":null,"docs":" Item storage, this allows a slab to be used instead of just the heap\n","sig":null,"attributes":[{"value":"/ Item storage, this allows a slab to be used instead of just the heap","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":9396174,"byte_end":9396246,"line_start":11,"line_end":11,"column_start":5,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":779},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181032,"byte_end":181038,"line_start":40,"line_end":40,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180941,"byte_end":180970,"line_start":37,"line_end":37,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180975,"byte_end":180978,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180983,"byte_end":181022,"line_start":39,"line_end":39,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":780},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181068,"byte_end":181074,"line_start":43,"line_end":43,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Node type\n","sig":null,"attributes":[{"value":"/ Node type","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181045,"byte_end":181058,"line_start":42,"line_end":42,"column_start":5,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":814},"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/rand.rs","byte_start":197659,"byte_end":197671,"line_start":58,"line_end":58,"column_start":8,"column_end":20},"name":"thread_rng_n","qualname":"::util::rand::thread_rng_n","value":"pub fn thread_rng_n(u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"macros\", feature = \"stream\"))","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/rand.rs","byte_start":197524,"byte_end":197575,"line_start":55,"line_end":55,"column_start":1,"column_end":52}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":29721,"byte_end":29730,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":29746,"byte_end":29755,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":30105,"byte_end":30110,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8210802,"byte_end":8210812,"line_start":26,"line_end":26,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8216583,"byte_end":8216587,"line_start":104,"line_end":104,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":977},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":987},{"krate":0,"index":991},{"krate":0,"index":995},{"krate":0,"index":1002},{"krate":0,"index":1006},{"krate":0,"index":1010},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8229812,"byte_end":8229816,"line_start":539,"line_end":539,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1024},{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8232300,"byte_end":8232304,"line_start":606,"line_end":606,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1028},{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8234729,"byte_end":8234733,"line_start":676,"line_end":676,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1036}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8237704,"byte_end":8237708,"line_start":764,"line_end":764,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8237806,"byte_end":8237810,"line_start":770,"line_end":770,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8238039,"byte_end":8238043,"line_start":779,"line_end":779,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242968,"byte_end":8242979,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8253448,"byte_end":8253459,"line_start":393,"line_end":393,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8253577,"byte_end":8253588,"line_start":399,"line_end":399,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8256862,"byte_end":8256873,"line_start":69,"line_end":69,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1111},{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8257702,"byte_end":8257712,"line_start":24,"line_end":24,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8260784,"byte_end":8260791,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1156},{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8262026,"byte_end":8262033,"line_start":88,"line_end":88,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8262860,"byte_end":8262868,"line_start":113,"line_end":113,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8266650,"byte_end":8266658,"line_start":240,"line_end":240,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31866,"byte_end":31875,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32038,"byte_end":32047,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":33234,"byte_end":33243,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":33997,"byte_end":34003,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34217,"byte_end":34223,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34365,"byte_end":34371,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34902,"byte_end":34907,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34934,"byte_end":34939,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/try_join.rs","byte_start":36136,"byte_end":36144,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8272633,"byte_end":8272641,"line_start":38,"line_end":38,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1500}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8272914,"byte_end":8272922,"line_start":49,"line_end":49,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1450}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8274527,"byte_end":8274535,"line_start":100,"line_end":100,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1454},{"krate":0,"index":1457},{"krate":0,"index":1460}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8277260,"byte_end":8277263,"line_start":190,"line_end":190,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1472}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8279078,"byte_end":8279081,"line_start":271,"line_end":271,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49833,"byte_end":49836,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1503},{"krate":0,"index":1504}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49996,"byte_end":49999,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":50628,"byte_end":50634,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":56598,"byte_end":56601,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1507},{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":56744,"byte_end":56747,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":57543,"byte_end":57549,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59975,"byte_end":59978,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1511},{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":60121,"byte_end":60124,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":60578,"byte_end":60584,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":68489,"byte_end":68492,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":68640,"byte_end":68643,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":69212,"byte_end":69215,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":69723,"byte_end":69729,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":70242,"byte_end":70248,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":70764,"byte_end":70770,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":71281,"byte_end":71287,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8291354,"byte_end":8291365,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1545},{"krate":0,"index":1546}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8292124,"byte_end":8292135,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1548}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8292342,"byte_end":8292353,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1550}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8294975,"byte_end":8294986,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1553}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8280723,"byte_end":8280729,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1590}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8283590,"byte_end":8283596,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8283964,"byte_end":8283970,"line_start":186,"line_end":186,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1599}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8284106,"byte_end":8284112,"line_start":194,"line_end":194,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1603}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8285255,"byte_end":8285261,"line_start":225,"line_end":225,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8285339,"byte_end":8285345,"line_start":231,"line_end":231,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1607}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8285480,"byte_end":8285485,"line_start":239,"line_end":239,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1609},{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1613}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8287029,"byte_end":8287038,"line_start":293,"line_end":293,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1616}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8301544,"byte_end":8301555,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1651}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8309346,"byte_end":8309357,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1654}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8309850,"byte_end":8309861,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1657},{"krate":0,"index":1658},{"krate":0,"index":1659}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8310942,"byte_end":8310953,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1664}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8311126,"byte_end":8311137,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1667}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8313285,"byte_end":8313297,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1683},{"krate":0,"index":1685},{"krate":0,"index":1687},{"krate":0,"index":1689},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1694},{"krate":0,"index":1695}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8324167,"byte_end":8324179,"line_start":329,"line_end":329,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8324204,"byte_end":8324216,"line_start":330,"line_end":330,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8324235,"byte_end":8324247,"line_start":332,"line_end":332,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1703}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stderr.rs","byte_start":8326806,"byte_end":8326812,"line_start":76,"line_end":76,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1748}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stderr.rs","byte_start":8327120,"byte_end":8327126,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1752}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdin.rs","byte_start":8329534,"byte_end":8329539,"line_start":52,"line_end":52,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1764}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdin.rs","byte_start":8329843,"byte_end":8329848,"line_start":65,"line_end":65,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1766},{"krate":0,"index":1767}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdout.rs","byte_start":8332631,"byte_end":8332637,"line_start":76,"line_end":76,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1779}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdout.rs","byte_start":8332945,"byte_end":8332951,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8335071,"byte_end":8335079,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1831},{"krate":0,"index":1832}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8335996,"byte_end":8336005,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1835}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8336255,"byte_end":8336263,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1838},{"krate":0,"index":1839}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8336818,"byte_end":8336827,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1845},{"krate":0,"index":1846}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8337776,"byte_end":8337781,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1850}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8338174,"byte_end":8338179,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1853}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8338432,"byte_end":8338437,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1856}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8338560,"byte_end":8338568,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8338605,"byte_end":8338614,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8338651,"byte_end":8338659,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8338696,"byte_end":8338705,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8338748,"byte_end":8338756,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1867}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8338924,"byte_end":8338933,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1870}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/seek.rs","byte_start":8339623,"byte_end":8339627,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1889},{"krate":0,"index":1890}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8351577,"byte_end":8351578,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8390863,"byte_end":8390864,"line_start":1112,"line_end":1112,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8392622,"byte_end":8392623,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8427900,"byte_end":8427901,"line_start":1004,"line_end":1004,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8429317,"byte_end":8429326,"line_start":38,"line_end":38,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":2072},{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2077}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8431505,"byte_end":8431514,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2080},{"krate":0,"index":2081}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8432490,"byte_end":8432499,"line_start":135,"line_end":135,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2084},{"krate":0,"index":2085}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8433330,"byte_end":8433339,"line_start":157,"line_end":157,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2091},{"krate":0,"index":2092}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8434055,"byte_end":8434064,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2095}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8435571,"byte_end":8435580,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":2116},{"krate":0,"index":2117},{"krate":0,"index":2118},{"krate":0,"index":2119}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8437417,"byte_end":8437426,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2122}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8437568,"byte_end":8437577,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2125}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8438289,"byte_end":8438298,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2130}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8438828,"byte_end":8438837,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2133},{"krate":0,"index":2134}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8439316,"byte_end":8439325,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2137},{"krate":0,"index":2138}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8441279,"byte_end":8441288,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2164},{"krate":0,"index":2165}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8443566,"byte_end":8443575,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2170}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8444465,"byte_end":8444474,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2173},{"krate":0,"index":2174}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8444956,"byte_end":8444965,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2177},{"krate":0,"index":2178}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8445252,"byte_end":8445261,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2181}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8446430,"byte_end":8446435,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2200},{"krate":0,"index":2201},{"krate":0,"index":2202},{"krate":0,"index":2203}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8447575,"byte_end":8447580,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2207}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8447859,"byte_end":8447864,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2211},{"krate":0,"index":2212}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8448687,"byte_end":8448692,"line_start":113,"line_end":113,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2216},{"krate":0,"index":2217}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/copy.rs","byte_start":8451735,"byte_end":8451739,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2231},{"krate":0,"index":2232}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8454849,"byte_end":8454854,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2247},{"krate":0,"index":2248}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8455183,"byte_end":8455188,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2250},{"krate":0,"index":2251}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8455421,"byte_end":8455426,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2253}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/flush.rs","byte_start":8456247,"byte_end":8456252,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2269},{"krate":0,"index":2270}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8457432,"byte_end":8457437,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2285},{"krate":0,"index":2290},{"krate":0,"index":2291},{"krate":0,"index":2292}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8458689,"byte_end":8458694,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2295}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8459441,"byte_end":8459446,"line_start":113,"line_end":113,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2298},{"krate":0,"index":2299}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read.rs","byte_start":8460844,"byte_end":8460848,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2315},{"krate":0,"index":2316}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_buf.rs","byte_start":8461909,"byte_end":8461916,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2333},{"krate":0,"index":2334}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_exact.rs","byte_start":8463281,"byte_end":8463290,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2350},{"krate":0,"index":2351}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_line.rs","byte_start":8470825,"byte_end":8470833,"line_start":85,"line_end":85,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2384},{"krate":0,"index":2385}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8472059,"byte_end":8472064,"line_start":35,"line_end":35,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2403}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8473740,"byte_end":8473749,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2408},{"krate":0,"index":2409}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_string.rs","byte_start":8475813,"byte_end":8475825,"line_start":58,"line_end":58,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2428},{"krate":0,"index":2429}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_until.rs","byte_start":8478477,"byte_end":8478486,"line_start":66,"line_end":66,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2446},{"krate":0,"index":2447}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/repeat.rs","byte_start":8480320,"byte_end":8480326,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2456},{"krate":0,"index":2457}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/shutdown.rs","byte_start":8481448,"byte_end":8481456,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2473},{"krate":0,"index":2474}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8483289,"byte_end":8483293,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2484},{"krate":0,"index":2485},{"krate":0,"index":2486}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8483803,"byte_end":8483807,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2488}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8484772,"byte_end":8484777,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2506}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8485516,"byte_end":8485521,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2513}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8486300,"byte_end":8486305,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2516},{"krate":0,"index":2517}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8499844,"byte_end":8499856,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3006},{"krate":0,"index":3007}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8500361,"byte_end":8500373,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3011},{"krate":0,"index":3012},{"krate":0,"index":3014}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8501912,"byte_end":8501924,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3018},{"krate":0,"index":3019}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8487473,"byte_end":8487477,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2536},{"krate":0,"index":2537},{"krate":0,"index":2538},{"krate":0,"index":2539},{"krate":0,"index":2540},{"krate":0,"index":2541}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8489105,"byte_end":8489109,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2544},{"krate":0,"index":2545}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8489766,"byte_end":8489770,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2548},{"krate":0,"index":2549}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write.rs","byte_start":8491327,"byte_end":8491332,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2564},{"krate":0,"index":2565}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_all.rs","byte_start":8492125,"byte_end":8492133,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2580},{"krate":0,"index":2581}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_buf.rs","byte_start":8493641,"byte_end":8493649,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2598},{"krate":0,"index":2599}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74388,"byte_end":74398,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74438,"byte_end":74448,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74729,"byte_end":74741,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74781,"byte_end":74793,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":75053,"byte_end":75065,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":75105,"byte_end":75117,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":78793,"byte_end":78799,"line_start":206,"line_end":206,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":78843,"byte_end":78849,"line_start":208,"line_end":208,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3218},{"krate":0,"index":3219},{"krate":0,"index":3220}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":80215,"byte_end":80225,"line_start":259,"line_end":259,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3229},{"krate":0,"index":3230}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":80873,"byte_end":80882,"line_start":277,"line_end":277,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3232},{"krate":0,"index":3233},{"krate":0,"index":3234}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8506846,"byte_end":8506857,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3281},{"krate":0,"index":3286},{"krate":0,"index":3287},{"krate":0,"index":3291},{"krate":0,"index":3292},{"krate":0,"index":3293},{"krate":0,"index":3294},{"krate":0,"index":3295},{"krate":0,"index":3296},{"krate":0,"index":3297},{"krate":0,"index":3298}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8517561,"byte_end":8517572,"line_start":398,"line_end":398,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3300},{"krate":0,"index":3301}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8517887,"byte_end":8517898,"line_start":410,"line_end":410,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3303},{"krate":0,"index":3304}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8518338,"byte_end":8518349,"line_start":424,"line_end":424,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3306},{"krate":0,"index":3307}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8518675,"byte_end":8518686,"line_start":436,"line_end":436,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3309}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8518902,"byte_end":8518913,"line_start":447,"line_end":447,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3314}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8519745,"byte_end":8519753,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3326},{"krate":0,"index":3327}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8520391,"byte_end":8520399,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3329},{"krate":0,"index":3330}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8522549,"byte_end":8522557,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3348},{"krate":0,"index":3349}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8525012,"byte_end":8525020,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3354},{"krate":0,"index":3355}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8525340,"byte_end":8525349,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3357},{"krate":0,"index":3358},{"krate":0,"index":3360},{"krate":0,"index":3361}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8526162,"byte_end":8526170,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3363}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8526264,"byte_end":8526273,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3365}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8529336,"byte_end":8529348,"line_start":91,"line_end":91,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3390}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8529551,"byte_end":8529563,"line_start":100,"line_end":100,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8529573,"byte_end":8529586,"line_start":102,"line_end":102,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3393},{"krate":0,"index":3394},{"krate":0,"index":3395}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8532420,"byte_end":8532433,"line_start":189,"line_end":189,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3400},{"krate":0,"index":3401}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8532738,"byte_end":8532752,"line_start":203,"line_end":203,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3403},{"krate":0,"index":3404}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8533304,"byte_end":8533318,"line_start":220,"line_end":220,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3406}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8533478,"byte_end":8533492,"line_start":228,"line_end":228,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3408},{"krate":0,"index":3409},{"krate":0,"index":3411},{"krate":0,"index":3412}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8534313,"byte_end":8534326,"line_start":257,"line_end":257,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3414}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8534422,"byte_end":8534436,"line_start":263,"line_end":263,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3416}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8536571,"byte_end":8536580,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3455},{"krate":0,"index":3460},{"krate":0,"index":3464},{"krate":0,"index":3465},{"krate":0,"index":3466},{"krate":0,"index":3470},{"krate":0,"index":3471},{"krate":0,"index":3472},{"krate":0,"index":3473},{"krate":0,"index":3474},{"krate":0,"index":3478},{"krate":0,"index":3479},{"krate":0,"index":3480},{"krate":0,"index":3481},{"krate":0,"index":3482},{"krate":0,"index":3483},{"krate":0,"index":3484},{"krate":0,"index":3485},{"krate":0,"index":3486},{"krate":0,"index":3487},{"krate":0,"index":3488},{"krate":0,"index":3489},{"krate":0,"index":3490},{"krate":0,"index":3491},{"krate":0,"index":3492},{"krate":0,"index":3493},{"krate":0,"index":3494},{"krate":0,"index":3495}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8561386,"byte_end":8561395,"line_start":834,"line_end":834,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3503},{"krate":0,"index":3504}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8561831,"byte_end":8561840,"line_start":848,"line_end":848,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3506},{"krate":0,"index":3507}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8562193,"byte_end":8562202,"line_start":862,"line_end":862,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3509},{"krate":0,"index":3510}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8562516,"byte_end":8562525,"line_start":876,"line_end":876,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3512},{"krate":0,"index":3513},{"krate":0,"index":3515},{"krate":0,"index":3516}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8563269,"byte_end":8563278,"line_start":905,"line_end":905,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3518}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8563492,"byte_end":8563501,"line_start":916,"line_end":916,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3523}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8564507,"byte_end":8564516,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3587},{"krate":0,"index":3592},{"krate":0,"index":3593},{"krate":0,"index":3594},{"krate":0,"index":3595},{"krate":0,"index":3596},{"krate":0,"index":3597},{"krate":0,"index":3602},{"krate":0,"index":3606},{"krate":0,"index":3607},{"krate":0,"index":3611},{"krate":0,"index":3612},{"krate":0,"index":3617},{"krate":0,"index":3618},{"krate":0,"index":3622},{"krate":0,"index":3623},{"krate":0,"index":3624},{"krate":0,"index":3625},{"krate":0,"index":3626},{"krate":0,"index":3627},{"krate":0,"index":3628},{"krate":0,"index":3629},{"krate":0,"index":3630},{"krate":0,"index":3631},{"krate":0,"index":3632},{"krate":0,"index":3633},{"krate":0,"index":3634},{"krate":0,"index":3635},{"krate":0,"index":3636}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8578072,"byte_end":8578081,"line_start":369,"line_end":369,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3638},{"krate":0,"index":3639}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8578517,"byte_end":8578526,"line_start":383,"line_end":383,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3641},{"krate":0,"index":3642}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8578846,"byte_end":8578855,"line_start":395,"line_end":395,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3644}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8579074,"byte_end":8579083,"line_start":406,"line_end":406,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3649}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8581164,"byte_end":8581176,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3661}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8581379,"byte_end":8581391,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8581918,"byte_end":8581926,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3665},{"krate":0,"index":3666},{"krate":0,"index":3670}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8583558,"byte_end":8583566,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3675},{"krate":0,"index":3676},{"krate":0,"index":3680}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8584886,"byte_end":8584894,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3685}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8584985,"byte_end":8584993,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3687}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8585809,"byte_end":8585821,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3730},{"krate":0,"index":3732},{"krate":0,"index":3733},{"krate":0,"index":3734},{"krate":0,"index":3735},{"krate":0,"index":3736},{"krate":0,"index":3738},{"krate":0,"index":3742},{"krate":0,"index":3743},{"krate":0,"index":3747},{"krate":0,"index":3748},{"krate":0,"index":3753},{"krate":0,"index":3754},{"krate":0,"index":3758},{"krate":0,"index":3759},{"krate":0,"index":3760},{"krate":0,"index":3761},{"krate":0,"index":3762}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8592444,"byte_end":8592456,"line_start":206,"line_end":206,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3764},{"krate":0,"index":3765}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8592898,"byte_end":8592910,"line_start":220,"line_end":220,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3767},{"krate":0,"index":3768}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8593239,"byte_end":8593251,"line_start":232,"line_end":232,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3770}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8593376,"byte_end":8593388,"line_start":238,"line_end":238,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3772}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8593746,"byte_end":8593754,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3783},{"krate":0,"index":3784}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8594486,"byte_end":8594494,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3786},{"krate":0,"index":3787}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8596621,"byte_end":8596633,"line_start":54,"line_end":54,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3810},{"krate":0,"index":3812},{"krate":0,"index":3813},{"krate":0,"index":3814},{"krate":0,"index":3815},{"krate":0,"index":3819},{"krate":0,"index":3820},{"krate":0,"index":3821}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8601137,"byte_end":8601149,"line_start":180,"line_end":180,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3823},{"krate":0,"index":3824}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8601465,"byte_end":8601477,"line_start":192,"line_end":192,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3826},{"krate":0,"index":3827}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8601919,"byte_end":8601931,"line_start":206,"line_end":206,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3829},{"krate":0,"index":3830}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8602251,"byte_end":8602263,"line_start":218,"line_end":218,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3832}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8602388,"byte_end":8602400,"line_start":224,"line_end":224,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3834}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8603392,"byte_end":8603400,"line_start":32,"line_end":32,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3850},{"krate":0,"index":3851}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8603720,"byte_end":8603729,"line_start":46,"line_end":46,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3853},{"krate":0,"index":3854},{"krate":0,"index":3855}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8604213,"byte_end":8604221,"line_start":64,"line_end":64,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3857}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8604317,"byte_end":8604326,"line_start":70,"line_end":70,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3859}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8605264,"byte_end":8605274,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3896},{"krate":0,"index":3901},{"krate":0,"index":3902},{"krate":0,"index":3903},{"krate":0,"index":3904},{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3907},{"krate":0,"index":3908},{"krate":0,"index":3909}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8608607,"byte_end":8608617,"line_start":119,"line_end":119,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3911},{"krate":0,"index":3912}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8609055,"byte_end":8609065,"line_start":133,"line_end":133,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3914},{"krate":0,"index":3915}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8609378,"byte_end":8609388,"line_start":145,"line_end":145,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3917},{"krate":0,"index":3918}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8609702,"byte_end":8609712,"line_start":159,"line_end":159,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3920},{"krate":0,"index":3921},{"krate":0,"index":3922}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8610199,"byte_end":8610209,"line_start":178,"line_end":178,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3924},{"krate":0,"index":3925}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8611726,"byte_end":8611736,"line_start":223,"line_end":223,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3927}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8611861,"byte_end":8611871,"line_start":229,"line_end":229,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3929}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84289,"byte_end":84298,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84472,"byte_end":84481,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84630,"byte_end":84639,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":84983,"byte_end":84992,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85017,"byte_end":85026,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85036,"byte_end":85045,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85531,"byte_end":85540,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85825,"byte_end":85834,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86175,"byte_end":86184,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86209,"byte_end":86218,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86228,"byte_end":86237,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86416,"byte_end":86425,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86710,"byte_end":86719,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88834,"byte_end":88842,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88867,"byte_end":88875,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88885,"byte_end":88893,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":89068,"byte_end":89076,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":89360,"byte_end":89368,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89708,"byte_end":89719,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89744,"byte_end":89755,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89765,"byte_end":89776,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90459,"byte_end":90470,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90760,"byte_end":90771,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90935,"byte_end":90946,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/unsafe_cell.rs","byte_start":91134,"byte_end":91144,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":8616228,"byte_end":8616234,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4023},{"krate":0,"index":4024},{"krate":0,"index":4025},{"krate":0,"index":4026},{"krate":0,"index":4027}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":8617040,"byte_end":8617046,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4031}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":8617260,"byte_end":8617266,"line_start":54,"line_end":54,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4035}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96248,"byte_end":96258,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96523,"byte_end":96533,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96992,"byte_end":96997,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":101722,"byte_end":101732,"line_start":193,"line_end":193,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":101841,"byte_end":101853,"line_start":201,"line_end":201,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":102240,"byte_end":102256,"line_start":220,"line_end":220,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4065},{"krate":0,"index":4066},{"krate":0,"index":4068}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103103,"byte_end":103119,"line_start":245,"line_end":245,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4074},{"krate":0,"index":4075},{"krate":0,"index":4076},{"krate":0,"index":4077},{"krate":0,"index":4079}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103660,"byte_end":103672,"line_start":265,"line_end":265,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4082}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103884,"byte_end":103889,"line_start":274,"line_end":274,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4084},{"krate":0,"index":4085}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":95350,"byte_end":95353,"line_start":108,"line_end":108,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":95442,"byte_end":95445,"line_start":114,"line_end":114,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/orphan.rs","byte_start":8658157,"byte_end":8658172,"line_start":48,"line_end":48,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4127}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/orphan.rs","byte_start":8658416,"byte_end":8658431,"line_start":61,"line_end":61,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4130},{"krate":0,"index":4131}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":8663012,"byte_end":8663018,"line_start":31,"line_end":31,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4152}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":8663162,"byte_end":8663168,"line_start":37,"line_end":37,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4157},{"krate":0,"index":4158}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":8663335,"byte_end":8663341,"line_start":49,"line_end":49,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4163},{"krate":0,"index":4164},{"krate":0,"index":4165}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":8663808,"byte_end":8663814,"line_start":71,"line_end":71,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4170},{"krate":0,"index":4171}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":8666109,"byte_end":8666115,"line_start":121,"line_end":121,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4176}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":8666291,"byte_end":8666297,"line_start":131,"line_end":131,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4181}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8652773,"byte_end":8652778,"line_start":47,"line_end":47,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4210},{"krate":0,"index":4211}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8652956,"byte_end":8652961,"line_start":57,"line_end":57,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4213}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8653206,"byte_end":8653223,"line_start":69,"line_end":69,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4217}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8653372,"byte_end":8653389,"line_start":75,"line_end":75,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4219},{"krate":0,"index":4220}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8653736,"byte_end":8653741,"line_start":90,"line_end":90,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4224}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8654410,"byte_end":8654415,"line_start":116,"line_end":116,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4227}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8654502,"byte_end":8654507,"line_start":122,"line_end":122,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4229}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8654604,"byte_end":8654609,"line_start":128,"line_end":128,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4231},{"krate":0,"index":4232}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8654872,"byte_end":8654874,"line_start":141,"line_end":141,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4235}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8655029,"byte_end":8655031,"line_start":150,"line_end":150,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4238},{"krate":0,"index":4239}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8655261,"byte_end":8655263,"line_start":163,"line_end":163,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4242}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8655386,"byte_end":8655388,"line_start":172,"line_end":172,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4245},{"krate":0,"index":4246},{"krate":0,"index":4247}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8622804,"byte_end":8622811,"line_start":161,"line_end":161,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4283},{"krate":0,"index":4285},{"krate":0,"index":4287},{"krate":0,"index":4290},{"krate":0,"index":4293},{"krate":0,"index":4297},{"krate":0,"index":4299},{"krate":0,"index":4300},{"krate":0,"index":4302},{"krate":0,"index":4304},{"krate":0,"index":4306},{"krate":0,"index":4308},{"krate":0,"index":4309},{"krate":0,"index":4310},{"krate":0,"index":4311},{"krate":0,"index":4313},{"krate":0,"index":4318},{"krate":0,"index":4321}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8639061,"byte_end":8639068,"line_start":667,"line_end":667,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4325}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8639398,"byte_end":8639412,"line_start":683,"line_end":683,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4328}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8639618,"byte_end":8639632,"line_start":695,"line_end":695,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4331}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8639769,"byte_end":8639783,"line_start":703,"line_end":703,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4336},{"krate":0,"index":4337}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8641632,"byte_end":8641637,"line_start":760,"line_end":760,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4339},{"krate":0,"index":4340},{"krate":0,"index":4341},{"krate":0,"index":4342},{"krate":0,"index":4343},{"krate":0,"index":4344}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8644150,"byte_end":8644155,"line_start":832,"line_end":832,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4353},{"krate":0,"index":4354}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8645120,"byte_end":8645130,"line_start":867,"line_end":867,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4356},{"krate":0,"index":4357},{"krate":0,"index":4358}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8645655,"byte_end":8645666,"line_start":885,"line_end":885,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4360},{"krate":0,"index":4361}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8646130,"byte_end":8646141,"line_start":900,"line_end":900,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4363},{"krate":0,"index":4364}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8646732,"byte_end":8646742,"line_start":921,"line_end":921,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4374}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8646867,"byte_end":8646878,"line_start":927,"line_end":927,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4376}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8647003,"byte_end":8647014,"line_start":933,"line_end":933,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4378}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/context.rs","byte_start":126539,"byte_end":126548,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8682226,"byte_end":8682240,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4498},{"krate":0,"index":4499},{"krate":0,"index":4500},{"krate":0,"index":4502}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8685779,"byte_end":8685784,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4520}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8686471,"byte_end":8686485,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4524}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8687372,"byte_end":8687386,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4528}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8687552,"byte_end":8687559,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4530},{"krate":0,"index":4532}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8688017,"byte_end":8688024,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4534}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8688192,"byte_end":8688195,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4536},{"krate":0,"index":4538},{"krate":0,"index":4541}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8689293,"byte_end":8689299,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4544},{"krate":0,"index":4545}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8696982,"byte_end":8696988,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8697013,"byte_end":8697019,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8697378,"byte_end":8697382,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4601}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8698160,"byte_end":8698164,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4605},{"krate":0,"index":4607},{"krate":0,"index":4609},{"krate":0,"index":4611},{"krate":0,"index":4613},{"krate":0,"index":4615},{"krate":0,"index":4618},{"krate":0,"index":4620},{"krate":0,"index":4622}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8703915,"byte_end":8703921,"line_start":273,"line_end":273,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4994}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8704546,"byte_end":8704555,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4639},{"krate":0,"index":4640},{"krate":0,"index":4641},{"krate":0,"index":4642},{"krate":0,"index":4643},{"krate":0,"index":4644},{"krate":0,"index":4645},{"krate":0,"index":4646}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8707634,"byte_end":8707643,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4648}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8707886,"byte_end":8707895,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4650}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8708172,"byte_end":8708181,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8708215,"byte_end":8708220,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4653}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":8708898,"byte_end":8708905,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4681},{"krate":0,"index":4682},{"krate":0,"index":4683},{"krate":0,"index":4684}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":8709382,"byte_end":8709389,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4688},{"krate":0,"index":4699},{"krate":0,"index":4703},{"krate":0,"index":4706},{"krate":0,"index":4709},{"krate":0,"index":4710},{"krate":0,"index":4711},{"krate":0,"index":4712},{"krate":0,"index":4713},{"krate":0,"index":4714},{"krate":0,"index":4716},{"krate":0,"index":4717},{"krate":0,"index":4718},{"krate":0,"index":4720}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":8711560,"byte_end":8711565,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4698}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8723869,"byte_end":8723879,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8723916,"byte_end":8723926,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8723942,"byte_end":8723952,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4737}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8724128,"byte_end":8724138,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8724165,"byte_end":8724175,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4742},{"krate":0,"index":4743}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8725401,"byte_end":8725411,"line_start":137,"line_end":137,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4746}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8725677,"byte_end":8725687,"line_start":149,"line_end":149,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4749}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":8726934,"byte_end":8726941,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4775},{"krate":0,"index":4778},{"krate":0,"index":4779},{"krate":0,"index":4780},{"krate":0,"index":4781},{"krate":0,"index":4782},{"krate":0,"index":4783},{"krate":0,"index":4784}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":8728472,"byte_end":8728479,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4786}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":8728569,"byte_end":8728576,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8731258,"byte_end":8731263,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4828},{"krate":0,"index":4829},{"krate":0,"index":4830},{"krate":0,"index":4832},{"krate":0,"index":4834},{"krate":0,"index":4836},{"krate":0,"index":4838},{"krate":0,"index":4839},{"krate":0,"index":4841},{"krate":0,"index":4845},{"krate":0,"index":4847},{"krate":0,"index":4849},{"krate":0,"index":4851},{"krate":0,"index":4854},{"krate":0,"index":4855}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8740119,"byte_end":8740127,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4858},{"krate":0,"index":4859},{"krate":0,"index":4860},{"krate":0,"index":4861},{"krate":0,"index":4862},{"krate":0,"index":4863},{"krate":0,"index":4864},{"krate":0,"index":4865},{"krate":0,"index":4866},{"krate":0,"index":4867},{"krate":0,"index":4868},{"krate":0,"index":4869},{"krate":0,"index":4870},{"krate":0,"index":4871},{"krate":0,"index":4872},{"krate":0,"index":4873},{"krate":0,"index":4874},{"krate":0,"index":4875},{"krate":0,"index":4876}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8742004,"byte_end":8742009,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4878}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8742168,"byte_end":8742176,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4880}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/waker.rs","byte_start":8743994,"byte_end":8744002,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4906},{"krate":0,"index":4907}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/stack.rs","byte_start":8745750,"byte_end":8745763,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5027},{"krate":0,"index":5028},{"krate":0,"index":5030}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/stack.rs","byte_start":8746921,"byte_end":8746925,"line_start":55,"line_end":55,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5039},{"krate":0,"index":5040}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/stack.rs","byte_start":8747325,"byte_end":8747329,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5044}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8690312,"byte_end":8690316,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8690347,"byte_end":8690351,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8690488,"byte_end":8690496,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8690537,"byte_end":8690545,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8692469,"byte_end":8692473,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4958},{"krate":0,"index":4959}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8692770,"byte_end":8692778,"line_start":134,"line_end":134,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5052},{"krate":0,"index":5053}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8693029,"byte_end":8693033,"line_start":144,"line_end":144,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5056}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8693226,"byte_end":8693234,"line_start":152,"line_end":152,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5059}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8693365,"byte_end":8693369,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4962}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8693538,"byte_end":8693546,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4965},{"krate":0,"index":4966}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8693832,"byte_end":8693836,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4969}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8694076,"byte_end":8694080,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4972}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8694232,"byte_end":8694240,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4975}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8694456,"byte_end":8694460,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4978},{"krate":0,"index":4979},{"krate":0,"index":4980},{"krate":0,"index":4981},{"krate":0,"index":4982}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":8749637,"byte_end":8749649,"line_start":85,"line_end":85,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5106},{"krate":0,"index":5107},{"krate":0,"index":5108}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":8751285,"byte_end":8751297,"line_start":136,"line_end":136,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5110}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":8751383,"byte_end":8751395,"line_start":142,"line_end":142,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5112}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":8751556,"byte_end":8751563,"line_start":150,"line_end":150,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5114},{"krate":0,"index":5115}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":8753727,"byte_end":8753732,"line_start":218,"line_end":218,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5119}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":8756401,"byte_end":8756408,"line_start":303,"line_end":303,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5121}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/schedule.rs","byte_start":8756911,"byte_end":8756923,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5134},{"krate":0,"index":5135},{"krate":0,"index":5136}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/shutdown.rs","byte_start":8757796,"byte_end":8757804,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5143}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/task.rs","byte_start":8759424,"byte_end":8759436,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5156}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/task.rs","byte_start":8759662,"byte_end":8759674,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/task.rs","byte_start":8759704,"byte_end":8759716,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5162},{"krate":0,"index":5163}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":129965,"byte_end":129972,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":137892,"byte_end":137899,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5196}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138448,"byte_end":138455,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5198}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138975,"byte_end":138982,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5200},{"krate":0,"index":5201}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":140925,"byte_end":140932,"line_start":451,"line_end":451,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5206},{"krate":0,"index":5207}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":142878,"byte_end":142885,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":142964,"byte_end":142971,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":143766,"byte_end":143778,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":145431,"byte_end":145436,"line_start":70,"line_end":70,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":146656,"byte_end":146677,"line_start":112,"line_end":112,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5236}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":147507,"byte_end":147512,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5241}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":148422,"byte_end":148427,"line_start":174,"line_end":174,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5252}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":149620,"byte_end":149625,"line_start":212,"line_end":212,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":149755,"byte_end":149760,"line_start":218,"line_end":218,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150818,"byte_end":150824,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153920,"byte_end":153926,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5276},{"krate":0,"index":5278}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":159716,"byte_end":159722,"line_start":284,"line_end":284,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5282}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163286,"byte_end":163301,"line_start":359,"line_end":359,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163449,"byte_end":163464,"line_start":365,"line_end":365,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163622,"byte_end":163637,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":8761687,"byte_end":8761693,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5316}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":8762162,"byte_end":8762168,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5318}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":8762484,"byte_end":8762490,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5320},{"krate":0,"index":5321},{"krate":0,"index":5322},{"krate":0,"index":5323},{"krate":0,"index":5324}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":8763142,"byte_end":8763150,"line_start":109,"line_end":109,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5327}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":8763219,"byte_end":8763224,"line_start":115,"line_end":115,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5329},{"krate":0,"index":5330},{"krate":0,"index":5331},{"krate":0,"index":5332},{"krate":0,"index":5333},{"krate":0,"index":5334}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/shell.rs","byte_start":165926,"byte_end":165931,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/shell.rs","byte_start":166537,"byte_end":166543,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/spawner.rs","byte_start":167159,"byte_end":167166,"line_start":22,"line_end":22,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5364}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8770272,"byte_end":8770277,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8770308,"byte_end":8770313,"line_start":67,"line_end":67,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8770344,"byte_end":8770350,"line_start":68,"line_end":68,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8770381,"byte_end":8770387,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8771246,"byte_end":8771251,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5420},{"krate":0,"index":5421},{"krate":0,"index":5423},{"krate":0,"index":5429}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8777785,"byte_end":8777790,"line_start":291,"line_end":291,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5433},{"krate":0,"index":5434},{"krate":0,"index":5436}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8782958,"byte_end":8782963,"line_start":441,"line_end":441,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5441}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8783059,"byte_end":8783064,"line_start":447,"line_end":447,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5444}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8783223,"byte_end":8783228,"line_start":455,"line_end":455,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5447}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8783416,"byte_end":8783422,"line_start":464,"line_end":464,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5450},{"krate":0,"index":5451},{"krate":0,"index":5452},{"krate":0,"index":5453},{"krate":0,"index":5454},{"krate":0,"index":5455},{"krate":0,"index":5456},{"krate":0,"index":5457}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8786927,"byte_end":8786933,"line_start":595,"line_end":595,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5460}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/atomic_cell.rs","byte_start":8791087,"byte_end":8791097,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/atomic_cell.rs","byte_start":8791134,"byte_end":8791144,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/atomic_cell.rs","byte_start":8791160,"byte_end":8791170,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5481},{"krate":0,"index":5482},{"krate":0,"index":5483},{"krate":0,"index":5484}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/atomic_cell.rs","byte_start":8791957,"byte_end":8791967,"line_start":47,"line_end":47,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5491}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/idle.rs","byte_start":8792773,"byte_end":8792777,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5508},{"krate":0,"index":5509},{"krate":0,"index":5510},{"krate":0,"index":5511},{"krate":0,"index":5512},{"krate":0,"index":5513},{"krate":0,"index":5514},{"krate":0,"index":5515}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/idle.rs","byte_start":8796650,"byte_end":8796655,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5517},{"krate":0,"index":5518},{"krate":0,"index":5519},{"krate":0,"index":5520},{"krate":0,"index":5521},{"krate":0,"index":5522},{"krate":0,"index":5523},{"krate":0,"index":5524}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/idle.rs","byte_start":8798133,"byte_end":8798138,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5526}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/idle.rs","byte_start":8798311,"byte_end":8798316,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5530}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":8804080,"byte_end":8804085,"line_start":185,"line_end":185,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5685}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":8807850,"byte_end":8807856,"line_start":282,"line_end":282,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5589}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":8808631,"byte_end":8808638,"line_start":313,"line_end":313,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5594},{"krate":0,"index":5595},{"krate":0,"index":5597},{"krate":0,"index":5598},{"krate":0,"index":5599}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":8812904,"byte_end":8812908,"line_start":444,"line_end":444,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5601},{"krate":0,"index":5602},{"krate":0,"index":5605},{"krate":0,"index":5607},{"krate":0,"index":5608},{"krate":0,"index":5609},{"krate":0,"index":5610},{"krate":0,"index":5611},{"krate":0,"index":5612},{"krate":0,"index":5613},{"krate":0,"index":5614}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":8817694,"byte_end":8817700,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5617},{"krate":0,"index":5618},{"krate":0,"index":5619}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":8818140,"byte_end":8818143,"line_start":616,"line_end":616,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5621},{"krate":0,"index":5623},{"krate":0,"index":5626},{"krate":0,"index":5627}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":8820714,"byte_end":8820720,"line_start":694,"line_end":694,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5629},{"krate":0,"index":5631},{"krate":0,"index":5632},{"krate":0,"index":5633},{"krate":0,"index":5634},{"krate":0,"index":5635},{"krate":0,"index":5636},{"krate":0,"index":5637},{"krate":0,"index":5638}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":8788985,"byte_end":8788995,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5650},{"krate":0,"index":5651},{"krate":0,"index":5652},{"krate":0,"index":5654}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":8790150,"byte_end":8790160,"line_start":86,"line_end":86,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5657}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":8790299,"byte_end":8790309,"line_start":92,"line_end":92,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5659}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":8790416,"byte_end":8790423,"line_start":100,"line_end":100,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5661}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":8790768,"byte_end":8790775,"line_start":113,"line_end":113,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5664}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115508,"byte_end":115515,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":740},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":171769,"byte_end":171775,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":749},{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":172543,"byte_end":172549,"line_start":85,"line_end":85,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5726}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":173316,"byte_end":173326,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":174173,"byte_end":174189,"line_start":157,"line_end":157,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5741}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":174321,"byte_end":174337,"line_start":163,"line_end":163,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5743}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":176077,"byte_end":176083,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5748},{"krate":0,"index":5749}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8828567,"byte_end":8828570,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5778},{"krate":0,"index":5779}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8829292,"byte_end":8829300,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5786}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8829390,"byte_end":8829398,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5789},{"krate":0,"index":5791},{"krate":0,"index":5792}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8831551,"byte_end":8831558,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5799},{"krate":0,"index":5800}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8831666,"byte_end":8831673,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5802},{"krate":0,"index":5803},{"krate":0,"index":5804},{"krate":0,"index":5805}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8837745,"byte_end":8837754,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5843}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8837868,"byte_end":8837877,"line_start":32,"line_end":32,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5846},{"krate":0,"index":5848}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8838265,"byte_end":8838276,"line_start":51,"line_end":51,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5853}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8838562,"byte_end":8838572,"line_start":63,"line_end":63,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5855},{"krate":0,"index":5856},{"krate":0,"index":5857},{"krate":0,"index":5858},{"krate":0,"index":5859},{"krate":0,"index":5860},{"krate":0,"index":5861},{"krate":0,"index":5862},{"krate":0,"index":5863},{"krate":0,"index":5864},{"krate":0,"index":5865},{"krate":0,"index":5866}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8842368,"byte_end":8842378,"line_start":190,"line_end":190,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5872}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8844727,"byte_end":8844733,"line_start":262,"line_end":262,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5879}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8845018,"byte_end":8845024,"line_start":273,"line_end":273,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5881},{"krate":0,"index":5882}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8851213,"byte_end":8851219,"line_start":423,"line_end":423,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5886},{"krate":0,"index":5891}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8853077,"byte_end":8853083,"line_start":487,"line_end":487,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5929},{"krate":0,"index":5930}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":8888075,"byte_end":8888084,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5943}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":8888230,"byte_end":8888239,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":8888278,"byte_end":8888287,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5950},{"krate":0,"index":5951}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":8889238,"byte_end":8889247,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5964}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":8889393,"byte_end":8889402,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":8889441,"byte_end":8889450,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5971},{"krate":0,"index":5972}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/chain.rs","byte_start":8890373,"byte_end":8890378,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5986}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/chain.rs","byte_start":8890558,"byte_end":8890563,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5990},{"krate":0,"index":5991},{"krate":0,"index":5993}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8892141,"byte_end":8892148,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6014}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8892432,"byte_end":8892439,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6018},{"krate":0,"index":6019}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8893415,"byte_end":8893421,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8893476,"byte_end":8893482,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":6031},{"krate":0,"index":6032},{"krate":0,"index":6033},{"krate":0,"index":6034}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8893871,"byte_end":8893874,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8893920,"byte_end":8893923,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6039},{"krate":0,"index":6040},{"krate":0,"index":6041},{"krate":0,"index":6042}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8894306,"byte_end":8894309,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8894357,"byte_end":8894360,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6047},{"krate":0,"index":6048},{"krate":0,"index":6049},{"krate":0,"index":6050}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8894875,"byte_end":8894881,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8894970,"byte_end":8894976,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6059},{"krate":0,"index":6060},{"krate":0,"index":6061},{"krate":0,"index":6062}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8896054,"byte_end":8896059,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8896107,"byte_end":8896112,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6067},{"krate":0,"index":6068},{"krate":0,"index":6069},{"krate":0,"index":6070}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8896512,"byte_end":8896520,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8896568,"byte_end":8896576,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6075},{"krate":0,"index":6076},{"krate":0,"index":6077},{"krate":0,"index":6078}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8897847,"byte_end":8897852,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8897883,"byte_end":8897888,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8897919,"byte_end":8897924,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8898467,"byte_end":8898472,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6105},{"krate":0,"index":6106},{"krate":0,"index":6107}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":8899086,"byte_end":8899092,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6122}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":8899310,"byte_end":8899316,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6126}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":8899435,"byte_end":8899441,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6130},{"krate":0,"index":6131},{"krate":0,"index":6132}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":8900527,"byte_end":8900536,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6145}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":8900757,"byte_end":8900766,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6149}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":8900888,"byte_end":8900897,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6154},{"krate":0,"index":6155},{"krate":0,"index":6156}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fold.rs","byte_start":8901969,"byte_end":8901979,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6170}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fold.rs","byte_start":8902175,"byte_end":8902185,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6175},{"krate":0,"index":6176}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fuse.rs","byte_start":8903084,"byte_end":8903088,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6187}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fuse.rs","byte_start":8903248,"byte_end":8903252,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6190},{"krate":0,"index":6191},{"krate":0,"index":6192}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8904195,"byte_end":8904199,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8904861,"byte_end":8904865,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6206},{"krate":0,"index":6207},{"krate":0,"index":6208}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":8905611,"byte_end":8905614,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6223}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":8905803,"byte_end":8905806,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6227}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":8905927,"byte_end":8905930,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6232},{"krate":0,"index":6233},{"krate":0,"index":6236}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/merge.rs","byte_start":8906775,"byte_end":8906780,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6250}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/merge.rs","byte_start":8907034,"byte_end":8907039,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6254},{"krate":0,"index":6255},{"krate":0,"index":6256}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":8908551,"byte_end":8908555,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":8908589,"byte_end":8908593,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6274}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":8908734,"byte_end":8908738,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6277},{"krate":0,"index":6278}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8909234,"byte_end":8909238,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8909865,"byte_end":8909869,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6296},{"krate":0,"index":6297},{"krate":0,"index":6298}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8910416,"byte_end":8910423,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8910454,"byte_end":8910461,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8910492,"byte_end":8910499,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8911192,"byte_end":8911199,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6319},{"krate":0,"index":6320},{"krate":0,"index":6321}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8916864,"byte_end":8916873,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6336},{"krate":0,"index":6337},{"krate":0,"index":6338},{"krate":0,"index":6341},{"krate":0,"index":6344},{"krate":0,"index":6347},{"krate":0,"index":6348},{"krate":0,"index":6349},{"krate":0,"index":6350},{"krate":0,"index":6351},{"krate":0,"index":6352},{"krate":0,"index":6354}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8923874,"byte_end":8923883,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6359}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8925422,"byte_end":8925431,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6364},{"krate":0,"index":6365},{"krate":0,"index":6366}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":8926647,"byte_end":8926651,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6378}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":8926861,"byte_end":8926865,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6381}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":8926998,"byte_end":8927002,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6384},{"krate":0,"index":6385},{"krate":0,"index":6386}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":8928228,"byte_end":8928237,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6400}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":8928458,"byte_end":8928467,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6404}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":8928652,"byte_end":8928661,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6408},{"krate":0,"index":6409},{"krate":0,"index":6410}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":8930010,"byte_end":8930017,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":8930051,"byte_end":8930058,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6426}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":8930265,"byte_end":8930272,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":6431},{"krate":0,"index":6432}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":8930882,"byte_end":8930886,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6445}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":8931096,"byte_end":8931100,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6448}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":8931233,"byte_end":8931237,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6451},{"krate":0,"index":6452},{"krate":0,"index":6454}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":8932756,"byte_end":8932765,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6467}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":8933025,"byte_end":8933034,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6471}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":8933227,"byte_end":8933236,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6475},{"krate":0,"index":6476},{"krate":0,"index":6479}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/timeout.rs","byte_start":8965181,"byte_end":8965188,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6612}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/timeout.rs","byte_start":8965543,"byte_end":8965550,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6615},{"krate":0,"index":6616},{"krate":0,"index":6617}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8887305,"byte_end":8887307,"line_start":824,"line_end":824,"column_start":32,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8984018,"byte_end":8984025,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6625},{"krate":0,"index":6626}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8987305,"byte_end":8987322,"line_start":128,"line_end":128,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6630}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8997889,"byte_end":8997895,"line_start":340,"line_end":340,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6702}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8998022,"byte_end":8998028,"line_start":346,"line_end":346,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6706}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8998189,"byte_end":8998193,"line_start":352,"line_end":352,"column_start":61,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8998263,"byte_end":8998267,"line_start":353,"line_end":353,"column_start":61,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9001041,"byte_end":9001047,"line_start":444,"line_end":444,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9001084,"byte_end":9001090,"line_start":445,"line_end":445,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9001128,"byte_end":9001136,"line_start":447,"line_end":447,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9001173,"byte_end":9001181,"line_start":448,"line_end":448,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9001197,"byte_end":9001203,"line_start":450,"line_end":450,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6726},{"krate":0,"index":6728},{"krate":0,"index":6729},{"krate":0,"index":6730}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9006839,"byte_end":9006843,"line_start":637,"line_end":637,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6734}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9007235,"byte_end":9007241,"line_start":652,"line_end":652,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6737}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9007421,"byte_end":9007427,"line_start":661,"line_end":661,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6740}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9007581,"byte_end":9007589,"line_start":669,"line_end":669,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6743}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9012454,"byte_end":9012462,"line_start":787,"line_end":787,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6747},{"krate":0,"index":6748},{"krate":0,"index":6762}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9015215,"byte_end":9015220,"line_start":856,"line_end":856,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6760}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9018634,"byte_end":9018642,"line_start":960,"line_end":960,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6767},{"krate":0,"index":6768}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9019092,"byte_end":9019100,"line_start":979,"line_end":979,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6772}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9020284,"byte_end":9020288,"line_start":1019,"line_end":1019,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6778},{"krate":0,"index":6779}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9021130,"byte_end":9021134,"line_start":1049,"line_end":1049,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6783},{"krate":0,"index":6784}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9021864,"byte_end":9021872,"line_start":1073,"line_end":1073,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8007}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9023184,"byte_end":9023188,"line_start":1115,"line_end":1115,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8012},{"krate":0,"index":8013}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9023912,"byte_end":9023916,"line_start":1137,"line_end":1137,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6788}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9024714,"byte_end":9024720,"line_start":1166,"line_end":1166,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6792},{"krate":0,"index":6793},{"krate":0,"index":6794},{"krate":0,"index":6795},{"krate":0,"index":6796}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9025135,"byte_end":9025141,"line_start":1183,"line_end":1183,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6799}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9025285,"byte_end":9025293,"line_start":1189,"line_end":1189,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6802}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9025428,"byte_end":9025437,"line_start":1195,"line_end":1195,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6806}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9025610,"byte_end":9025619,"line_start":1204,"line_end":1204,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6811}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9025910,"byte_end":9025919,"line_start":1214,"line_end":1214,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6814}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9026192,"byte_end":9026201,"line_start":1223,"line_end":1223,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9026228,"byte_end":9026240,"line_start":1225,"line_end":1225,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6817}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9026582,"byte_end":9026594,"line_start":1235,"line_end":1235,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":9032903,"byte_end":9032908,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6868},{"krate":0,"index":6869},{"krate":0,"index":6870},{"krate":0,"index":6871},{"krate":0,"index":6873},{"krate":0,"index":6875},{"krate":0,"index":6876},{"krate":0,"index":6877},{"krate":0,"index":6879},{"krate":0,"index":6880},{"krate":0,"index":6881},{"krate":0,"index":6883},{"krate":0,"index":6884},{"krate":0,"index":6885}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":9042890,"byte_end":9042896,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6890}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":9043378,"byte_end":9043384,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6893},{"krate":0,"index":6894}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9044022,"byte_end":9044028,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6912}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9044160,"byte_end":9044166,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6915}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9044573,"byte_end":9044581,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6921}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9046353,"byte_end":9046361,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6927},{"krate":0,"index":6928},{"krate":0,"index":6933},{"krate":0,"index":6934},{"krate":0,"index":6935}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9048789,"byte_end":9048797,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9048857,"byte_end":9048865,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8020},{"krate":0,"index":8021}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9049053,"byte_end":9049059,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6940},{"krate":0,"index":6941},{"krate":0,"index":6946},{"krate":0,"index":6947},{"krate":0,"index":6952},{"krate":0,"index":6954}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9060449,"byte_end":9060451,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6989}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9060852,"byte_end":9060854,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6997}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9061161,"byte_end":9061170,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7000}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9061432,"byte_end":9061444,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":7003}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9063139,"byte_end":9063143,"line_start":120,"line_end":120,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7025}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9063776,"byte_end":9063784,"line_start":144,"line_end":144,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7032}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9064050,"byte_end":9064054,"line_start":153,"line_end":153,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9064103,"byte_end":9064107,"line_start":154,"line_end":154,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9064586,"byte_end":9064588,"line_start":178,"line_end":178,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7045},{"krate":0,"index":7046},{"krate":0,"index":7047},{"krate":0,"index":7048}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9065286,"byte_end":9065288,"line_start":204,"line_end":204,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7051}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9065436,"byte_end":9065438,"line_start":210,"line_end":210,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7054}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9065616,"byte_end":9065618,"line_start":216,"line_end":216,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7058}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9066018,"byte_end":9066020,"line_start":232,"line_end":232,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7062}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9066429,"byte_end":9066431,"line_start":253,"line_end":253,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7066},{"krate":0,"index":7067},{"krate":0,"index":7069},{"krate":0,"index":7073}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9069551,"byte_end":9069553,"line_start":344,"line_end":344,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7079}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9069989,"byte_end":9069993,"line_start":365,"line_end":365,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7085}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9070457,"byte_end":9070461,"line_start":387,"line_end":387,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7089}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9071010,"byte_end":9071022,"line_start":404,"line_end":404,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7094}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9072622,"byte_end":9072633,"line_start":475,"line_end":475,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7113},{"krate":0,"index":7114},{"krate":0,"index":7115},{"krate":0,"index":7116},{"krate":0,"index":7117},{"krate":0,"index":7118},{"krate":0,"index":7120},{"krate":0,"index":7121},{"krate":0,"index":7122}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":9075350,"byte_end":9075352,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7152},{"krate":0,"index":7153},{"krate":0,"index":7154},{"krate":0,"index":7156}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":9081056,"byte_end":9081058,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7159}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":9081335,"byte_end":9081337,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7162},{"krate":0,"index":7163},{"krate":0,"index":7164},{"krate":0,"index":7165}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":9084736,"byte_end":9084738,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7168}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9085412,"byte_end":9085427,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7184}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9085568,"byte_end":9085583,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7187}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9086041,"byte_end":9086058,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7193}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9087036,"byte_end":9087053,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7199},{"krate":0,"index":7200},{"krate":0,"index":7201},{"krate":0,"index":7206},{"krate":0,"index":7207}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9089525,"byte_end":9089542,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7210},{"krate":0,"index":7211}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9089708,"byte_end":9089723,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7214},{"krate":0,"index":7215}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9090833,"byte_end":9090842,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7225}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9091002,"byte_end":9091011,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9091497,"byte_end":9091509,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9091542,"byte_end":9091554,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7232}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9091894,"byte_end":9091906,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7235}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9092135,"byte_end":9092144,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7237}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9092274,"byte_end":9092283,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9092769,"byte_end":9092781,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7240}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9093087,"byte_end":9093099,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9093256,"byte_end":9093267,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7243}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9093366,"byte_end":9093377,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7245}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9093507,"byte_end":9093518,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9094022,"byte_end":9094038,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9094075,"byte_end":9094091,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8077}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9100407,"byte_end":9100412,"line_start":158,"line_end":158,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9100466,"byte_end":9100471,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9100525,"byte_end":9100535,"line_start":160,"line_end":160,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9100600,"byte_end":9100615,"line_start":161,"line_end":161,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9100902,"byte_end":9100914,"line_start":171,"line_end":171,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7273}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9101051,"byte_end":9101063,"line_start":177,"line_end":177,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9101871,"byte_end":9101876,"line_start":203,"line_end":203,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7277},{"krate":0,"index":7278},{"krate":0,"index":7281},{"krate":0,"index":7284},{"krate":0,"index":7288},{"krate":0,"index":7289},{"krate":0,"index":7290}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9106449,"byte_end":9106454,"line_start":361,"line_end":361,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7293}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9106538,"byte_end":9106543,"line_start":367,"line_end":367,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7296}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9106692,"byte_end":9106702,"line_start":378,"line_end":378,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7299}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9106803,"byte_end":9106813,"line_start":384,"line_end":384,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7302},{"krate":0,"index":7303}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9106960,"byte_end":9106970,"line_start":391,"line_end":391,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7306}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9107127,"byte_end":9107137,"line_start":397,"line_end":397,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7309}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9107303,"byte_end":9107313,"line_start":403,"line_end":403,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":7312}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9107491,"byte_end":9107506,"line_start":411,"line_end":411,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7315}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9107603,"byte_end":9107618,"line_start":417,"line_end":417,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7318},{"krate":0,"index":7319}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9107761,"byte_end":9107776,"line_start":424,"line_end":424,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7322}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9107929,"byte_end":9107944,"line_start":430,"line_end":430,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7325}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9108106,"byte_end":9108121,"line_start":436,"line_end":436,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":7328}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9112085,"byte_end":9112093,"line_start":135,"line_end":135,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9112126,"byte_end":9112134,"line_start":136,"line_end":136,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9112397,"byte_end":9112403,"line_start":154,"line_end":154,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7358},{"krate":0,"index":7359},{"krate":0,"index":7362}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9116411,"byte_end":9116417,"line_start":282,"line_end":282,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7364}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9118155,"byte_end":9118163,"line_start":336,"line_end":336,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7367}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9118673,"byte_end":9118681,"line_start":352,"line_end":352,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7369},{"krate":0,"index":7370}],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9123511,"byte_end":9123519,"line_start":474,"line_end":474,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7373}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9126477,"byte_end":9126483,"line_start":539,"line_end":539,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7376},{"krate":0,"index":7377},{"krate":0,"index":7378},{"krate":0,"index":7379},{"krate":0,"index":7380}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9128359,"byte_end":9128368,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7406}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9128530,"byte_end":9128539,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9128608,"byte_end":9128620,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7409}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9128919,"byte_end":9128931,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9130742,"byte_end":9130748,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7422},{"krate":0,"index":7425},{"krate":0,"index":7427},{"krate":0,"index":7432}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9137049,"byte_end":9137055,"line_start":357,"line_end":357,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7435}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9137194,"byte_end":9137202,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7438},{"krate":0,"index":7439}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9141593,"byte_end":9141601,"line_start":514,"line_end":514,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7442}],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9141748,"byte_end":9141756,"line_start":522,"line_end":522,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7445},{"krate":0,"index":7446}],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9142219,"byte_end":9142224,"line_start":538,"line_end":538,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7449},{"krate":0,"index":7450},{"krate":0,"index":7452},{"krate":0,"index":7453},{"krate":0,"index":7455},{"krate":0,"index":7459},{"krate":0,"index":7463},{"krate":0,"index":7465},{"krate":0,"index":7467},{"krate":0,"index":7469}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9146596,"byte_end":9146601,"line_start":684,"line_end":684,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9146638,"byte_end":9146643,"line_start":685,"line_end":685,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9146668,"byte_end":9146673,"line_start":687,"line_end":687,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7477}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9147042,"byte_end":9147047,"line_start":705,"line_end":705,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7481}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9147442,"byte_end":9147447,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7488},{"krate":0,"index":7489},{"krate":0,"index":7490},{"krate":0,"index":7491},{"krate":0,"index":7492},{"krate":0,"index":7493},{"krate":0,"index":7494},{"krate":0,"index":7495},{"krate":0,"index":7496},{"krate":0,"index":7497},{"krate":0,"index":7498},{"krate":0,"index":7499},{"krate":0,"index":7500}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9149160,"byte_end":9149165,"line_start":786,"line_end":786,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7502}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9152643,"byte_end":9152652,"line_start":93,"line_end":93,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7543},{"krate":0,"index":7544},{"krate":0,"index":7545},{"krate":0,"index":7546},{"krate":0,"index":7547},{"krate":0,"index":7548},{"krate":0,"index":7549},{"krate":0,"index":7551},{"krate":0,"index":7552},{"krate":0,"index":7553},{"krate":0,"index":7557}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9162573,"byte_end":9162582,"line_start":357,"line_end":357,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7561}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9162783,"byte_end":9162789,"line_start":365,"line_end":365,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7563},{"krate":0,"index":7564}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9163655,"byte_end":9163662,"line_start":394,"line_end":394,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7566},{"krate":0,"index":7567}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9164340,"byte_end":9164347,"line_start":418,"line_end":418,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7570},{"krate":0,"index":7571}],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9165146,"byte_end":9165153,"line_start":448,"line_end":448,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7575}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9166795,"byte_end":9166802,"line_start":485,"line_end":485,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9166849,"byte_end":9166861,"line_start":489,"line_end":489,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":7578}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9166954,"byte_end":9166966,"line_start":495,"line_end":495,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7580}],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9167110,"byte_end":9167122,"line_start":501,"line_end":501,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9167169,"byte_end":9167184,"line_start":505,"line_end":505,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7583},{"krate":0,"index":7584}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9167806,"byte_end":9167821,"line_start":526,"line_end":526,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7586}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9168107,"byte_end":9168122,"line_start":535,"line_end":535,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9168215,"byte_end":9168221,"line_start":540,"line_end":540,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7589},{"krate":0,"index":7590},{"krate":0,"index":7591},{"krate":0,"index":7592},{"krate":0,"index":7593}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9173490,"byte_end":9173499,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7635},{"krate":0,"index":7636},{"krate":0,"index":7637},{"krate":0,"index":7640},{"krate":0,"index":7642},{"krate":0,"index":7646},{"krate":0,"index":7647},{"krate":0,"index":7648},{"krate":0,"index":7649},{"krate":0,"index":7654},{"krate":0,"index":7655},{"krate":0,"index":7656},{"krate":0,"index":7657}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9189693,"byte_end":9189702,"line_start":578,"line_end":578,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7659}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9189781,"byte_end":9189790,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7661}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9190168,"byte_end":9190177,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9190202,"byte_end":9190211,"line_start":596,"line_end":596,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9190249,"byte_end":9190255,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7666},{"krate":0,"index":7668},{"krate":0,"index":7669},{"krate":0,"index":7673},{"krate":0,"index":7675},{"krate":0,"index":7676}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9196661,"byte_end":9196667,"line_start":793,"line_end":793,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7679}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9196740,"byte_end":9196746,"line_start":799,"line_end":799,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7681}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9197168,"byte_end":9197180,"line_start":815,"line_end":815,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":7683}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9197360,"byte_end":9197372,"line_start":825,"line_end":825,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7686}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9197516,"byte_end":9197528,"line_start":831,"line_end":831,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9197575,"byte_end":9197590,"line_start":835,"line_end":835,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7689},{"krate":0,"index":7690}],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9198120,"byte_end":9198135,"line_start":854,"line_end":854,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7692}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9198421,"byte_end":9198436,"line_start":863,"line_end":863,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9198474,"byte_end":9198480,"line_start":867,"line_end":867,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7695},{"krate":0,"index":7696},{"krate":0,"index":7697},{"krate":0,"index":7698},{"krate":0,"index":7699},{"krate":0,"index":7700},{"krate":0,"index":7701},{"krate":0,"index":7702},{"krate":0,"index":7703}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9203893,"byte_end":9203901,"line_start":1034,"line_end":1034,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7705},{"krate":0,"index":7706},{"krate":0,"index":7707},{"krate":0,"index":7708},{"krate":0,"index":7709},{"krate":0,"index":7710},{"krate":0,"index":7711},{"krate":0,"index":7712},{"krate":0,"index":7713},{"krate":0,"index":7714},{"krate":0,"index":7715},{"krate":0,"index":7716},{"krate":0,"index":7717},{"krate":0,"index":7718},{"krate":0,"index":7719},{"krate":0,"index":7720}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9207564,"byte_end":9207572,"line_start":1172,"line_end":1172,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7722}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9207925,"byte_end":9207936,"line_start":1188,"line_end":1188,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7724},{"krate":0,"index":7725},{"krate":0,"index":7726},{"krate":0,"index":7727},{"krate":0,"index":7728},{"krate":0,"index":7729},{"krate":0,"index":7730},{"krate":0,"index":7731}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9210665,"byte_end":9210674,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7736},{"krate":0,"index":7737},{"krate":0,"index":7738},{"krate":0,"index":7739},{"krate":0,"index":7742},{"krate":0,"index":7743},{"krate":0,"index":7746}],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9212769,"byte_end":9212784,"line_start":138,"line_end":138,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7749}],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9213029,"byte_end":9213049,"line_start":147,"line_end":147,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7751}],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9213303,"byte_end":9213318,"line_start":156,"line_end":156,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7754}],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9213426,"byte_end":9213446,"line_start":162,"line_end":162,"column_start":15,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7756}],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9217267,"byte_end":9217282,"line_start":113,"line_end":113,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7771}],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9217549,"byte_end":9217564,"line_start":123,"line_end":123,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7776}],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9218568,"byte_end":9218574,"line_start":156,"line_end":156,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9218628,"byte_end":9218634,"line_start":157,"line_end":157,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9218695,"byte_end":9218710,"line_start":158,"line_end":158,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9218775,"byte_end":9218791,"line_start":159,"line_end":159,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":687,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9218849,"byte_end":9218855,"line_start":161,"line_end":161,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7787},{"krate":0,"index":7788},{"krate":0,"index":7792},{"krate":0,"index":7796}],"docs":"","sig":null,"attributes":[]},{"id":688,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9221972,"byte_end":9221987,"line_start":264,"line_end":264,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7799},{"krate":0,"index":7800}],"docs":"","sig":null,"attributes":[]},{"id":689,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9222126,"byte_end":9222142,"line_start":272,"line_end":272,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":7803},{"krate":0,"index":7804}],"docs":"","sig":null,"attributes":[]},{"id":690,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9222284,"byte_end":9222300,"line_start":280,"line_end":280,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7807}],"docs":"","sig":null,"attributes":[]},{"id":691,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9222422,"byte_end":9222428,"line_start":286,"line_end":286,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7810}],"docs":"","sig":null,"attributes":[]},{"id":692,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9222512,"byte_end":9222518,"line_start":292,"line_end":292,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7813}],"docs":"","sig":null,"attributes":[]},{"id":693,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9228793,"byte_end":9228804,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7837},{"krate":0,"index":7838},{"krate":0,"index":7839},{"krate":0,"index":7840},{"krate":0,"index":7844},{"krate":0,"index":7845}],"docs":"","sig":null,"attributes":[]},{"id":694,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9234731,"byte_end":9234742,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7848}],"docs":"","sig":null,"attributes":[]},{"id":695,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9234828,"byte_end":9234839,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7850}],"docs":"","sig":null,"attributes":[]},{"id":696,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9234972,"byte_end":9234983,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":697,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9235008,"byte_end":9235019,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":698,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9235115,"byte_end":9235120,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7857},{"krate":0,"index":7858}],"docs":"","sig":null,"attributes":[]},{"id":699,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9238661,"byte_end":9238670,"line_start":108,"line_end":108,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7889}],"docs":"","sig":null,"attributes":[]},{"id":700,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9238850,"byte_end":9238859,"line_start":114,"line_end":114,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":701,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9241018,"byte_end":9241026,"line_start":204,"line_end":204,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7900},{"krate":0,"index":7901}],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9242298,"byte_end":9242306,"line_start":248,"line_end":248,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7905}],"docs":"","sig":null,"attributes":[]},{"id":703,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9243672,"byte_end":9243680,"line_start":292,"line_end":292,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7912},{"krate":0,"index":7913}],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9243939,"byte_end":9243947,"line_start":302,"line_end":302,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7917}],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9244250,"byte_end":9244258,"line_start":314,"line_end":314,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7920}],"docs":"","sig":null,"attributes":[]},{"id":706,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9244372,"byte_end":9244378,"line_start":320,"line_end":320,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7923},{"krate":0,"index":7924},{"krate":0,"index":7928}],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9245913,"byte_end":9245919,"line_start":373,"line_end":373,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7933}],"docs":"","sig":null,"attributes":[]},{"id":708,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9246158,"byte_end":9246161,"line_start":384,"line_end":384,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7936},{"krate":0,"index":7937}],"docs":"","sig":null,"attributes":[]},{"id":709,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9246302,"byte_end":9246308,"line_start":394,"line_end":394,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7940}],"docs":"","sig":null,"attributes":[]},{"id":710,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9246410,"byte_end":9246417,"line_start":402,"line_end":402,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7942}],"docs":"","sig":null,"attributes":[]},{"id":711,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9246640,"byte_end":9246647,"line_start":411,"line_end":411,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7944}],"docs":"","sig":null,"attributes":[]},{"id":712,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9246764,"byte_end":9246771,"line_start":417,"line_end":417,"column_start":23,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":713,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9246801,"byte_end":9246808,"line_start":419,"line_end":419,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7947}],"docs":"","sig":null,"attributes":[]},{"id":714,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9246955,"byte_end":9246962,"line_start":425,"line_end":425,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7950},{"krate":0,"index":7951}],"docs":"","sig":null,"attributes":[]},{"id":715,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/yield_now.rs","byte_start":9265773,"byte_end":9265781,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8372},{"krate":0,"index":8373}],"docs":"","sig":null,"attributes":[]},{"id":716,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9272913,"byte_end":9272921,"line_start":221,"line_end":221,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8407},{"krate":0,"index":8408},{"krate":0,"index":8410},{"krate":0,"index":8412},{"krate":0,"index":8416},{"krate":0,"index":8418},{"krate":0,"index":8421}],"docs":"","sig":null,"attributes":[]},{"id":717,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9280763,"byte_end":9280771,"line_start":446,"line_end":446,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8425}],"docs":"","sig":null,"attributes":[]},{"id":718,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9280910,"byte_end":9280918,"line_start":452,"line_end":452,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8427},{"krate":0,"index":8428}],"docs":"","sig":null,"attributes":[]},{"id":719,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9281883,"byte_end":9281891,"line_start":476,"line_end":476,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8431}],"docs":"","sig":null,"attributes":[]},{"id":720,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9281972,"byte_end":9281980,"line_start":482,"line_end":482,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8433}],"docs":"","sig":null,"attributes":[]},{"id":721,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9282847,"byte_end":9282855,"line_start":512,"line_end":512,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8437},{"krate":0,"index":8438}],"docs":"","sig":null,"attributes":[]},{"id":722,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9283740,"byte_end":9283746,"line_start":543,"line_end":543,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8442},{"krate":0,"index":8444}],"docs":"","sig":null,"attributes":[]},{"id":723,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9284309,"byte_end":9284312,"line_start":562,"line_end":562,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8446},{"krate":0,"index":8448},{"krate":0,"index":8451}],"docs":"","sig":null,"attributes":[]},{"id":724,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287727,"byte_end":9287735,"line_start":98,"line_end":98,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8474},{"krate":0,"index":8478},{"krate":0,"index":8481}],"docs":"","sig":null,"attributes":[]},{"id":725,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9289511,"byte_end":9289519,"line_start":163,"line_end":163,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8487}],"docs":"","sig":null,"attributes":[]},{"id":726,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9289727,"byte_end":9289735,"line_start":171,"line_end":171,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8491}],"docs":"","sig":null,"attributes":[]},{"id":727,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9290056,"byte_end":9290071,"line_start":186,"line_end":186,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8495},{"krate":0,"index":8496}],"docs":"","sig":null,"attributes":[]},{"id":728,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9290372,"byte_end":9290377,"line_start":196,"line_end":196,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8505}],"docs":"","sig":null,"attributes":[]},{"id":729,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9290995,"byte_end":9290996,"line_start":220,"line_end":220,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":730,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9291181,"byte_end":9291192,"line_start":228,"line_end":228,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8512}],"docs":"","sig":null,"attributes":[]},{"id":731,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9291336,"byte_end":9291347,"line_start":234,"line_end":234,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":8514}],"docs":"","sig":null,"attributes":[]},{"id":732,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9291494,"byte_end":9291505,"line_start":240,"line_end":240,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":733,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/clock.rs","byte_start":9296090,"byte_end":9296095,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":9017},{"krate":0,"index":9018},{"krate":0,"index":9019},{"krate":0,"index":9020}],"docs":"","sig":null,"attributes":[]},{"id":734,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9306617,"byte_end":9306627,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":8565},{"krate":0,"index":8566},{"krate":0,"index":8567},{"krate":0,"index":8568},{"krate":0,"index":8571},{"krate":0,"index":8572},{"krate":0,"index":8576},{"krate":0,"index":8578},{"krate":0,"index":8579},{"krate":0,"index":8581},{"krate":0,"index":8582},{"krate":0,"index":8583},{"krate":0,"index":8584},{"krate":0,"index":8585},{"krate":0,"index":8586},{"krate":0,"index":8587},{"krate":0,"index":8589}],"docs":"","sig":null,"attributes":[]},{"id":735,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9324270,"byte_end":9324280,"line_start":751,"line_end":751,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":736,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9324308,"byte_end":9324318,"line_start":753,"line_end":753,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8594}],"docs":"","sig":null,"attributes":[]},{"id":737,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9324455,"byte_end":9324465,"line_start":760,"line_end":760,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8597},{"krate":0,"index":8598}],"docs":"","sig":null,"attributes":[]},{"id":738,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9324847,"byte_end":9324852,"line_start":770,"line_end":770,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8601},{"krate":0,"index":8602},{"krate":0,"index":8603},{"krate":0,"index":8604},{"krate":0,"index":8605},{"krate":0,"index":8606},{"krate":0,"index":8607},{"krate":0,"index":8608}],"docs":"","sig":null,"attributes":[]},{"id":739,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9326979,"byte_end":9326984,"line_start":852,"line_end":852,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8611}],"docs":"","sig":null,"attributes":[]},{"id":740,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9327114,"byte_end":9327117,"line_start":861,"line_end":861,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":8613}],"docs":"","sig":null,"attributes":[]},{"id":741,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9327204,"byte_end":9327211,"line_start":867,"line_end":867,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":8616},{"krate":0,"index":8617},{"krate":0,"index":8618},{"krate":0,"index":8619}],"docs":"","sig":null,"attributes":[]},{"id":742,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9329749,"byte_end":9329754,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8634},{"krate":0,"index":8635},{"krate":0,"index":8636},{"krate":0,"index":8637}],"docs":"","sig":null,"attributes":[]},{"id":743,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9330732,"byte_end":9330737,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":8639},{"krate":0,"index":8640}],"docs":"","sig":null,"attributes":[]},{"id":744,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":9344061,"byte_end":9344072,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8655},{"krate":0,"index":8656},{"krate":0,"index":8657},{"krate":0,"index":8658}],"docs":"","sig":null,"attributes":[]},{"id":745,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":9346050,"byte_end":9346068,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8660},{"krate":0,"index":8661}],"docs":"","sig":null,"attributes":[]},{"id":746,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":9346640,"byte_end":9346658,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8663}],"docs":"","sig":null,"attributes":[]},{"id":747,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9350631,"byte_end":9350636,"line_start":107,"line_end":107,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8689},{"krate":0,"index":8690},{"krate":0,"index":8691},{"krate":0,"index":8692},{"krate":0,"index":8693},{"krate":0,"index":8694},{"krate":0,"index":8695},{"krate":0,"index":8696},{"krate":0,"index":8697},{"krate":0,"index":8698},{"krate":0,"index":8699},{"krate":0,"index":8700},{"krate":0,"index":8701},{"krate":0,"index":8702}],"docs":"","sig":null,"attributes":[]},{"id":748,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9356864,"byte_end":9356869,"line_start":329,"line_end":329,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":8705}],"docs":"","sig":null,"attributes":[]},{"id":749,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9357077,"byte_end":9357082,"line_start":340,"line_end":340,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":750,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9357107,"byte_end":9357112,"line_start":341,"line_end":341,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":751,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/handle.rs","byte_start":9357489,"byte_end":9357495,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8717},{"krate":0,"index":8718},{"krate":0,"index":8719}],"docs":"","sig":null,"attributes":[]},{"id":752,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/handle.rs","byte_start":9358140,"byte_end":9358146,"line_start":34,"line_end":34,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8721}],"docs":"","sig":null,"attributes":[]},{"id":753,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/registration.rs","byte_start":9358591,"byte_end":9358603,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8736},{"krate":0,"index":8737},{"krate":0,"index":8738},{"krate":0,"index":8739},{"krate":0,"index":8740}],"docs":"","sig":null,"attributes":[]},{"id":754,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/registration.rs","byte_start":9359513,"byte_end":9359525,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8743}],"docs":"","sig":null,"attributes":[]},{"id":755,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/stack.rs","byte_start":9359809,"byte_end":9359814,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8751}],"docs":"","sig":null,"attributes":[]},{"id":756,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/stack.rs","byte_start":9359905,"byte_end":9359910,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8753},{"krate":0,"index":8754},{"krate":0,"index":8755},{"krate":0,"index":8756},{"krate":0,"index":8757},{"krate":0,"index":8758},{"krate":0,"index":8759},{"krate":0,"index":8760}],"docs":"","sig":null,"attributes":[]},{"id":757,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9335627,"byte_end":9335633,"line_start":122,"line_end":122,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8794},{"krate":0,"index":8795},{"krate":0,"index":8796},{"krate":0,"index":8797},{"krate":0,"index":8798},{"krate":0,"index":8799},{"krate":0,"index":8800}],"docs":"","sig":null,"attributes":[]},{"id":758,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9339282,"byte_end":9339288,"line_start":234,"line_end":234,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8804},{"krate":0,"index":8805},{"krate":0,"index":8806},{"krate":0,"index":8807},{"krate":0,"index":8808}],"docs":"","sig":null,"attributes":[]},{"id":759,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9341277,"byte_end":9341283,"line_start":308,"line_end":308,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8811}],"docs":"","sig":null,"attributes":[]},{"id":760,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9341760,"byte_end":9341765,"line_start":327,"line_end":327,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8814},{"krate":0,"index":8815},{"krate":0,"index":8816},{"krate":0,"index":8817},{"krate":0,"index":8818},{"krate":0,"index":8819}],"docs":"","sig":null,"attributes":[]},{"id":761,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9343382,"byte_end":9343387,"line_start":389,"line_end":389,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8821}],"docs":"","sig":null,"attributes":[]},{"id":762,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9364182,"byte_end":9364187,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8827},{"krate":0,"index":8828},{"krate":0,"index":8829},{"krate":0,"index":8830}],"docs":"","sig":null,"attributes":[]},{"id":763,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9364902,"byte_end":9364907,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":764,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9364934,"byte_end":9364939,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8833}],"docs":"","sig":null,"attributes":[]},{"id":765,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9365645,"byte_end":9365652,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":8841},{"krate":0,"index":8842},{"krate":0,"index":8843},{"krate":0,"index":8844},{"krate":0,"index":8845},{"krate":0,"index":8846},{"krate":0,"index":8847},{"krate":0,"index":8848},{"krate":0,"index":8849}],"docs":"","sig":null,"attributes":[]},{"id":766,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9369426,"byte_end":9369433,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":8851}],"docs":"","sig":null,"attributes":[]},{"id":767,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9369562,"byte_end":9369569,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":8853}],"docs":"","sig":null,"attributes":[]},{"id":768,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9369684,"byte_end":9369691,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8855},{"krate":0,"index":8856}],"docs":"","sig":null,"attributes":[]},{"id":769,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9369856,"byte_end":9369863,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":8858}],"docs":"","sig":null,"attributes":[]},{"id":770,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9369968,"byte_end":9369975,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8860},{"krate":0,"index":8861}],"docs":"","sig":null,"attributes":[]},{"id":771,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9370116,"byte_end":9370123,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8863},{"krate":0,"index":8864}],"docs":"","sig":null,"attributes":[]},{"id":772,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9370284,"byte_end":9370291,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":8866}],"docs":"","sig":null,"attributes":[]},{"id":773,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9370398,"byte_end":9370405,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8868}],"docs":"","sig":null,"attributes":[]},{"id":774,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9374141,"byte_end":9374149,"line_start":119,"line_end":119,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8888},{"krate":0,"index":8889}],"docs":"","sig":null,"attributes":[]},{"id":775,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9375444,"byte_end":9375452,"line_start":164,"line_end":164,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8894},{"krate":0,"index":8895}],"docs":"","sig":null,"attributes":[]},{"id":776,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9378784,"byte_end":9378791,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":8918}],"docs":"","sig":null,"attributes":[]},{"id":777,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9378920,"byte_end":9378927,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":8921},{"krate":0,"index":8922},{"krate":0,"index":8923},{"krate":0,"index":8924}],"docs":"","sig":null,"attributes":[]},{"id":778,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9379465,"byte_end":9379472,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8927},{"krate":0,"index":8928}],"docs":"","sig":null,"attributes":[]},{"id":779,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9380050,"byte_end":9380057,"line_start":172,"line_end":172,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8930}],"docs":"","sig":null,"attributes":[]},{"id":780,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9380201,"byte_end":9380208,"line_start":178,"line_end":178,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":781,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9380245,"byte_end":9380250,"line_start":180,"line_end":180,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8933}],"docs":"","sig":null,"attributes":[]},{"id":782,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9398390,"byte_end":9398398,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":9191},{"krate":0,"index":9192},{"krate":0,"index":9193}],"docs":"","sig":null,"attributes":[]},{"id":783,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9399213,"byte_end":9399221,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9196},{"krate":0,"index":9197}],"docs":"","sig":null,"attributes":[]},{"id":784,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/level.rs","byte_start":9390154,"byte_end":9390159,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":8952},{"krate":0,"index":8954},{"krate":0,"index":8955},{"krate":0,"index":8956},{"krate":0,"index":8957},{"krate":0,"index":8958}],"docs":"","sig":null,"attributes":[]},{"id":785,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/level.rs","byte_start":9394911,"byte_end":9394916,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8961}],"docs":"","sig":null,"attributes":[]},{"id":786,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/mod.rs","byte_start":9381975,"byte_end":9381980,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8986},{"krate":0,"index":8987},{"krate":0,"index":8988},{"krate":0,"index":8989},{"krate":0,"index":8990},{"krate":0,"index":8992},{"krate":0,"index":8994},{"krate":0,"index":8995},{"krate":0,"index":8996},{"krate":0,"index":8997},{"krate":0,"index":8998},{"krate":0,"index":8999}],"docs":"","sig":null,"attributes":[]},{"id":787,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/mod.rs","byte_start":9387688,"byte_end":9387692,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":9002}],"docs":"","sig":null,"attributes":[]},{"id":788,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/bit.rs","byte_start":9400054,"byte_end":9400058,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":9232},{"krate":0,"index":9233},{"krate":0,"index":9234},{"krate":0,"index":9235},{"krate":0,"index":9236},{"krate":0,"index":9237},{"krate":0,"index":9238}],"docs":"","sig":null,"attributes":[]},{"id":789,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/bit.rs","byte_start":9401532,"byte_end":9401536,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":9240}],"docs":"","sig":null,"attributes":[]},{"id":790,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/addr.rs","byte_start":9408755,"byte_end":9408762,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":9259},{"krate":0,"index":9260},{"krate":0,"index":9261},{"krate":0,"index":9262},{"krate":0,"index":9263},{"krate":0,"index":9264},{"krate":0,"index":9265},{"krate":0,"index":9266}],"docs":"","sig":null,"attributes":[]},{"id":791,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/generation.rs","byte_start":9411791,"byte_end":9411801,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":9278},{"krate":0,"index":9279},{"krate":0,"index":9280},{"krate":0,"index":9281},{"krate":0,"index":9282}],"docs":"","sig":null,"attributes":[]},{"id":792,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9412940,"byte_end":9412945,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":9303},{"krate":0,"index":9304},{"krate":0,"index":9306}],"docs":"","sig":null,"attributes":[]},{"id":793,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9413287,"byte_end":9413293,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":9310},{"krate":0,"index":9311},{"krate":0,"index":9313},{"krate":0,"index":9316},{"krate":0,"index":9319},{"krate":0,"index":9322}],"docs":"","sig":null,"attributes":[]},{"id":794,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9417245,"byte_end":9417250,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":9327}],"docs":"","sig":null,"attributes":[]},{"id":795,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9417556,"byte_end":9417562,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":9331}],"docs":"","sig":null,"attributes":[]},{"id":796,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/shard.rs","byte_start":9419705,"byte_end":9419710,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":9345},{"krate":0,"index":9348},{"krate":0,"index":9349},{"krate":0,"index":9350},{"krate":0,"index":9351},{"krate":0,"index":9352}],"docs":"","sig":null,"attributes":[]},{"id":797,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/shard.rs","byte_start":9421389,"byte_end":9421394,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9355}],"docs":"","sig":null,"attributes":[]},{"id":798,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/slot.rs","byte_start":9421771,"byte_end":9421775,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":9368},{"krate":0,"index":9369},{"krate":0,"index":9370},{"krate":0,"index":9371},{"krate":0,"index":9372},{"krate":0,"index":9374}],"docs":"","sig":null,"attributes":[]},{"id":799,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/stack.rs","byte_start":9422746,"byte_end":9422759,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":9386},{"krate":0,"index":9387},{"krate":0,"index":9388}],"docs":"","sig":null,"attributes":[]},{"id":800,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/stack.rs","byte_start":9423587,"byte_end":9423600,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":9391}],"docs":"","sig":null,"attributes":[]},{"id":801,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9403134,"byte_end":9403138,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":802,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9403175,"byte_end":9403179,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":803,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9403202,"byte_end":9403206,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":9408},{"krate":0,"index":9409},{"krate":0,"index":9410},{"krate":0,"index":9411}],"docs":"","sig":null,"attributes":[]},{"id":804,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9404721,"byte_end":9404725,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9414}],"docs":"","sig":null,"attributes":[]},{"id":805,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180390,"byte_end":180400,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":806,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180459,"byte_end":180469,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":807,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181758,"byte_end":181766,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":808,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181803,"byte_end":181811,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":809,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181865,"byte_end":181875,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":810,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":184879,"byte_end":184889,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":811,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":185134,"byte_end":185144,"line_start":177,"line_end":177,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9463}],"docs":"","sig":null,"attributes":[]},{"id":812,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":185544,"byte_end":185554,"line_start":195,"line_end":195,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9471}],"docs":"","sig":null,"attributes":[]},{"id":813,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":185776,"byte_end":185780,"line_start":204,"line_end":204,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":9475},{"krate":0,"index":9476}],"docs":"","sig":null,"attributes":[]},{"id":814,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":186227,"byte_end":186235,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":815,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":186434,"byte_end":186442,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":816,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/rand.rs","byte_start":196514,"byte_end":196522,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":817,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/wake.rs","byte_start":198384,"byte_end":198392,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":818,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9424412,"byte_end":9424419,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":819,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9424456,"byte_end":9424463,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":820,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9424501,"byte_end":9424510,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":821,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9424696,"byte_end":9424703,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":9520},{"krate":0,"index":9521}],"docs":"","sig":null,"attributes":[]},{"id":822,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9425337,"byte_end":9425346,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9524},{"krate":0,"index":9525}],"docs":"","sig":null,"attributes":[]},{"id":823,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9425478,"byte_end":9425487,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":9528}],"docs":"","sig":null,"attributes":[]},{"id":824,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9425609,"byte_end":9425618,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9531}],"docs":"","sig":null,"attributes":[]},{"id":825,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202358,"byte_end":202366,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":826,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202616,"byte_end":202624,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":827,"kind":"Direct","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202729,"byte_end":202737,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":828,"kind":"Inherent","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":203046,"byte_end":203056,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":874},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14158,"byte_end":14164,"line_start":347,"line_end":347,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/mod.rs","byte_start":16275,"byte_end":16282,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":79}},{"kind":"Mod","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14189,"byte_end":14191,"line_start":350,"line_end":350,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":896}},{"kind":"Mod","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8203781,"byte_end":8203783,"line_start":51,"line_end":51,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":1091}},{"kind":"Mod","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/mod.rs","byte_start":8253700,"byte_end":8253704,"line_start":4,"line_end":4,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1092}},{"kind":"Mod","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14219,"byte_end":14225,"line_start":354,"line_end":354,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":83}},{"kind":"Mod","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14236,"byte_end":14238,"line_start":356,"line_end":356,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":177}},{"kind":"Mod","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14248,"byte_end":14251,"line_start":357,"line_end":357,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":308}},{"kind":"Mod","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72787,"byte_end":72790,"line_start":34,"line_end":34,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":3263}},{"kind":"Mod","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72894,"byte_end":72897,"line_start":40,"line_end":40,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":3566}},{"kind":"Mod","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72961,"byte_end":72965,"line_start":45,"line_end":45,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":3711}},{"kind":"Mod","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14283,"byte_end":14290,"line_start":362,"line_end":362,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":556}},{"kind":"Mod","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14320,"byte_end":14327,"line_start":365,"line_end":365,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":4103}},{"kind":"Mod","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14340,"byte_end":14347,"line_start":368,"line_end":368,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":562}},{"kind":"Mod","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14398,"byte_end":14404,"line_start":373,"line_end":373,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":5750}},{"kind":"Mod","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8825737,"byte_end":8825741,"line_start":59,"line_end":59,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":5811}},{"kind":"Mod","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14435,"byte_end":14441,"line_start":377,"line_end":377,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":5931}},{"kind":"Mod","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14470,"byte_end":14474,"line_start":381,"line_end":381,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":6620}},{"kind":"Mod","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8981763,"byte_end":8981772,"line_start":435,"line_end":435,"column_start":13,"column_end":22},"ref_id":{"krate":0,"index":6634}},{"kind":"Mod","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8981930,"byte_end":8981934,"line_start":442,"line_end":442,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":6821}},{"kind":"Mod","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9030320,"byte_end":9030325,"line_start":79,"line_end":79,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":7220}},{"kind":"Mod","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8982081,"byte_end":8982088,"line_start":450,"line_end":450,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":7384}},{"kind":"Mod","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":8982402,"byte_end":8982407,"line_start":463,"line_end":463,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":7864}},{"kind":"Mod","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14538,"byte_end":14542,"line_start":388,"line_end":388,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":8337}},{"kind":"Mod","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14596,"byte_end":14600,"line_start":393,"line_end":393,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":8541}},{"kind":"Mod","span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9294379,"byte_end":9294390,"line_start":99,"line_end":99,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":8544}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":29721,"byte_end":29730,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":57},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":29746,"byte_end":29755,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":57},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":30105,"byte_end":30110,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":68},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8210802,"byte_end":8210812,"line_start":26,"line_end":26,"column_start":6,"column_end":16},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8216583,"byte_end":8216587,"line_start":104,"line_end":104,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8229812,"byte_end":8229816,"line_start":539,"line_end":539,"column_start":20,"column_end":24},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":967},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8232300,"byte_end":8232304,"line_start":606,"line_end":606,"column_start":20,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":967},"to":{"krate":0,"index":246}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8234729,"byte_end":8234733,"line_start":676,"line_end":676,"column_start":21,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":967},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8237704,"byte_end":8237708,"line_start":764,"line_end":764,"column_start":26,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8237806,"byte_end":8237810,"line_start":770,"line_end":770,"column_start":21,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8238039,"byte_end":8238043,"line_start":779,"line_end":779,"column_start":37,"column_end":41},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":967},"to":{"krate":1,"index":8602}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8242968,"byte_end":8242979,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8253448,"byte_end":8253459,"line_start":393,"line_end":393,"column_start":37,"column_end":48},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1329},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8253577,"byte_end":8253588,"line_start":399,"line_end":399,"column_start":18,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1329},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8256862,"byte_end":8256873,"line_start":69,"line_end":69,"column_start":25,"column_end":36},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1329},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8257702,"byte_end":8257712,"line_start":24,"line_end":24,"column_start":24,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1301},"to":{"krate":0,"index":1116}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8260784,"byte_end":8260791,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8262026,"byte_end":8262033,"line_start":88,"line_end":88,"column_start":32,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1336},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8262860,"byte_end":8262868,"line_start":113,"line_end":113,"column_start":6,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8266650,"byte_end":8266658,"line_start":240,"line_end":240,"column_start":22,"column_end":30},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1350},"to":{"krate":1,"index":8581}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31866,"byte_end":31875,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1355},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32038,"byte_end":32047,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":33234,"byte_end":33243,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1355},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":33997,"byte_end":34003,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34217,"byte_end":34223,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34365,"byte_end":34371,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34902,"byte_end":34907,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1368},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34934,"byte_end":34939,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1368},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/try_join.rs","byte_start":36136,"byte_end":36144,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1375},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8272633,"byte_end":8272641,"line_start":38,"line_end":38,"column_start":13,"column_end":21},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8272914,"byte_end":8272922,"line_start":49,"line_end":49,"column_start":23,"column_end":31},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1474},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8274527,"byte_end":8274535,"line_start":100,"line_end":100,"column_start":24,"column_end":32},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1474},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8277260,"byte_end":8277263,"line_start":190,"line_end":190,"column_start":6,"column_end":9},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8279078,"byte_end":8279081,"line_start":271,"line_end":271,"column_start":10,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47374,"byte_end":47383,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":215},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49833,"byte_end":49836,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":34}},"from":{"krate":5,"index":84},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49996,"byte_end":49999,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":35}},"from":{"krate":2,"index":30390},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":50628,"byte_end":50634,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":36}},"from":{"krate":1,"index":6904},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":56598,"byte_end":56601,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"kind":{"Impl":{"id":37}},"from":{"krate":5,"index":84},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":56744,"byte_end":56747,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":2,"index":30390},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":57543,"byte_end":57549,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"kind":{"Impl":{"id":39}},"from":{"krate":1,"index":6904},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59975,"byte_end":59978,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"kind":{"Impl":{"id":40}},"from":{"krate":5,"index":84},"to":{"krate":0,"index":246}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":60121,"byte_end":60124,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"kind":{"Impl":{"id":41}},"from":{"krate":2,"index":30390},"to":{"krate":0,"index":246}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":60578,"byte_end":60584,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"kind":{"Impl":{"id":42}},"from":{"krate":1,"index":6904},"to":{"krate":0,"index":246}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":68489,"byte_end":68492,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"kind":{"Impl":{"id":43}},"from":{"krate":5,"index":84},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":68640,"byte_end":68643,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"kind":{"Impl":{"id":44}},"from":{"krate":2,"index":30390},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":69212,"byte_end":69215,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"kind":{"Impl":{"id":45}},"from":{"krate":5,"index":4366},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":69723,"byte_end":69729,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"kind":{"Impl":{"id":46}},"from":{"krate":1,"index":6904},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":70242,"byte_end":70248,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"kind":{"Impl":{"id":47}},"from":{"krate":1,"index":6904},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":70764,"byte_end":70770,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":1,"index":6904},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":71281,"byte_end":71287,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"kind":{"Impl":{"id":49}},"from":{"krate":1,"index":6904},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8291354,"byte_end":8291365,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1705},"to":{"krate":0,"index":9270}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8292124,"byte_end":8292135,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1705},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8292342,"byte_end":8292353,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8294975,"byte_end":8294986,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1705},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8280723,"byte_end":8280729,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8283590,"byte_end":8283596,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1573},"to":{"krate":0,"index":544}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8283964,"byte_end":8283970,"line_start":186,"line_end":186,"column_start":21,"column_end":27},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1573},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8284106,"byte_end":8284112,"line_start":194,"line_end":194,"column_start":6,"column_end":12},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8285255,"byte_end":8285261,"line_start":225,"line_end":225,"column_start":17,"column_end":23},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1711},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8285339,"byte_end":8285345,"line_start":231,"line_end":231,"column_start":21,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1711},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8285480,"byte_end":8285485,"line_start":239,"line_end":239,"column_start":6,"column_end":11},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8287029,"byte_end":8287038,"line_start":293,"line_end":293,"column_start":6,"column_end":15},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8301544,"byte_end":8301555,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8309346,"byte_end":8309357,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1731},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8309850,"byte_end":8309861,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1731},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8310942,"byte_end":8310953,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1731},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8311126,"byte_end":8311137,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1731},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8313285,"byte_end":8313297,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8324167,"byte_end":8324179,"line_start":329,"line_end":329,"column_start":22,"column_end":34},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1735},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8324204,"byte_end":8324216,"line_start":330,"line_end":330,"column_start":22,"column_end":34},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1735},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8324235,"byte_end":8324247,"line_start":332,"line_end":332,"column_start":15,"column_end":27},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1735},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stderr.rs","byte_start":8326806,"byte_end":8326812,"line_start":76,"line_end":76,"column_start":37,"column_end":43},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1788},"to":{"krate":1,"index":8602}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stderr.rs","byte_start":8327120,"byte_end":8327126,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1788},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdin.rs","byte_start":8329534,"byte_end":8329539,"line_start":52,"line_end":52,"column_start":37,"column_end":42},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1793},"to":{"krate":1,"index":8602}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdin.rs","byte_start":8329843,"byte_end":8329848,"line_start":65,"line_end":65,"column_start":20,"column_end":25},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1793},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdout.rs","byte_start":8332631,"byte_end":8332637,"line_start":76,"line_end":76,"column_start":37,"column_end":43},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1798},"to":{"krate":1,"index":8602}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdout.rs","byte_start":8332945,"byte_end":8332951,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1798},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8335071,"byte_end":8335079,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8335996,"byte_end":8336005,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8336255,"byte_end":8336263,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1916},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8336818,"byte_end":8336827,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1919},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8337776,"byte_end":8337781,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8338174,"byte_end":8338179,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1825},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8338432,"byte_end":8338437,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1825},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8338560,"byte_end":8338568,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1916},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8338605,"byte_end":8338614,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1919},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8338651,"byte_end":8338659,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1916},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8338696,"byte_end":8338705,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1919},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8338748,"byte_end":8338756,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1916},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8338924,"byte_end":8338933,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1919},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/seek.rs","byte_start":8339623,"byte_end":8339627,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1924},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8342544,"byte_end":8342556,"line_start":11,"line_end":11,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":186},"to":{"krate":0,"index":2614}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8351577,"byte_end":8351578,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1948},"to":{"krate":0,"index":2614}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8353605,"byte_end":8353614,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":215},"to":{"krate":0,"index":2622}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8390863,"byte_end":8390864,"line_start":1112,"line_end":1112,"column_start":46,"column_end":47},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1995},"to":{"krate":0,"index":2622}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8391743,"byte_end":8391752,"line_start":35,"line_end":35,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":246},"to":{"krate":0,"index":2003}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8392622,"byte_end":8392623,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2006},"to":{"krate":0,"index":2003}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8394680,"byte_end":8394690,"line_start":68,"line_end":68,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":271},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8427900,"byte_end":8427901,"line_start":1004,"line_end":1004,"column_start":48,"column_end":49},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2047},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8429317,"byte_end":8429326,"line_start":38,"line_end":38,"column_start":20,"column_end":29},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":12234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8431505,"byte_end":8431514,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":12234},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8432490,"byte_end":8432499,"line_start":135,"line_end":135,"column_start":37,"column_end":46},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":12234},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8433330,"byte_end":8433339,"line_start":157,"line_end":157,"column_start":48,"column_end":57},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":12234},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8434055,"byte_end":8434064,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":12234},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8435571,"byte_end":8435580,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":12207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8437417,"byte_end":8437426,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":12207},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8437568,"byte_end":8437577,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":12207},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8438289,"byte_end":8438298,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":12207},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8438828,"byte_end":8438837,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":12207},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8439316,"byte_end":8439325,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":12207},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8441279,"byte_end":8441288,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":12157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8443566,"byte_end":8443575,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":12157},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8444465,"byte_end":8444474,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":12157},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8444956,"byte_end":8444965,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":12157},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8445252,"byte_end":8445261,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":12157},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8446430,"byte_end":8446435,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":12108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8447575,"byte_end":8447580,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":12108},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8447859,"byte_end":8447864,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":12108},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8448687,"byte_end":8448692,"line_start":113,"line_end":113,"column_start":29,"column_end":34},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":12108},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/copy.rs","byte_start":8451735,"byte_end":8451739,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2724},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8454849,"byte_end":8454854,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2740},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8455183,"byte_end":8455188,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2740},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8455421,"byte_end":8455426,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2740},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/flush.rs","byte_start":8456247,"byte_end":8456252,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2743},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8457432,"byte_end":8457437,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":12069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8458689,"byte_end":8458694,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":12069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8459441,"byte_end":8459446,"line_start":113,"line_end":113,"column_start":49,"column_end":54},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":12069},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read.rs","byte_start":8460844,"byte_end":8460848,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2751},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_buf.rs","byte_start":8461909,"byte_end":8461916,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2760},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_exact.rs","byte_start":8463281,"byte_end":8463290,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2771},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_line.rs","byte_start":8470825,"byte_end":8470833,"line_start":85,"line_end":85,"column_start":51,"column_end":59},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2925},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8472059,"byte_end":8472064,"line_start":35,"line_end":35,"column_start":15,"column_end":20},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2398},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8473740,"byte_end":8473749,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2936},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_string.rs","byte_start":8475813,"byte_end":8475825,"line_start":58,"line_end":58,"column_start":20,"column_end":32},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2947},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_until.rs","byte_start":8478477,"byte_end":8478486,"line_start":66,"line_end":66,"column_start":51,"column_end":60},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2958},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/repeat.rs","byte_start":8480320,"byte_end":8480326,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2970},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/shutdown.rs","byte_start":8481448,"byte_end":8481456,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2974},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8483289,"byte_end":8483293,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2982},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8483803,"byte_end":8483807,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2982},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8484772,"byte_end":8484777,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":11235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8485516,"byte_end":8485521,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":11235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8486300,"byte_end":8486305,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":11235},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8499844,"byte_end":8499856,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":11188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8500361,"byte_end":8500373,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":11188},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8501912,"byte_end":8501924,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":11188},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8487473,"byte_end":8487477,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":11146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8489105,"byte_end":8489109,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":11146},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8489766,"byte_end":8489770,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":11146},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write.rs","byte_start":8491327,"byte_end":8491332,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3023},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_all.rs","byte_start":8492125,"byte_end":8492133,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3032},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_buf.rs","byte_start":8493641,"byte_end":8493649,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3041},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73921,"byte_end":73938,"line_start":22,"line_end":22,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":368},"to":{"krate":0,"index":319}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74388,"byte_end":74398,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"kind":{"Impl":{"id":147}},"from":{"krate":1,"index":7058},"to":{"krate":0,"index":319}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74438,"byte_end":74448,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"kind":{"Impl":{"id":148}},"from":{"krate":1,"index":7058},"to":{"krate":0,"index":368}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74729,"byte_end":74741,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"kind":{"Impl":{"id":149}},"from":{"krate":1,"index":7086},"to":{"krate":0,"index":319}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74781,"byte_end":74793,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"kind":{"Impl":{"id":150}},"from":{"krate":1,"index":7086},"to":{"krate":0,"index":368}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":75053,"byte_end":75065,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"kind":{"Impl":{"id":151}},"from":{"krate":1,"index":7089},"to":{"krate":0,"index":319}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":75105,"byte_end":75117,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"kind":{"Impl":{"id":152}},"from":{"krate":1,"index":7089},"to":{"krate":0,"index":368}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":78793,"byte_end":78799,"line_start":206,"line_end":206,"column_start":28,"column_end":34},"kind":{"Impl":{"id":155}},"from":{"krate":5,"index":5079},"to":{"krate":0,"index":319}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":78843,"byte_end":78849,"line_start":208,"line_end":208,"column_start":40,"column_end":46},"kind":{"Impl":{"id":156}},"from":{"krate":5,"index":5079},"to":{"krate":0,"index":368}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":80215,"byte_end":80225,"line_start":259,"line_end":259,"column_start":25,"column_end":35},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3235},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":80873,"byte_end":80882,"line_start":277,"line_end":277,"column_start":27,"column_end":36},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3244},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8506846,"byte_end":8506857,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8517561,"byte_end":8517572,"line_start":398,"line_end":398,"column_start":32,"column_end":43},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3527},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8517887,"byte_end":8517898,"line_start":410,"line_end":410,"column_start":41,"column_end":52},"kind":{"Impl":{"id":161}},"from":{"krate":22,"index":1033},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8518338,"byte_end":8518349,"line_start":424,"line_end":424,"column_start":36,"column_end":47},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3527},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8518675,"byte_end":8518686,"line_start":436,"line_end":436,"column_start":21,"column_end":32},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3527},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8518902,"byte_end":8518913,"line_start":447,"line_end":447,"column_start":22,"column_end":33},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3527},"to":{"krate":1,"index":8602}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8519745,"byte_end":8519753,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8520391,"byte_end":8520399,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3529},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8522549,"byte_end":8522557,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8525012,"byte_end":8525020,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3535},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8525340,"byte_end":8525349,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3542},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8526162,"byte_end":8526170,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3535},"to":{"krate":2,"index":1880}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8526264,"byte_end":8526273,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3542},"to":{"krate":2,"index":1880}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8529336,"byte_end":8529348,"line_start":91,"line_end":91,"column_start":23,"column_end":35},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3558},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8529551,"byte_end":8529563,"line_start":100,"line_end":100,"column_start":16,"column_end":28},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3558},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8529573,"byte_end":8529586,"line_start":102,"line_end":102,"column_start":6,"column_end":19},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8532420,"byte_end":8532433,"line_start":189,"line_end":189,"column_start":20,"column_end":33},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3549},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8532738,"byte_end":8532752,"line_start":203,"line_end":203,"column_start":6,"column_end":20},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8533304,"byte_end":8533318,"line_start":220,"line_end":220,"column_start":15,"column_end":29},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3553},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8533478,"byte_end":8533492,"line_start":228,"line_end":228,"column_start":21,"column_end":35},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3553},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8534313,"byte_end":8534326,"line_start":257,"line_end":257,"column_start":27,"column_end":40},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3549},"to":{"krate":2,"index":1880}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8534422,"byte_end":8534436,"line_start":263,"line_end":263,"column_start":27,"column_end":41},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3553},"to":{"krate":2,"index":1880}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8536571,"byte_end":8536580,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8561386,"byte_end":8561395,"line_start":834,"line_end":834,"column_start":39,"column_end":48},"kind":{"Impl":{"id":182}},"from":{"krate":22,"index":977},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8561831,"byte_end":8561840,"line_start":848,"line_end":848,"column_start":34,"column_end":43},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3564},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8562193,"byte_end":8562202,"line_start":862,"line_end":862,"column_start":20,"column_end":29},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3564},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8562516,"byte_end":8562525,"line_start":876,"line_end":876,"column_start":21,"column_end":30},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3564},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8563269,"byte_end":8563278,"line_start":905,"line_end":905,"column_start":21,"column_end":30},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3564},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8563492,"byte_end":8563501,"line_start":916,"line_end":916,"column_start":22,"column_end":31},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3564},"to":{"krate":1,"index":8602}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8564507,"byte_end":8564516,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8578072,"byte_end":8578081,"line_start":369,"line_end":369,"column_start":39,"column_end":48},"kind":{"Impl":{"id":189}},"from":{"krate":22,"index":1091},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8578517,"byte_end":8578526,"line_start":383,"line_end":383,"column_start":34,"column_end":43},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3693},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8578846,"byte_end":8578855,"line_start":395,"line_end":395,"column_start":21,"column_end":30},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3693},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8579074,"byte_end":8579083,"line_start":406,"line_end":406,"column_start":22,"column_end":31},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3693},"to":{"krate":1,"index":8602}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8581164,"byte_end":8581176,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3705},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8581379,"byte_end":8581391,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3705},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8581918,"byte_end":8581926,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8583558,"byte_end":8583566,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8584886,"byte_end":8584894,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3695},"to":{"krate":2,"index":1880}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8584985,"byte_end":8584993,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":3700},"to":{"krate":2,"index":1880}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8585809,"byte_end":8585821,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8592444,"byte_end":8592456,"line_start":206,"line_end":206,"column_start":41,"column_end":53},"kind":{"Impl":{"id":200}},"from":{"krate":29,"index":182},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8592898,"byte_end":8592910,"line_start":220,"line_end":220,"column_start":37,"column_end":49},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3954},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8593239,"byte_end":8593251,"line_start":232,"line_end":232,"column_start":21,"column_end":33},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":3954},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8593376,"byte_end":8593388,"line_start":238,"line_end":238,"column_start":18,"column_end":30},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3954},"to":{"krate":1,"index":8602}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8593746,"byte_end":8593754,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":3956},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8594486,"byte_end":8594494,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3956},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8596621,"byte_end":8596633,"line_start":54,"line_end":54,"column_start":6,"column_end":18},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3962},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8601137,"byte_end":8601149,"line_start":180,"line_end":180,"column_start":32,"column_end":44},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3962},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8601465,"byte_end":8601477,"line_start":192,"line_end":192,"column_start":41,"column_end":53},"kind":{"Impl":{"id":208}},"from":{"krate":29,"index":186},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8601919,"byte_end":8601931,"line_start":206,"line_end":206,"column_start":37,"column_end":49},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3962},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8602251,"byte_end":8602263,"line_start":218,"line_end":218,"column_start":21,"column_end":33},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":3962},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8602388,"byte_end":8602400,"line_start":224,"line_end":224,"column_start":18,"column_end":30},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3962},"to":{"krate":1,"index":8602}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8603392,"byte_end":8603400,"line_start":32,"line_end":32,"column_start":20,"column_end":28},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3964},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8603720,"byte_end":8603729,"line_start":46,"line_end":46,"column_start":21,"column_end":30},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3971},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8604213,"byte_end":8604221,"line_start":64,"line_end":64,"column_start":28,"column_end":36},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3964},"to":{"krate":2,"index":1880}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8604317,"byte_end":8604326,"line_start":70,"line_end":70,"column_start":28,"column_end":37},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3971},"to":{"krate":2,"index":1880}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8605264,"byte_end":8605274,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3978},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8608607,"byte_end":8608617,"line_start":119,"line_end":119,"column_start":39,"column_end":49},"kind":{"Impl":{"id":217}},"from":{"krate":29,"index":190},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8609055,"byte_end":8609065,"line_start":133,"line_end":133,"column_start":35,"column_end":45},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3978},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8609378,"byte_end":8609388,"line_start":145,"line_end":145,"column_start":20,"column_end":30},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3978},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8609702,"byte_end":8609712,"line_start":159,"line_end":159,"column_start":21,"column_end":31},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3978},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8610199,"byte_end":8610209,"line_start":178,"line_end":178,"column_start":6,"column_end":16},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3978},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8611726,"byte_end":8611736,"line_start":223,"line_end":223,"column_start":21,"column_end":31},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3978},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8611861,"byte_end":8611871,"line_start":229,"line_end":229,"column_start":18,"column_end":28},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3978},"to":{"krate":1,"index":8602}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84289,"byte_end":84298,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84472,"byte_end":84481,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84630,"byte_end":84639,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":84983,"byte_end":84992,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85017,"byte_end":85026,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85036,"byte_end":85045,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85531,"byte_end":85540,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85825,"byte_end":85834,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86175,"byte_end":86184,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86209,"byte_end":86218,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86228,"byte_end":86237,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86416,"byte_end":86425,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86710,"byte_end":86719,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88834,"byte_end":88842,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88867,"byte_end":88875,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88885,"byte_end":88893,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":89068,"byte_end":89076,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":89360,"byte_end":89368,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89708,"byte_end":89719,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89744,"byte_end":89755,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89765,"byte_end":89776,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90459,"byte_end":90470,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90760,"byte_end":90771,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2155}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90935,"byte_end":90946,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/unsafe_cell.rs","byte_start":91134,"byte_end":91144,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":8616228,"byte_end":8616234,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":4011},"to":{"krate":0,"index":544}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":8617040,"byte_end":8617046,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":4011},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":8617260,"byte_end":8617266,"line_start":54,"line_end":54,"column_start":27,"column_end":33},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":4011},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96248,"byte_end":96258,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":4037},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96523,"byte_end":96533,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":4037},"to":{"krate":0,"index":544}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96992,"byte_end":96997,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":4047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":101722,"byte_end":101732,"line_start":193,"line_end":193,"column_start":18,"column_end":28},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":4037},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":101841,"byte_end":101853,"line_start":201,"line_end":201,"column_start":17,"column_end":29},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":4041},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":102240,"byte_end":102256,"line_start":220,"line_end":220,"column_start":10,"column_end":26},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":4091},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103103,"byte_end":103119,"line_start":245,"line_end":245,"column_start":19,"column_end":35},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":4091},"to":{"krate":0,"index":544}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103660,"byte_end":103672,"line_start":265,"line_end":265,"column_start":10,"column_end":22},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":4041},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103884,"byte_end":103889,"line_start":274,"line_end":274,"column_start":10,"column_end":15},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":4047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":94870,"byte_end":94874,"line_start":94,"line_end":94,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1983},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":94877,"byte_end":94881,"line_start":94,"line_end":94,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":1971},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":95350,"byte_end":95353,"line_start":108,"line_end":108,"column_start":17,"column_end":20},"kind":{"Impl":{"id":261}},"from":{"krate":5,"index":84},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":95442,"byte_end":95445,"line_start":114,"line_end":114,"column_start":17,"column_end":20},"kind":{"Impl":{"id":262}},"from":{"krate":5,"index":4030},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/orphan.rs","byte_start":8658157,"byte_end":8658172,"line_start":48,"line_end":48,"column_start":9,"column_end":24},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":4379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/orphan.rs","byte_start":8658416,"byte_end":8658431,"line_start":61,"line_end":61,"column_start":34,"column_end":49},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":4379},"to":{"krate":0,"index":4116}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":8662914,"byte_end":8662919,"line_start":27,"line_end":27,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2012},"to":{"krate":0,"index":4149}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":8663012,"byte_end":8663018,"line_start":31,"line_end":31,"column_start":17,"column_end":23},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5923},"to":{"krate":0,"index":4149}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":8663162,"byte_end":8663168,"line_start":37,"line_end":37,"column_start":25,"column_end":31},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":4385},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":8663335,"byte_end":8663341,"line_start":49,"line_end":49,"column_start":15,"column_end":21},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":4385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":8663808,"byte_end":8663814,"line_start":71,"line_end":71,"column_start":26,"column_end":32},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":4385},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":8666109,"byte_end":8666115,"line_start":121,"line_end":121,"column_start":24,"column_end":30},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":4385},"to":{"krate":0,"index":4255}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":8666291,"byte_end":8666297,"line_start":131,"line_end":131,"column_start":24,"column_end":30},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":4385},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8652773,"byte_end":8652778,"line_start":47,"line_end":47,"column_start":29,"column_end":34},"kind":{"Impl":{"id":271}},"from":{"krate":1,"index":4258},"to":{"krate":0,"index":4109}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8652956,"byte_end":8652961,"line_start":57,"line_end":57,"column_start":29,"column_end":34},"kind":{"Impl":{"id":272}},"from":{"krate":1,"index":4258},"to":{"krate":0,"index":4255}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8653206,"byte_end":8653223,"line_start":69,"line_end":69,"column_start":21,"column_end":38},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":4214},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8653372,"byte_end":8653389,"line_start":75,"line_end":75,"column_start":43,"column_end":60},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":4214},"to":{"krate":0,"index":4116}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8653736,"byte_end":8653741,"line_start":90,"line_end":90,"column_start":21,"column_end":26},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":4221},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8654410,"byte_end":8654415,"line_start":116,"line_end":116,"column_start":6,"column_end":11},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":4221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8654502,"byte_end":8654507,"line_start":122,"line_end":122,"column_start":15,"column_end":20},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":4221},"to":{"krate":0,"index":4255}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8654604,"byte_end":8654609,"line_start":128,"line_end":128,"column_start":17,"column_end":22},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":4221},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8654872,"byte_end":8654874,"line_start":141,"line_end":141,"column_start":22,"column_end":24},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":4408},"to":{"krate":1,"index":2993}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8655029,"byte_end":8655031,"line_start":150,"line_end":150,"column_start":23,"column_end":25},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":4408},"to":{"krate":1,"index":3052}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8655261,"byte_end":8655263,"line_start":163,"line_end":163,"column_start":21,"column_end":23},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":4408},"to":{"krate":1,"index":8602}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8655386,"byte_end":8655388,"line_start":172,"line_end":172,"column_start":21,"column_end":23},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":4408},"to":{"krate":22,"index":16}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8622804,"byte_end":8622811,"line_start":161,"line_end":161,"column_start":6,"column_end":13},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":4414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8639061,"byte_end":8639068,"line_start":667,"line_end":667,"column_start":27,"column_end":34},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":4414},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8639398,"byte_end":8639412,"line_start":683,"line_end":683,"column_start":24,"column_end":38},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":4419},"to":{"krate":0,"index":4255}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8639618,"byte_end":8639632,"line_start":695,"line_end":695,"column_start":24,"column_end":38},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":4419},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8639769,"byte_end":8639783,"line_start":703,"line_end":703,"column_start":26,"column_end":40},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":4419},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8641632,"byte_end":8641637,"line_start":760,"line_end":760,"column_start":6,"column_end":11},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":4426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8644150,"byte_end":8644155,"line_start":832,"line_end":832,"column_start":17,"column_end":22},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":4426},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8645120,"byte_end":8645130,"line_start":867,"line_end":867,"column_start":21,"column_end":31},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":4433},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8645655,"byte_end":8645666,"line_start":885,"line_end":885,"column_start":20,"column_end":31},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":4437},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8646130,"byte_end":8646141,"line_start":900,"line_end":900,"column_start":20,"column_end":31},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":4441},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8646732,"byte_end":8646742,"line_start":921,"line_end":921,"column_start":22,"column_end":32},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":4433},"to":{"krate":1,"index":8602}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8646867,"byte_end":8646878,"line_start":927,"line_end":927,"column_start":22,"column_end":33},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":4437},"to":{"krate":1,"index":8602}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8647003,"byte_end":8647014,"line_start":933,"line_end":933,"column_start":22,"column_end":33},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4441},"to":{"krate":1,"index":8602}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/context.rs","byte_start":126539,"byte_end":126548,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":571},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8682226,"byte_end":8682240,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8685779,"byte_end":8685784,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":4513},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8686471,"byte_end":8686485,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4478},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8687372,"byte_end":8687386,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4478},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8687552,"byte_end":8687559,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8688017,"byte_end":8688024,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":4984},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8688192,"byte_end":8688195,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"kind":{"Impl":{"id":303}},"from":{"krate":5,"index":4030},"to":{"krate":0,"index":4948}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8689293,"byte_end":8689299,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4487},"to":{"krate":0,"index":825}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8696982,"byte_end":8696988,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4578},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8697013,"byte_end":8697019,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":4578},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8697378,"byte_end":8697382,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8698160,"byte_end":8698164,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8703915,"byte_end":8703921,"line_start":273,"line_end":273,"column_start":10,"column_end":16},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8704546,"byte_end":8704555,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8707634,"byte_end":8707643,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":4996},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8707886,"byte_end":8707895,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4996},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8708172,"byte_end":8708181,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4996},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8708215,"byte_end":8708220,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"kind":{"Impl":{"id":314}},"from":{"krate":1,"index":2591},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":8708898,"byte_end":8708905,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":8709382,"byte_end":8709389,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":8711560,"byte_end":8711565,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4690},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8723869,"byte_end":8723879,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":4998},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8723916,"byte_end":8723926,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4998},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8723942,"byte_end":8723952,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":4998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8724128,"byte_end":8724138,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":4998},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8724165,"byte_end":8724175,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":4998},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8725401,"byte_end":8725411,"line_start":137,"line_end":137,"column_start":18,"column_end":28},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":4998},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8725677,"byte_end":8725687,"line_start":149,"line_end":149,"column_start":24,"column_end":34},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":4998},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":8726934,"byte_end":8726941,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":4763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":8728472,"byte_end":8728479,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":4763},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":8728569,"byte_end":8728576,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":4763},"to":{"krate":2,"index":1981}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8731258,"byte_end":8731263,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":4812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8740119,"byte_end":8740127,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":5002},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8742004,"byte_end":8742009,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":4812},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8742168,"byte_end":8742176,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":5002},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/waker.rs","byte_start":8743994,"byte_end":8744002,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":4896},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/stack.rs","byte_start":8745750,"byte_end":8745763,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":5021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/stack.rs","byte_start":8746921,"byte_end":8746925,"line_start":55,"line_end":55,"column_start":39,"column_end":43},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":5032},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/stack.rs","byte_start":8747325,"byte_end":8747329,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":5032},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8690312,"byte_end":8690316,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4930},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8690347,"byte_end":8690351,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4930},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8690488,"byte_end":8690496,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4938},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8690537,"byte_end":8690545,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":4938},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8690670,"byte_end":8690674,"line_start":56,"line_end":56,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1983},"to":{"krate":0,"index":4948}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8690677,"byte_end":8690682,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":1976},"to":{"krate":0,"index":4948}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8692469,"byte_end":8692473,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":4930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8692770,"byte_end":8692778,"line_start":134,"line_end":134,"column_start":22,"column_end":30},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":4938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8693029,"byte_end":8693033,"line_start":144,"line_end":144,"column_start":22,"column_end":26},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":4930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8693226,"byte_end":8693234,"line_start":152,"line_end":152,"column_start":22,"column_end":30},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":4938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8693365,"byte_end":8693369,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":4930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8693538,"byte_end":8693546,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":4938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8693832,"byte_end":8693836,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":4930},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8694076,"byte_end":8694080,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":4930},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8694232,"byte_end":8694240,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":4938},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8694456,"byte_end":8694460,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":4930},"to":{"krate":0,"index":778}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":8749637,"byte_end":8749649,"line_start":85,"line_end":85,"column_start":6,"column_end":18},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":5079},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":8751285,"byte_end":8751297,"line_start":136,"line_end":136,"column_start":15,"column_end":27},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":5079},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":8751383,"byte_end":8751395,"line_start":142,"line_end":142,"column_start":21,"column_end":33},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":5079},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":8751556,"byte_end":8751563,"line_start":150,"line_end":150,"column_start":6,"column_end":13},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":5166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":8753727,"byte_end":8753732,"line_start":218,"line_end":218,"column_start":6,"column_end":11},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":5082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":8756401,"byte_end":8756408,"line_start":303,"line_end":303,"column_start":21,"column_end":28},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":5166},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/schedule.rs","byte_start":8756911,"byte_end":8756923,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":5131},"to":{"krate":0,"index":4948}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/shutdown.rs","byte_start":8757796,"byte_end":8757804,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":5176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/task.rs","byte_start":8759424,"byte_end":8759436,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":5151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/task.rs","byte_start":8759662,"byte_end":8759674,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":5151},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/task.rs","byte_start":8759704,"byte_end":8759716,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":5151},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":129965,"byte_end":129972,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":137892,"byte_end":137899,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138448,"byte_end":138455,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138975,"byte_end":138982,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":140925,"byte_end":140932,"line_start":451,"line_end":451,"column_start":10,"column_end":17},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":142878,"byte_end":142885,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":142964,"byte_end":142971,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":143766,"byte_end":143778,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":5216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":145431,"byte_end":145436,"line_start":70,"line_end":70,"column_start":19,"column_end":24},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":641},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":146656,"byte_end":146677,"line_start":112,"line_end":112,"column_start":23,"column_end":44},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":5232},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":147507,"byte_end":147512,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":148422,"byte_end":148427,"line_start":174,"line_end":174,"column_start":10,"column_end":15},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":149620,"byte_end":149625,"line_start":212,"line_end":212,"column_start":21,"column_end":26},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":633},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":149755,"byte_end":149760,"line_start":218,"line_end":218,"column_start":15,"column_end":20},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":633},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150818,"byte_end":150824,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":5265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153920,"byte_end":153926,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":5265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":159716,"byte_end":159722,"line_start":284,"line_end":284,"column_start":10,"column_end":16},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":5265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163286,"byte_end":163301,"line_start":359,"line_end":359,"column_start":21,"column_end":36},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":670},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163449,"byte_end":163464,"line_start":365,"line_end":365,"column_start":23,"column_end":38},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":670},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163622,"byte_end":163637,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":670},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":8761687,"byte_end":8761693,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":5299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":8762162,"byte_end":8762168,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":5299},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":8762484,"byte_end":8762490,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":5299},"to":{"krate":0,"index":544}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":8763142,"byte_end":8763150,"line_start":109,"line_end":109,"column_start":17,"column_end":25},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":5301},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":8763219,"byte_end":8763224,"line_start":115,"line_end":115,"column_start":6,"column_end":11},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":5303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/shell.rs","byte_start":165926,"byte_end":165931,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":5336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/shell.rs","byte_start":166537,"byte_end":166543,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":5341},"to":{"krate":0,"index":825}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/spawner.rs","byte_start":167159,"byte_end":167166,"line_start":22,"line_end":22,"column_start":10,"column_end":17},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":5350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8770272,"byte_end":8770277,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":5397},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8770308,"byte_end":8770313,"line_start":67,"line_end":67,"column_start":25,"column_end":30},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":5397},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8770344,"byte_end":8770350,"line_start":68,"line_end":68,"column_start":25,"column_end":31},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":5392},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8770381,"byte_end":8770387,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":5392},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8771246,"byte_end":8771251,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":5385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8777785,"byte_end":8777790,"line_start":291,"line_end":291,"column_start":9,"column_end":14},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":5388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8782958,"byte_end":8782963,"line_start":441,"line_end":441,"column_start":19,"column_end":24},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":5388},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8783059,"byte_end":8783064,"line_start":447,"line_end":447,"column_start":18,"column_end":23},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":5385},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8783223,"byte_end":8783228,"line_start":455,"line_end":455,"column_start":9,"column_end":14},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":5397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8783416,"byte_end":8783422,"line_start":464,"line_end":464,"column_start":18,"column_end":24},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":5392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8786927,"byte_end":8786933,"line_start":595,"line_end":595,"column_start":27,"column_end":33},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":5392},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/atomic_cell.rs","byte_start":8791087,"byte_end":8791097,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":5472},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/atomic_cell.rs","byte_start":8791134,"byte_end":8791144,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":5472},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/atomic_cell.rs","byte_start":8791160,"byte_end":8791170,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":5472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/atomic_cell.rs","byte_start":8791957,"byte_end":8791967,"line_start":47,"line_end":47,"column_start":18,"column_end":28},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":5472},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/idle.rs","byte_start":8792773,"byte_end":8792777,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":5500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/idle.rs","byte_start":8796650,"byte_end":8796655,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":5666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/idle.rs","byte_start":8798133,"byte_end":8798138,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":5666},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/idle.rs","byte_start":8798311,"byte_end":8798316,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":5666},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":8804080,"byte_end":8804085,"line_start":185,"line_end":185,"column_start":23,"column_end":28},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":5681},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":8807850,"byte_end":8807856,"line_start":282,"line_end":282,"column_start":6,"column_end":12},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":5580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":8808631,"byte_end":8808638,"line_start":313,"line_end":313,"column_start":6,"column_end":13},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":5577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":8812904,"byte_end":8812908,"line_start":444,"line_end":444,"column_start":6,"column_end":10},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":5559},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":8817694,"byte_end":8817700,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":5555},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":8818140,"byte_end":8818143,"line_start":616,"line_end":616,"column_start":25,"column_end":28},"kind":{"Impl":{"id":414}},"from":{"krate":5,"index":4030},"to":{"krate":0,"index":4948}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":8820714,"byte_end":8820720,"line_start":694,"line_end":694,"column_start":6,"column_end":12},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":5568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":8788985,"byte_end":8788995,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":5647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":8790150,"byte_end":8790160,"line_start":86,"line_end":86,"column_start":21,"column_end":31},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":5647},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":8790299,"byte_end":8790309,"line_start":92,"line_end":92,"column_start":15,"column_end":25},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":5647},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":8790416,"byte_end":8790423,"line_start":100,"line_end":100,"column_start":6,"column_end":13},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":5690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":8790768,"byte_end":8790775,"line_start":113,"line_end":113,"column_start":21,"column_end":28},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":5690},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115508,"byte_end":115515,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":5695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":171769,"byte_end":171775,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":5717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":172543,"byte_end":172549,"line_start":85,"line_end":85,"column_start":10,"column_end":16},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":5717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":173316,"byte_end":173326,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":757},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":174173,"byte_end":174189,"line_start":157,"line_end":157,"column_start":10,"column_end":26},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":5737},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":174321,"byte_end":174337,"line_start":163,"line_end":163,"column_start":19,"column_end":35},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":5737},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":176077,"byte_end":176083,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":5717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8828567,"byte_end":8828570,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"kind":{"Impl":{"id":428}},"from":{"krate":5,"index":4366},"to":{"krate":0,"index":5772}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8829292,"byte_end":8829300,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":5900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8829390,"byte_end":8829398,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":5900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8831551,"byte_end":8831558,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":5795},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8831666,"byte_end":8831673,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":5795},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8837745,"byte_end":8837754,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":5840},"to":{"krate":0,"index":5782}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8837868,"byte_end":8837877,"line_start":32,"line_end":32,"column_start":18,"column_end":27},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":5840},"to":{"krate":0,"index":5772}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8838265,"byte_end":8838276,"line_start":51,"line_end":51,"column_start":15,"column_end":26},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":5906},"to":{"krate":0,"index":5782}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8838562,"byte_end":8838572,"line_start":63,"line_end":63,"column_start":6,"column_end":16},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":5911},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8842368,"byte_end":8842378,"line_start":190,"line_end":190,"column_start":18,"column_end":28},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":5867},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8844727,"byte_end":8844733,"line_start":262,"line_end":262,"column_start":6,"column_end":12},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":5919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8845018,"byte_end":8845024,"line_start":273,"line_end":273,"column_start":6,"column_end":12},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":5919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8851213,"byte_end":8851219,"line_start":423,"line_end":423,"column_start":6,"column_end":12},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":5923},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8853077,"byte_end":8853083,"line_start":487,"line_end":487,"column_start":36,"column_end":42},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":5923},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":8888075,"byte_end":8888084,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":6519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":8888230,"byte_end":8888239,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":6519},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":8888278,"byte_end":8888287,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":6519},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":8889238,"byte_end":8889247,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":6530},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":8889393,"byte_end":8889402,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":6530},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":8889441,"byte_end":8889450,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":6530},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/chain.rs","byte_start":8890373,"byte_end":8890378,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":10287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/chain.rs","byte_start":8890558,"byte_end":8890563,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":10287},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8892108,"byte_end":8892122,"line_start":36,"line_end":36,"column_start":34,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":6080},"to":{"krate":0,"index":6009}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8892141,"byte_end":8892148,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":10249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8892432,"byte_end":8892439,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":10249},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8893415,"byte_end":8893421,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"kind":{"Impl":{"id":452}},"from":{"krate":5,"index":5079},"to":{"krate":0,"index":6009}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8893476,"byte_end":8893482,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"kind":{"Impl":{"id":453}},"from":{"krate":5,"index":5079},"to":{"krate":0,"index":6080}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8893871,"byte_end":8893874,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"kind":{"Impl":{"id":454}},"from":{"krate":5,"index":4366},"to":{"krate":0,"index":6009}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8893920,"byte_end":8893923,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"kind":{"Impl":{"id":455}},"from":{"krate":5,"index":4366},"to":{"krate":0,"index":6080}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8894306,"byte_end":8894309,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"kind":{"Impl":{"id":456}},"from":{"krate":5,"index":84},"to":{"krate":0,"index":6009}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8894357,"byte_end":8894360,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"kind":{"Impl":{"id":457}},"from":{"krate":5,"index":84},"to":{"krate":0,"index":6080}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8894875,"byte_end":8894881,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"kind":{"Impl":{"id":458}},"from":{"krate":2,"index":30404},"to":{"krate":0,"index":6009}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8894970,"byte_end":8894976,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"kind":{"Impl":{"id":459}},"from":{"krate":2,"index":30404},"to":{"krate":0,"index":6080}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8896054,"byte_end":8896059,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"kind":{"Impl":{"id":460}},"from":{"krate":19,"index":341},"to":{"krate":0,"index":6009}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8896107,"byte_end":8896112,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"kind":{"Impl":{"id":461}},"from":{"krate":19,"index":341},"to":{"krate":0,"index":6080}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8896512,"byte_end":8896520,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"kind":{"Impl":{"id":462}},"from":{"krate":19,"index":535},"to":{"krate":0,"index":6009}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8896568,"byte_end":8896576,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"kind":{"Impl":{"id":463}},"from":{"krate":19,"index":535},"to":{"krate":0,"index":6080}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8897847,"byte_end":8897852,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":6541},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8897883,"byte_end":8897888,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":6541},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8897919,"byte_end":8897924,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":6541},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8898467,"byte_end":8898472,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":6541},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":8899086,"byte_end":8899092,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":10193},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":8899310,"byte_end":8899316,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":10193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":8899435,"byte_end":8899441,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":10193},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":8900527,"byte_end":8900536,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":10148},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":8900757,"byte_end":8900766,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":10148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":8900888,"byte_end":8900897,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":10148},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fold.rs","byte_start":8901969,"byte_end":8901979,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":10099},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fold.rs","byte_start":8902175,"byte_end":8902185,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":10099},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fuse.rs","byte_start":8903084,"byte_end":8903088,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":10059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fuse.rs","byte_start":8903248,"byte_end":8903252,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":10059},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8904195,"byte_end":8904199,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":6548},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8904861,"byte_end":8904865,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":6548},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":8905611,"byte_end":8905614,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":10005},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":8905803,"byte_end":8905806,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":10005},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":8905927,"byte_end":8905930,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":10005},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/merge.rs","byte_start":8906775,"byte_end":8906780,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":9956},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/merge.rs","byte_start":8907034,"byte_end":8907039,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":9956},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":8908551,"byte_end":8908555,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":6554},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":8908589,"byte_end":8908593,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":6554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":8908734,"byte_end":8908738,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":6554},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8909234,"byte_end":8909238,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":6562},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8909865,"byte_end":8909869,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":6562},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8910416,"byte_end":8910423,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8910454,"byte_end":8910461,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8910492,"byte_end":8910499,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8911192,"byte_end":8911199,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":6568},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8916864,"byte_end":8916873,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":6575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8923874,"byte_end":8923883,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":6575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8925422,"byte_end":8925431,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":6575},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":8926647,"byte_end":8926651,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":9919},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":8926861,"byte_end":8926865,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":9919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":8926998,"byte_end":8927002,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":9919},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":8928228,"byte_end":8928237,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":9874},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":8928458,"byte_end":8928467,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":9874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":8928652,"byte_end":8928661,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":9874},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":8930010,"byte_end":8930017,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":6587},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":8930051,"byte_end":8930058,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":6587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":8930265,"byte_end":8930272,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":6587},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":8930882,"byte_end":8930886,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":9837},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":8931096,"byte_end":8931100,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":9837},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":8931233,"byte_end":8931237,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":9837},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":8932756,"byte_end":8932765,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":9788},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":8933025,"byte_end":8933034,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":9788},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":8933227,"byte_end":8933236,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":9788},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/timeout.rs","byte_start":8965181,"byte_end":8965188,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":9749},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/timeout.rs","byte_start":8965543,"byte_end":8965550,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":9749},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8863317,"byte_end":8863323,"line_start":81,"line_end":81,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":21,"index":68},"to":{"krate":0,"index":6482}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8887305,"byte_end":8887307,"line_start":824,"line_end":824,"column_start":32,"column_end":34},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":6517},"to":{"krate":0,"index":6482}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8984018,"byte_end":8984025,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":7952},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":8987305,"byte_end":8987322,"line_start":128,"line_end":128,"column_start":6,"column_end":23},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":7964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8997889,"byte_end":8997895,"line_start":340,"line_end":340,"column_start":32,"column_end":38},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":6696},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8998022,"byte_end":8998028,"line_start":346,"line_end":346,"column_start":36,"column_end":42},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":6696},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8998189,"byte_end":8998193,"line_start":352,"line_end":352,"column_start":61,"column_end":65},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":6690},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":8998263,"byte_end":8998267,"line_start":353,"line_end":353,"column_start":61,"column_end":65},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":6690},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9001041,"byte_end":9001047,"line_start":444,"line_end":444,"column_start":31,"column_end":37},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":6656},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9001084,"byte_end":9001090,"line_start":445,"line_end":445,"column_start":31,"column_end":37},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":6656},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9001128,"byte_end":9001136,"line_start":447,"line_end":447,"column_start":31,"column_end":39},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":6659},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9001173,"byte_end":9001181,"line_start":448,"line_end":448,"column_start":31,"column_end":39},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":6659},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9001197,"byte_end":9001203,"line_start":450,"line_end":450,"column_start":9,"column_end":15},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":6656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9006839,"byte_end":9006843,"line_start":637,"line_end":637,"column_start":6,"column_end":10},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":6670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9007235,"byte_end":9007241,"line_start":652,"line_end":652,"column_start":19,"column_end":25},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":6656},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9007421,"byte_end":9007427,"line_start":661,"line_end":661,"column_start":18,"column_end":24},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":6656},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9007581,"byte_end":9007589,"line_start":669,"line_end":669,"column_start":9,"column_end":17},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":6659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9012454,"byte_end":9012462,"line_start":787,"line_end":787,"column_start":9,"column_end":17},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":6659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9015215,"byte_end":9015220,"line_start":856,"line_end":856,"column_start":30,"column_end":35},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":6752},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9018634,"byte_end":9018642,"line_start":960,"line_end":960,"column_start":35,"column_end":43},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":6659},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9019092,"byte_end":9019100,"line_start":979,"line_end":979,"column_start":18,"column_end":26},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":6659},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9020284,"byte_end":9020288,"line_start":1019,"line_end":1019,"column_start":12,"column_end":16},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":6690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9021130,"byte_end":9021134,"line_start":1049,"line_end":1049,"column_start":23,"column_end":27},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":6690},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9021864,"byte_end":9021872,"line_start":1073,"line_end":1073,"column_start":20,"column_end":28},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":6659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9023184,"byte_end":9023188,"line_start":1115,"line_end":1115,"column_start":34,"column_end":38},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":6690},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9023912,"byte_end":9023916,"line_start":1137,"line_end":1137,"column_start":21,"column_end":25},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":6690},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9024714,"byte_end":9024720,"line_start":1166,"line_end":1166,"column_start":35,"column_end":41},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":6681},"to":{"krate":0,"index":778}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9025135,"byte_end":9025141,"line_start":1183,"line_end":1183,"column_start":24,"column_end":30},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":6656},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9025285,"byte_end":9025293,"line_start":1189,"line_end":1189,"column_start":24,"column_end":32},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":6659},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9025428,"byte_end":9025437,"line_start":1195,"line_end":1195,"column_start":13,"column_end":22},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":6686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9025610,"byte_end":9025619,"line_start":1204,"line_end":1204,"column_start":22,"column_end":31},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":6686},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9025910,"byte_end":9025919,"line_start":1214,"line_end":1214,"column_start":23,"column_end":32},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":7978},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9026192,"byte_end":9026201,"line_start":1223,"line_end":1223,"column_start":28,"column_end":37},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":7978},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9026228,"byte_end":9026240,"line_start":1225,"line_end":1225,"column_start":23,"column_end":35},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":7990},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9026582,"byte_end":9026594,"line_start":1235,"line_end":1235,"column_start":28,"column_end":40},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":7990},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":9032903,"byte_end":9032908,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":6839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":9042890,"byte_end":9042896,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":6853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":9043378,"byte_end":9043384,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":6853},"to":{"krate":2,"index":2223}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9044022,"byte_end":9044028,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":6907},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9044160,"byte_end":9044166,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":6907},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9044573,"byte_end":9044581,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":6916},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9046353,"byte_end":9046361,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":6916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9048789,"byte_end":9048797,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":6916},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9048857,"byte_end":9048865,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":6916},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9049053,"byte_end":9049059,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":6907},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9060449,"byte_end":9060451,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":6981},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9060852,"byte_end":9060854,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":6990},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9061161,"byte_end":9061170,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":8035},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9061432,"byte_end":9061444,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":8042},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9063139,"byte_end":9063143,"line_start":120,"line_end":120,"column_start":27,"column_end":31},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":7014},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9063776,"byte_end":9063784,"line_start":144,"line_end":144,"column_start":24,"column_end":32},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":7026},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9064050,"byte_end":9064054,"line_start":153,"line_end":153,"column_start":40,"column_end":44},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":7014},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9064103,"byte_end":9064107,"line_start":154,"line_end":154,"column_start":40,"column_end":44},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":7014},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9064586,"byte_end":9064588,"line_start":178,"line_end":178,"column_start":12,"column_end":14},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":6981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9065286,"byte_end":9065288,"line_start":204,"line_end":204,"column_start":9,"column_end":11},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":6981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9065436,"byte_end":9065438,"line_start":210,"line_end":210,"column_start":9,"column_end":11},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":6981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9065616,"byte_end":9065618,"line_start":216,"line_end":216,"column_start":22,"column_end":24},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":6981},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9066018,"byte_end":9066020,"line_start":232,"line_end":232,"column_start":21,"column_end":23},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":6981},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9066429,"byte_end":9066431,"line_start":253,"line_end":253,"column_start":12,"column_end":14},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":6990},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9069551,"byte_end":9069553,"line_start":344,"line_end":344,"column_start":21,"column_end":23},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":6990},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9069989,"byte_end":9069993,"line_start":365,"line_end":365,"column_start":12,"column_end":16},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":7014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9070457,"byte_end":9070461,"line_start":387,"line_end":387,"column_start":21,"column_end":25},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":7014},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9071010,"byte_end":9071022,"line_start":404,"line_end":404,"column_start":32,"column_end":44},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":8022},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9072622,"byte_end":9072633,"line_start":475,"line_end":475,"column_start":20,"column_end":31},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":445},"to":{"krate":0,"index":7004}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":9075350,"byte_end":9075352,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":7139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":9081056,"byte_end":9081058,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":7139},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":9081335,"byte_end":9081337,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":7143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":9084736,"byte_end":9084738,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":7143},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9085412,"byte_end":9085427,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":7179},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9085568,"byte_end":9085583,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":7179},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9086041,"byte_end":9086058,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":7188},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9087036,"byte_end":9087053,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":7188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9089525,"byte_end":9089542,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":7188},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9089708,"byte_end":9089723,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":7179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9090833,"byte_end":9090842,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":8035},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9091002,"byte_end":9091011,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":8035},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9091497,"byte_end":9091509,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":8042},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9091542,"byte_end":9091554,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":8042},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9091894,"byte_end":9091906,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":8042},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9092135,"byte_end":9092144,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":8053},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9092274,"byte_end":9092283,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":8053},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9092769,"byte_end":9092781,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":8058},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9093087,"byte_end":9093099,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":8058},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9093256,"byte_end":9093267,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":8068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9093366,"byte_end":9093377,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":8068},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9093507,"byte_end":9093518,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":8068},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9094022,"byte_end":9094038,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":8078},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9094075,"byte_end":9094091,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":8078},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9100407,"byte_end":9100412,"line_start":158,"line_end":158,"column_start":25,"column_end":30},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":8089},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9100466,"byte_end":9100471,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":8089},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9100525,"byte_end":9100535,"line_start":160,"line_end":160,"column_start":25,"column_end":35},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":7257},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9100600,"byte_end":9100615,"line_start":161,"line_end":161,"column_start":25,"column_end":40},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":7261},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9100902,"byte_end":9100914,"line_start":171,"line_end":171,"column_start":23,"column_end":35},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":8096},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9101051,"byte_end":9101063,"line_start":177,"line_end":177,"column_start":16,"column_end":28},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":8096},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9101871,"byte_end":9101876,"line_start":203,"line_end":203,"column_start":17,"column_end":22},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":8089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9106449,"byte_end":9106454,"line_start":361,"line_end":361,"column_start":21,"column_end":26},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":8089},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9106538,"byte_end":9106543,"line_start":367,"line_end":367,"column_start":21,"column_end":26},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":8089},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9106692,"byte_end":9106702,"line_start":378,"line_end":378,"column_start":26,"column_end":36},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":7257},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9106803,"byte_end":9106813,"line_start":384,"line_end":384,"column_start":27,"column_end":37},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":7257},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9106960,"byte_end":9106970,"line_start":391,"line_end":391,"column_start":30,"column_end":40},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":7257},"to":{"krate":2,"index":2155}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9107127,"byte_end":9107137,"line_start":397,"line_end":397,"column_start":45,"column_end":55},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":7257},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9107303,"byte_end":9107313,"line_start":403,"line_end":403,"column_start":49,"column_end":59},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":7257},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9107491,"byte_end":9107506,"line_start":411,"line_end":411,"column_start":26,"column_end":41},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":7261},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9107603,"byte_end":9107618,"line_start":417,"line_end":417,"column_start":27,"column_end":42},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":7261},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9107761,"byte_end":9107776,"line_start":424,"line_end":424,"column_start":30,"column_end":45},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":7261},"to":{"krate":2,"index":2155}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9107929,"byte_end":9107944,"line_start":430,"line_end":430,"column_start":45,"column_end":60},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":7261},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9108106,"byte_end":9108121,"line_start":436,"line_end":436,"column_start":49,"column_end":64},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":7261},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9112085,"byte_end":9112093,"line_start":135,"line_end":135,"column_start":26,"column_end":34},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":8113},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9112126,"byte_end":9112134,"line_start":136,"line_end":136,"column_start":26,"column_end":34},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":8113},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9112397,"byte_end":9112403,"line_start":154,"line_end":154,"column_start":6,"column_end":12},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":8101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9116411,"byte_end":9116417,"line_start":282,"line_end":282,"column_start":18,"column_end":24},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":8101},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9118155,"byte_end":9118163,"line_start":336,"line_end":336,"column_start":6,"column_end":14},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":8113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9118673,"byte_end":9118681,"line_start":352,"line_end":352,"column_start":17,"column_end":25},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":8113},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9123511,"byte_end":9123519,"line_start":474,"line_end":474,"column_start":15,"column_end":23},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":8113},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9126477,"byte_end":9126483,"line_start":539,"line_end":539,"column_start":35,"column_end":41},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":8106},"to":{"krate":0,"index":778}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9128359,"byte_end":9128368,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":8142},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9128530,"byte_end":9128539,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":8142},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9128608,"byte_end":9128620,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":8154},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9128919,"byte_end":9128931,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":8154},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9130742,"byte_end":9130748,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":8130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9137049,"byte_end":9137055,"line_start":357,"line_end":357,"column_start":18,"column_end":24},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":8130},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9137194,"byte_end":9137202,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":8136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9141593,"byte_end":9141601,"line_start":514,"line_end":514,"column_start":18,"column_end":26},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":8136},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9141748,"byte_end":9141756,"line_start":522,"line_end":522,"column_start":20,"column_end":28},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":8136},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9142219,"byte_end":9142224,"line_start":538,"line_end":538,"column_start":9,"column_end":14},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":7412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9146596,"byte_end":9146601,"line_start":684,"line_end":684,"column_start":31,"column_end":36},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":7412},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9146638,"byte_end":9146643,"line_start":685,"line_end":685,"column_start":31,"column_end":36},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":7412},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9146668,"byte_end":9146673,"line_start":687,"line_end":687,"column_start":18,"column_end":23},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":7412},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9147042,"byte_end":9147047,"line_start":705,"line_end":705,"column_start":36,"column_end":41},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":7412},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9147442,"byte_end":9147447,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":8167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9149160,"byte_end":9149165,"line_start":786,"line_end":786,"column_start":21,"column_end":26},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":8167},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9152643,"byte_end":9152652,"line_start":93,"line_end":93,"column_start":6,"column_end":15},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":7525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9162573,"byte_end":9162582,"line_start":357,"line_end":357,"column_start":21,"column_end":30},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":7525},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9162783,"byte_end":9162789,"line_start":365,"line_end":365,"column_start":6,"column_end":12},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":7537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9163655,"byte_end":9163662,"line_start":394,"line_end":394,"column_start":17,"column_end":24},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":7531},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9164340,"byte_end":9164347,"line_start":418,"line_end":418,"column_start":10,"column_end":17},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":7531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9165146,"byte_end":9165153,"line_start":448,"line_end":448,"column_start":15,"column_end":22},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":7531},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9166795,"byte_end":9166802,"line_start":485,"line_end":485,"column_start":22,"column_end":29},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":7531},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9166849,"byte_end":9166861,"line_start":489,"line_end":489,"column_start":6,"column_end":18},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":8180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9166954,"byte_end":9166966,"line_start":495,"line_end":495,"column_start":23,"column_end":35},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":8180},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9167110,"byte_end":9167122,"line_start":501,"line_end":501,"column_start":28,"column_end":40},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":8180},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9167169,"byte_end":9167184,"line_start":505,"line_end":505,"column_start":6,"column_end":21},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":8173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9167806,"byte_end":9167821,"line_start":526,"line_end":526,"column_start":23,"column_end":38},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":8173},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9168107,"byte_end":9168122,"line_start":535,"line_end":535,"column_start":28,"column_end":43},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":8173},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9168215,"byte_end":9168221,"line_start":540,"line_end":540,"column_start":35,"column_end":41},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":7537},"to":{"krate":0,"index":778}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9173490,"byte_end":9173499,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":7619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9189693,"byte_end":9189702,"line_start":578,"line_end":578,"column_start":15,"column_end":24},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":7619},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9189781,"byte_end":9189790,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":7619},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9190168,"byte_end":9190177,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":7619},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9190202,"byte_end":9190211,"line_start":596,"line_end":596,"column_start":22,"column_end":31},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":7619},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9190249,"byte_end":9190255,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":8185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9196661,"byte_end":9196667,"line_start":793,"line_end":793,"column_start":18,"column_end":24},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":8185},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9196740,"byte_end":9196746,"line_start":799,"line_end":799,"column_start":15,"column_end":21},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":8185},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9197168,"byte_end":9197180,"line_start":815,"line_end":815,"column_start":6,"column_end":18},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":8190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9197360,"byte_end":9197372,"line_start":825,"line_end":825,"column_start":23,"column_end":35},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":8190},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9197516,"byte_end":9197528,"line_start":831,"line_end":831,"column_start":28,"column_end":40},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":8190},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9197575,"byte_end":9197590,"line_start":835,"line_end":835,"column_start":6,"column_end":21},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":8195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9198120,"byte_end":9198135,"line_start":854,"line_end":854,"column_start":23,"column_end":38},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":8195},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9198421,"byte_end":9198436,"line_start":863,"line_end":863,"column_start":28,"column_end":43},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":8195},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9198474,"byte_end":9198480,"line_start":867,"line_end":867,"column_start":6,"column_end":12},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":8202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9203893,"byte_end":9203901,"line_start":1034,"line_end":1034,"column_start":6,"column_end":14},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":8208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9207564,"byte_end":9207572,"line_start":1172,"line_end":1172,"column_start":21,"column_end":29},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":8208},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9207925,"byte_end":9207936,"line_start":1188,"line_end":1188,"column_start":6,"column_end":17},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":8226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9210665,"byte_end":9210674,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":8234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9212769,"byte_end":9212784,"line_start":138,"line_end":138,"column_start":10,"column_end":25},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":8238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9213029,"byte_end":9213049,"line_start":147,"line_end":147,"column_start":6,"column_end":26},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":8245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9213303,"byte_end":9213318,"line_start":156,"line_end":156,"column_start":19,"column_end":34},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":8238},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9213426,"byte_end":9213446,"line_start":162,"line_end":162,"column_start":15,"column_end":35},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":8245},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9217267,"byte_end":9217282,"line_start":113,"line_end":113,"column_start":21,"column_end":36},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":8280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9217549,"byte_end":9217564,"line_start":123,"line_end":123,"column_start":26,"column_end":41},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":8280},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9218568,"byte_end":9218574,"line_start":156,"line_end":156,"column_start":25,"column_end":31},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":8255},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9218628,"byte_end":9218634,"line_start":157,"line_end":157,"column_start":25,"column_end":31},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":8255},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9218695,"byte_end":9218710,"line_start":158,"line_end":158,"column_start":25,"column_end":40},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":8262},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9218775,"byte_end":9218791,"line_start":159,"line_end":159,"column_start":25,"column_end":41},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":8271},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9218849,"byte_end":9218855,"line_start":161,"line_end":161,"column_start":17,"column_end":23},"kind":{"Impl":{"id":687}},"from":{"krate":0,"index":8255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9221972,"byte_end":9221987,"line_start":264,"line_end":264,"column_start":32,"column_end":47},"kind":{"Impl":{"id":688}},"from":{"krate":0,"index":8262},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9222126,"byte_end":9222142,"line_start":272,"line_end":272,"column_start":32,"column_end":48},"kind":{"Impl":{"id":689}},"from":{"krate":0,"index":8271},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9222284,"byte_end":9222300,"line_start":280,"line_end":280,"column_start":35,"column_end":51},"kind":{"Impl":{"id":690}},"from":{"krate":0,"index":8271},"to":{"krate":2,"index":2155}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9222422,"byte_end":9222428,"line_start":286,"line_end":286,"column_start":21,"column_end":27},"kind":{"Impl":{"id":691}},"from":{"krate":0,"index":8255},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9222512,"byte_end":9222518,"line_start":292,"line_end":292,"column_start":21,"column_end":27},"kind":{"Impl":{"id":692}},"from":{"krate":0,"index":8255},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9228793,"byte_end":9228804,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":693}},"from":{"krate":0,"index":7830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9234731,"byte_end":9234742,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"kind":{"Impl":{"id":694}},"from":{"krate":0,"index":7830},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9234828,"byte_end":9234839,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"kind":{"Impl":{"id":695}},"from":{"krate":0,"index":7830},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9234972,"byte_end":9234983,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"kind":{"Impl":{"id":696}},"from":{"krate":0,"index":7830},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9235008,"byte_end":9235019,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"kind":{"Impl":{"id":697}},"from":{"krate":0,"index":7830},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9235115,"byte_end":9235120,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"kind":{"Impl":{"id":698}},"from":{"krate":2,"index":8669},"to":{"krate":0,"index":7853}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9238661,"byte_end":9238670,"line_start":108,"line_end":108,"column_start":42,"column_end":51},"kind":{"Impl":{"id":699}},"from":{"krate":0,"index":8310},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9238850,"byte_end":9238859,"line_start":114,"line_end":114,"column_start":47,"column_end":56},"kind":{"Impl":{"id":700}},"from":{"krate":0,"index":8310},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9241018,"byte_end":9241026,"line_start":204,"line_end":204,"column_start":9,"column_end":17},"kind":{"Impl":{"id":701}},"from":{"krate":0,"index":8289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9242298,"byte_end":9242306,"line_start":248,"line_end":248,"column_start":16,"column_end":24},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":8289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9243672,"byte_end":9243680,"line_start":292,"line_end":292,"column_start":42,"column_end":50},"kind":{"Impl":{"id":703}},"from":{"krate":0,"index":8289},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9243939,"byte_end":9243947,"line_start":302,"line_end":302,"column_start":19,"column_end":27},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":8289},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9244250,"byte_end":9244258,"line_start":314,"line_end":314,"column_start":18,"column_end":26},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":8289},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9244372,"byte_end":9244378,"line_start":320,"line_end":320,"column_start":9,"column_end":15},"kind":{"Impl":{"id":706}},"from":{"krate":0,"index":8296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9245913,"byte_end":9245919,"line_start":373,"line_end":373,"column_start":18,"column_end":24},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":8296},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9246158,"byte_end":9246161,"line_start":384,"line_end":384,"column_start":24,"column_end":27},"kind":{"Impl":{"id":708}},"from":{"krate":0,"index":8302},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9246302,"byte_end":9246308,"line_start":394,"line_end":394,"column_start":18,"column_end":24},"kind":{"Impl":{"id":709}},"from":{"krate":0,"index":8316},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9246410,"byte_end":9246417,"line_start":402,"line_end":402,"column_start":6,"column_end":13},"kind":{"Impl":{"id":710}},"from":{"krate":0,"index":8325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9246640,"byte_end":9246647,"line_start":411,"line_end":411,"column_start":30,"column_end":37},"kind":{"Impl":{"id":711}},"from":{"krate":0,"index":8325},"to":{"krate":2,"index":1697}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9246764,"byte_end":9246771,"line_start":417,"line_end":417,"column_start":23,"column_end":30},"kind":{"Impl":{"id":712}},"from":{"krate":0,"index":8325},"to":{"krate":2,"index":1702}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9246801,"byte_end":9246808,"line_start":419,"line_end":419,"column_start":26,"column_end":33},"kind":{"Impl":{"id":713}},"from":{"krate":0,"index":8325},"to":{"krate":2,"index":6503}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9246955,"byte_end":9246962,"line_start":425,"line_end":425,"column_start":26,"column_end":33},"kind":{"Impl":{"id":714}},"from":{"krate":0,"index":8325},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/yield_now.rs","byte_start":9265773,"byte_end":9265781,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":715}},"from":{"krate":0,"index":8369},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9272913,"byte_end":9272921,"line_start":221,"line_end":221,"column_start":6,"column_end":14},"kind":{"Impl":{"id":716}},"from":{"krate":0,"index":8517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9280763,"byte_end":9280771,"line_start":446,"line_end":446,"column_start":21,"column_end":29},"kind":{"Impl":{"id":717}},"from":{"krate":0,"index":8517},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9280910,"byte_end":9280918,"line_start":452,"line_end":452,"column_start":17,"column_end":25},"kind":{"Impl":{"id":718}},"from":{"krate":0,"index":8517},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9281883,"byte_end":9281891,"line_start":476,"line_end":476,"column_start":18,"column_end":26},"kind":{"Impl":{"id":719}},"from":{"krate":0,"index":8517},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9281972,"byte_end":9281980,"line_start":482,"line_end":482,"column_start":15,"column_end":23},"kind":{"Impl":{"id":720}},"from":{"krate":0,"index":8517},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9282847,"byte_end":9282855,"line_start":512,"line_end":512,"column_start":28,"column_end":36},"kind":{"Impl":{"id":721}},"from":{"krate":0,"index":9702},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9283740,"byte_end":9283746,"line_start":543,"line_end":543,"column_start":6,"column_end":12},"kind":{"Impl":{"id":722}},"from":{"krate":0,"index":8400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9284309,"byte_end":9284312,"line_start":562,"line_end":562,"column_start":25,"column_end":28},"kind":{"Impl":{"id":723}},"from":{"krate":5,"index":4030},"to":{"krate":0,"index":4948}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9287727,"byte_end":9287735,"line_start":98,"line_end":98,"column_start":18,"column_end":26},"kind":{"Impl":{"id":724}},"from":{"krate":0,"index":8469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9289511,"byte_end":9289519,"line_start":163,"line_end":163,"column_start":25,"column_end":33},"kind":{"Impl":{"id":725}},"from":{"krate":0,"index":8469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9289727,"byte_end":9289735,"line_start":171,"line_end":171,"column_start":33,"column_end":41},"kind":{"Impl":{"id":726}},"from":{"krate":0,"index":8469},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9290056,"byte_end":9290071,"line_start":186,"line_end":186,"column_start":40,"column_end":55},"kind":{"Impl":{"id":727}},"from":{"krate":0,"index":9642},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9290372,"byte_end":9290377,"line_start":196,"line_end":196,"column_start":26,"column_end":31},"kind":{"Impl":{"id":728}},"from":{"krate":0,"index":8497},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9290995,"byte_end":9290996,"line_start":220,"line_end":220,"column_start":37,"column_end":38},"kind":{"Impl":{"id":729}},"from":{"krate":0,"index":8510},"to":{"krate":0,"index":8508}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9291181,"byte_end":9291192,"line_start":228,"line_end":228,"column_start":21,"column_end":32},"kind":{"Impl":{"id":730}},"from":{"krate":0,"index":8529},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9291336,"byte_end":9291347,"line_start":234,"line_end":234,"column_start":23,"column_end":34},"kind":{"Impl":{"id":731}},"from":{"krate":0,"index":8529},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9291494,"byte_end":9291505,"line_start":240,"line_end":240,"column_start":16,"column_end":27},"kind":{"Impl":{"id":732}},"from":{"krate":0,"index":8529},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/clock.rs","byte_start":9296090,"byte_end":9296095,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"kind":{"Impl":{"id":733}},"from":{"krate":0,"index":9021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9306617,"byte_end":9306627,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"kind":{"Impl":{"id":734}},"from":{"krate":0,"index":9026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9324270,"byte_end":9324280,"line_start":751,"line_end":751,"column_start":19,"column_end":29},"kind":{"Impl":{"id":735}},"from":{"krate":0,"index":9026},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9324308,"byte_end":9324318,"line_start":753,"line_end":753,"column_start":21,"column_end":31},"kind":{"Impl":{"id":736}},"from":{"krate":0,"index":9026},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9324455,"byte_end":9324465,"line_start":760,"line_end":760,"column_start":34,"column_end":44},"kind":{"Impl":{"id":737}},"from":{"krate":0,"index":9026},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9324847,"byte_end":9324852,"line_start":770,"line_end":770,"column_start":26,"column_end":31},"kind":{"Impl":{"id":738}},"from":{"krate":0,"index":9051},"to":{"krate":0,"index":8970}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9326979,"byte_end":9326984,"line_start":852,"line_end":852,"column_start":21,"column_end":26},"kind":{"Impl":{"id":739}},"from":{"krate":0,"index":9051},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9327114,"byte_end":9327117,"line_start":861,"line_end":861,"column_start":6,"column_end":9},"kind":{"Impl":{"id":740}},"from":{"krate":0,"index":9045},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9327204,"byte_end":9327211,"line_start":867,"line_end":867,"column_start":9,"column_end":16},"kind":{"Impl":{"id":741}},"from":{"krate":0,"index":9037},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9329749,"byte_end":9329754,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"kind":{"Impl":{"id":742}},"from":{"krate":0,"index":9068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9330732,"byte_end":9330737,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"kind":{"Impl":{"id":743}},"from":{"krate":0,"index":9068},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":9344061,"byte_end":9344072,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"kind":{"Impl":{"id":744}},"from":{"krate":0,"index":9072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":9346050,"byte_end":9346068,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"kind":{"Impl":{"id":745}},"from":{"krate":0,"index":9076},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":9346640,"byte_end":9346658,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"kind":{"Impl":{"id":746}},"from":{"krate":0,"index":9076},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9350631,"byte_end":9350636,"line_start":107,"line_end":107,"column_start":6,"column_end":11},"kind":{"Impl":{"id":747}},"from":{"krate":0,"index":9080},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9356864,"byte_end":9356869,"line_start":329,"line_end":329,"column_start":15,"column_end":20},"kind":{"Impl":{"id":748}},"from":{"krate":0,"index":9080},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9357077,"byte_end":9357082,"line_start":340,"line_end":340,"column_start":22,"column_end":27},"kind":{"Impl":{"id":749}},"from":{"krate":0,"index":9080},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9357107,"byte_end":9357112,"line_start":341,"line_end":341,"column_start":22,"column_end":27},"kind":{"Impl":{"id":750}},"from":{"krate":0,"index":9080},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/handle.rs","byte_start":9357489,"byte_end":9357495,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":751}},"from":{"krate":0,"index":9104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/handle.rs","byte_start":9358140,"byte_end":9358146,"line_start":34,"line_end":34,"column_start":21,"column_end":27},"kind":{"Impl":{"id":752}},"from":{"krate":0,"index":9104},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/registration.rs","byte_start":9358591,"byte_end":9358603,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"kind":{"Impl":{"id":753}},"from":{"krate":0,"index":9108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/registration.rs","byte_start":9359513,"byte_end":9359525,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"kind":{"Impl":{"id":754}},"from":{"krate":0,"index":9108},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/stack.rs","byte_start":9359809,"byte_end":9359814,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"kind":{"Impl":{"id":755}},"from":{"krate":0,"index":9112},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/stack.rs","byte_start":9359905,"byte_end":9359910,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"kind":{"Impl":{"id":756}},"from":{"krate":0,"index":9112},"to":{"krate":0,"index":8970}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9335627,"byte_end":9335633,"line_start":122,"line_end":122,"column_start":9,"column_end":15},"kind":{"Impl":{"id":757}},"from":{"krate":0,"index":9116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9339282,"byte_end":9339288,"line_start":234,"line_end":234,"column_start":18,"column_end":24},"kind":{"Impl":{"id":758}},"from":{"krate":0,"index":9116},"to":{"krate":0,"index":544}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9341277,"byte_end":9341283,"line_start":308,"line_end":308,"column_start":18,"column_end":24},"kind":{"Impl":{"id":759}},"from":{"krate":0,"index":9116},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9341760,"byte_end":9341765,"line_start":327,"line_end":327,"column_start":6,"column_end":11},"kind":{"Impl":{"id":760}},"from":{"krate":0,"index":8785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9343382,"byte_end":9343387,"line_start":389,"line_end":389,"column_start":21,"column_end":26},"kind":{"Impl":{"id":761}},"from":{"krate":0,"index":8785},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9364182,"byte_end":9364187,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"kind":{"Impl":{"id":762}},"from":{"krate":0,"index":9125},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9364902,"byte_end":9364907,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"kind":{"Impl":{"id":763}},"from":{"krate":0,"index":9125},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9364934,"byte_end":9364939,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":{"Impl":{"id":764}},"from":{"krate":0,"index":9125},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9365645,"byte_end":9365652,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"kind":{"Impl":{"id":765}},"from":{"krate":0,"index":9137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9369426,"byte_end":9369433,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"kind":{"Impl":{"id":766}},"from":{"krate":0,"index":9137},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9369562,"byte_end":9369569,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"kind":{"Impl":{"id":767}},"from":{"krate":1,"index":8038},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9369684,"byte_end":9369691,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"kind":{"Impl":{"id":768}},"from":{"krate":0,"index":9137},"to":{"krate":2,"index":2036}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9369856,"byte_end":9369863,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"kind":{"Impl":{"id":769}},"from":{"krate":0,"index":9137},"to":{"krate":2,"index":2067}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9369968,"byte_end":9369975,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"kind":{"Impl":{"id":770}},"from":{"krate":0,"index":9137},"to":{"krate":2,"index":2041}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9370116,"byte_end":9370123,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"kind":{"Impl":{"id":771}},"from":{"krate":0,"index":9137},"to":{"krate":2,"index":2041}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9370284,"byte_end":9370291,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"kind":{"Impl":{"id":772}},"from":{"krate":0,"index":9137},"to":{"krate":2,"index":2071}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9370398,"byte_end":9370405,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"kind":{"Impl":{"id":773}},"from":{"krate":0,"index":9137},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9374141,"byte_end":9374149,"line_start":119,"line_end":119,"column_start":6,"column_end":14},"kind":{"Impl":{"id":774}},"from":{"krate":0,"index":9160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9375444,"byte_end":9375452,"line_start":164,"line_end":164,"column_start":32,"column_end":40},"kind":{"Impl":{"id":775}},"from":{"krate":0,"index":9160},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9378784,"byte_end":9378791,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"kind":{"Impl":{"id":776}},"from":{"krate":0,"index":9165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9378920,"byte_end":9378927,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"kind":{"Impl":{"id":777}},"from":{"krate":0,"index":9611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9379465,"byte_end":9379472,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"kind":{"Impl":{"id":778}},"from":{"krate":0,"index":9611},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9380050,"byte_end":9380057,"line_start":172,"line_end":172,"column_start":23,"column_end":30},"kind":{"Impl":{"id":779}},"from":{"krate":0,"index":9165},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9380201,"byte_end":9380208,"line_start":178,"line_end":178,"column_start":28,"column_end":35},"kind":{"Impl":{"id":780}},"from":{"krate":0,"index":9165},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9380245,"byte_end":9380250,"line_start":180,"line_end":180,"column_start":33,"column_end":38},"kind":{"Impl":{"id":781}},"from":{"krate":1,"index":2591},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9398390,"byte_end":9398398,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"kind":{"Impl":{"id":782}},"from":{"krate":0,"index":9563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9399213,"byte_end":9399221,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"kind":{"Impl":{"id":783}},"from":{"krate":0,"index":9563},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/level.rs","byte_start":9390154,"byte_end":9390159,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"kind":{"Impl":{"id":784}},"from":{"krate":0,"index":8943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/level.rs","byte_start":9394911,"byte_end":9394916,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"kind":{"Impl":{"id":785}},"from":{"krate":0,"index":8943},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":9396032,"byte_end":9396039,"line_start":4,"line_end":4,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1959},"to":{"krate":0,"index":8970}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/mod.rs","byte_start":9381975,"byte_end":9381980,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"kind":{"Impl":{"id":786}},"from":{"krate":0,"index":9207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/mod.rs","byte_start":9387688,"byte_end":9387692,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"kind":{"Impl":{"id":787}},"from":{"krate":0,"index":9221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/bit.rs","byte_start":9400054,"byte_end":9400058,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":788}},"from":{"krate":0,"index":9415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/bit.rs","byte_start":9401532,"byte_end":9401536,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"kind":{"Impl":{"id":789}},"from":{"krate":0,"index":9415},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/addr.rs","byte_start":9408755,"byte_end":9408762,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"kind":{"Impl":{"id":790}},"from":{"krate":0,"index":9421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/entry.rs","byte_start":9411397,"byte_end":9411404,"line_start":3,"line_end":3,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1959},"to":{"krate":0,"index":9270}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/generation.rs","byte_start":9411791,"byte_end":9411801,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":791}},"from":{"krate":0,"index":9436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9412940,"byte_end":9412945,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":792}},"from":{"krate":0,"index":9293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9413287,"byte_end":9413293,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"kind":{"Impl":{"id":793}},"from":{"krate":0,"index":9295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9417245,"byte_end":9417250,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"kind":{"Impl":{"id":794}},"from":{"krate":0,"index":9293},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9417556,"byte_end":9417562,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"kind":{"Impl":{"id":795}},"from":{"krate":0,"index":9295},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/shard.rs","byte_start":9419705,"byte_end":9419710,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"kind":{"Impl":{"id":796}},"from":{"krate":0,"index":9339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/shard.rs","byte_start":9421389,"byte_end":9421394,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"kind":{"Impl":{"id":797}},"from":{"krate":0,"index":9339},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/slot.rs","byte_start":9421771,"byte_end":9421775,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"kind":{"Impl":{"id":798}},"from":{"krate":0,"index":9362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/stack.rs","byte_start":9422746,"byte_end":9422759,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"kind":{"Impl":{"id":799}},"from":{"krate":0,"index":9383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/stack.rs","byte_start":9423587,"byte_end":9423600,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"kind":{"Impl":{"id":800}},"from":{"krate":0,"index":9383},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9403134,"byte_end":9403138,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"kind":{"Impl":{"id":801}},"from":{"krate":0,"index":9398},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9403175,"byte_end":9403179,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"kind":{"Impl":{"id":802}},"from":{"krate":0,"index":9398},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9403202,"byte_end":9403206,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"kind":{"Impl":{"id":803}},"from":{"krate":0,"index":9398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9404721,"byte_end":9404725,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"kind":{"Impl":{"id":804}},"from":{"krate":0,"index":9398},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180390,"byte_end":180400,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"kind":{"Impl":{"id":805}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180459,"byte_end":180469,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"kind":{"Impl":{"id":806}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181758,"byte_end":181766,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"kind":{"Impl":{"id":807}},"from":{"krate":0,"index":784},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181803,"byte_end":181811,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"kind":{"Impl":{"id":808}},"from":{"krate":0,"index":784},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181865,"byte_end":181875,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"kind":{"Impl":{"id":809}},"from":{"krate":0,"index":770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":184879,"byte_end":184889,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"kind":{"Impl":{"id":810}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":185134,"byte_end":185144,"line_start":177,"line_end":177,"column_start":19,"column_end":29},"kind":{"Impl":{"id":811}},"from":{"krate":0,"index":770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":185544,"byte_end":185554,"line_start":195,"line_end":195,"column_start":19,"column_end":29},"kind":{"Impl":{"id":812}},"from":{"krate":0,"index":770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":185776,"byte_end":185780,"line_start":204,"line_end":204,"column_start":36,"column_end":40},"kind":{"Impl":{"id":813}},"from":{"krate":0,"index":9464},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":186227,"byte_end":186235,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"kind":{"Impl":{"id":814}},"from":{"krate":0,"index":784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":186434,"byte_end":186442,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"kind":{"Impl":{"id":815}},"from":{"krate":0,"index":784},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/rand.rs","byte_start":196514,"byte_end":196522,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":816}},"from":{"krate":0,"index":9477},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/wake.rs","byte_start":198062,"byte_end":198066,"line_start":8,"line_end":8,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":1971},"to":{"krate":0,"index":825}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/wake.rs","byte_start":198069,"byte_end":198073,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1983},"to":{"krate":0,"index":825}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/wake.rs","byte_start":198384,"byte_end":198392,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"kind":{"Impl":{"id":817}},"from":{"krate":0,"index":9486},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9424412,"byte_end":9424419,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"kind":{"Impl":{"id":818}},"from":{"krate":0,"index":9502},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9424456,"byte_end":9424463,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"kind":{"Impl":{"id":819}},"from":{"krate":0,"index":9502},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9424501,"byte_end":9424510,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"kind":{"Impl":{"id":820}},"from":{"krate":0,"index":9506},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9424696,"byte_end":9424703,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"kind":{"Impl":{"id":821}},"from":{"krate":0,"index":9502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9425337,"byte_end":9425346,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"kind":{"Impl":{"id":822}},"from":{"krate":0,"index":9506},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9425478,"byte_end":9425487,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"kind":{"Impl":{"id":823}},"from":{"krate":0,"index":9506},"to":{"krate":2,"index":2155}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9425609,"byte_end":9425618,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"kind":{"Impl":{"id":824}},"from":{"krate":0,"index":9506},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202358,"byte_end":202366,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":825}},"from":{"krate":0,"index":9535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202616,"byte_end":202624,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":826}},"from":{"krate":0,"index":9535},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202729,"byte_end":202737,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":827}},"from":{"krate":0,"index":9535},"to":{"krate":2,"index":2155}},{"span":{"file_name":"/home/erik/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":203046,"byte_end":203056,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":828}},"from":{"krate":0,"index":9544},"to":{"krate":4294967295,"index":4294967295}}]}